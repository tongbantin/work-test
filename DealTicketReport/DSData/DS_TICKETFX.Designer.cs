//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KKB.DealTicketReport.DSData {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_TICKETFX")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_TICKETFX : global::System.Data.DataSet {
        
        private TB_TICKETFXDataTable tableTB_TICKETFX;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_TICKETFX() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_TICKETFX(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TB_TICKETFX"] != null)) {
                    base.Tables.Add(new TB_TICKETFXDataTable(ds.Tables["TB_TICKETFX"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_TICKETFXDataTable TB_TICKETFX {
            get {
                return this.tableTB_TICKETFX;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_TICKETFX cln = ((DS_TICKETFX)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TB_TICKETFX"] != null)) {
                    base.Tables.Add(new TB_TICKETFXDataTable(ds.Tables["TB_TICKETFX"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTB_TICKETFX = ((TB_TICKETFXDataTable)(base.Tables["TB_TICKETFX"]));
            if ((initTable == true)) {
                if ((this.tableTB_TICKETFX != null)) {
                    this.tableTB_TICKETFX.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_TICKETFX";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_TICKETFX.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTB_TICKETFX = new TB_TICKETFXDataTable();
            base.Tables.Add(this.tableTB_TICKETFX);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_TICKETFX() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_TICKETFX ds = new DS_TICKETFX();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TB_TICKETFXRowChangeEventHandler(object sender, TB_TICKETFXRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_TICKETFXDataTable : global::System.Data.TypedTableBase<TB_TICKETFXRow> {
            
            private global::System.Data.DataColumn columnBR;
            
            private global::System.Data.DataColumn columnPRODUCT;
            
            private global::System.Data.DataColumn columnPROD_DESCRIPTION;
            
            private global::System.Data.DataColumn columnPRODTYPE;
            
            private global::System.Data.DataColumn columnPORT;
            
            private global::System.Data.DataColumn columnCOST;
            
            private global::System.Data.DataColumn columnTRAD;
            
            private global::System.Data.DataColumn columnDEALNO;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnDEALDATE;
            
            private global::System.Data.DataColumn columnDEALTIME;
            
            private global::System.Data.DataColumn columnSPOTDATE;
            
            private global::System.Data.DataColumn columnOPTSDATE;
            
            private global::System.Data.DataColumn columnVALDATE;
            
            private global::System.Data.DataColumn columnPSTYPE;
            
            private global::System.Data.DataColumn columnCCYPAIR;
            
            private global::System.Data.DataColumn columnCCYEXCH;
            
            private global::System.Data.DataColumn columnRECCCY;
            
            private global::System.Data.DataColumn columnRECCCYAMT;
            
            private global::System.Data.DataColumn columnPAYCCY;
            
            private global::System.Data.DataColumn columnPAYCCYAMT;
            
            private global::System.Data.DataColumn columnDEALSRC;
            
            private global::System.Data.DataColumn columnDEALNOTE;
            
            private global::System.Data.DataColumn columnDEALTEXT;
            
            private global::System.Data.DataColumn columnVERIFIER;
            
            private global::System.Data.DataColumn columnPRINTSTATUS;
            
            private global::System.Data.DataColumn columnNETPAYIND;
            
            private global::System.Data.DataColumn columnPURPOSE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETFXDataTable() {
                this.TableName = "TB_TICKETFX";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TICKETFXDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_TICKETFXDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRColumn {
                get {
                    return this.columnBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCTColumn {
                get {
                    return this.columnPRODUCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROD_DESCRIPTIONColumn {
                get {
                    return this.columnPROD_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODTYPEColumn {
                get {
                    return this.columnPRODTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PORTColumn {
                get {
                    return this.columnPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COSTColumn {
                get {
                    return this.columnCOST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRADColumn {
                get {
                    return this.columnTRAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALNOColumn {
                get {
                    return this.columnDEALNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALDATEColumn {
                get {
                    return this.columnDEALDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALTIMEColumn {
                get {
                    return this.columnDEALTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPOTDATEColumn {
                get {
                    return this.columnSPOTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPTSDATEColumn {
                get {
                    return this.columnOPTSDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALDATEColumn {
                get {
                    return this.columnVALDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PSTYPEColumn {
                get {
                    return this.columnPSTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CCYPAIRColumn {
                get {
                    return this.columnCCYPAIR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CCYEXCHColumn {
                get {
                    return this.columnCCYEXCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECCCYColumn {
                get {
                    return this.columnRECCCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECCCYAMTColumn {
                get {
                    return this.columnRECCCYAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAYCCYColumn {
                get {
                    return this.columnPAYCCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAYCCYAMTColumn {
                get {
                    return this.columnPAYCCYAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALSRCColumn {
                get {
                    return this.columnDEALSRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALNOTEColumn {
                get {
                    return this.columnDEALNOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALTEXTColumn {
                get {
                    return this.columnDEALTEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERIFIERColumn {
                get {
                    return this.columnVERIFIER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRINTSTATUSColumn {
                get {
                    return this.columnPRINTSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NETPAYINDColumn {
                get {
                    return this.columnNETPAYIND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PURPOSEColumn {
                get {
                    return this.columnPURPOSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETFXRow this[int index] {
                get {
                    return ((TB_TICKETFXRow)(this.Rows[index]));
                }
            }
            
            public event TB_TICKETFXRowChangeEventHandler TB_TICKETFXRowChanging;
            
            public event TB_TICKETFXRowChangeEventHandler TB_TICKETFXRowChanged;
            
            public event TB_TICKETFXRowChangeEventHandler TB_TICKETFXRowDeleting;
            
            public event TB_TICKETFXRowChangeEventHandler TB_TICKETFXRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_TICKETFXRow(TB_TICKETFXRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETFXRow AddTB_TICKETFXRow(
                        string BR, 
                        string PRODUCT, 
                        string PROD_DESCRIPTION, 
                        string PRODTYPE, 
                        string PORT, 
                        string COST, 
                        string TRAD, 
                        string DEALNO, 
                        string CUSTOMER, 
                        string DEALDATE, 
                        string DEALTIME, 
                        string SPOTDATE, 
                        string OPTSDATE, 
                        string VALDATE, 
                        string PSTYPE, 
                        string CCYPAIR, 
                        string CCYEXCH, 
                        string RECCCY, 
                        string RECCCYAMT, 
                        string PAYCCY, 
                        string PAYCCYAMT, 
                        string DEALSRC, 
                        string DEALNOTE, 
                        string DEALTEXT, 
                        string VERIFIER, 
                        string PRINTSTATUS, 
                        string NETPAYIND, 
                        string PURPOSE) {
                TB_TICKETFXRow rowTB_TICKETFXRow = ((TB_TICKETFXRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BR,
                        PRODUCT,
                        PROD_DESCRIPTION,
                        PRODTYPE,
                        PORT,
                        COST,
                        TRAD,
                        DEALNO,
                        CUSTOMER,
                        DEALDATE,
                        DEALTIME,
                        SPOTDATE,
                        OPTSDATE,
                        VALDATE,
                        PSTYPE,
                        CCYPAIR,
                        CCYEXCH,
                        RECCCY,
                        RECCCYAMT,
                        PAYCCY,
                        PAYCCYAMT,
                        DEALSRC,
                        DEALNOTE,
                        DEALTEXT,
                        VERIFIER,
                        PRINTSTATUS,
                        NETPAYIND,
                        PURPOSE};
                rowTB_TICKETFXRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_TICKETFXRow);
                return rowTB_TICKETFXRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_TICKETFXDataTable cln = ((TB_TICKETFXDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_TICKETFXDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBR = base.Columns["BR"];
                this.columnPRODUCT = base.Columns["PRODUCT"];
                this.columnPROD_DESCRIPTION = base.Columns["PROD_DESCRIPTION"];
                this.columnPRODTYPE = base.Columns["PRODTYPE"];
                this.columnPORT = base.Columns["PORT"];
                this.columnCOST = base.Columns["COST"];
                this.columnTRAD = base.Columns["TRAD"];
                this.columnDEALNO = base.Columns["DEALNO"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnDEALDATE = base.Columns["DEALDATE"];
                this.columnDEALTIME = base.Columns["DEALTIME"];
                this.columnSPOTDATE = base.Columns["SPOTDATE"];
                this.columnOPTSDATE = base.Columns["OPTSDATE"];
                this.columnVALDATE = base.Columns["VALDATE"];
                this.columnPSTYPE = base.Columns["PSTYPE"];
                this.columnCCYPAIR = base.Columns["CCYPAIR"];
                this.columnCCYEXCH = base.Columns["CCYEXCH"];
                this.columnRECCCY = base.Columns["RECCCY"];
                this.columnRECCCYAMT = base.Columns["RECCCYAMT"];
                this.columnPAYCCY = base.Columns["PAYCCY"];
                this.columnPAYCCYAMT = base.Columns["PAYCCYAMT"];
                this.columnDEALSRC = base.Columns["DEALSRC"];
                this.columnDEALNOTE = base.Columns["DEALNOTE"];
                this.columnDEALTEXT = base.Columns["DEALTEXT"];
                this.columnVERIFIER = base.Columns["VERIFIER"];
                this.columnPRINTSTATUS = base.Columns["PRINTSTATUS"];
                this.columnNETPAYIND = base.Columns["NETPAYIND"];
                this.columnPURPOSE = base.Columns["PURPOSE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBR = new global::System.Data.DataColumn("BR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBR);
                this.columnPRODUCT = new global::System.Data.DataColumn("PRODUCT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT);
                this.columnPROD_DESCRIPTION = new global::System.Data.DataColumn("PROD_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_DESCRIPTION);
                this.columnPRODTYPE = new global::System.Data.DataColumn("PRODTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODTYPE);
                this.columnPORT = new global::System.Data.DataColumn("PORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORT);
                this.columnCOST = new global::System.Data.DataColumn("COST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST);
                this.columnTRAD = new global::System.Data.DataColumn("TRAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRAD);
                this.columnDEALNO = new global::System.Data.DataColumn("DEALNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALNO);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnDEALDATE = new global::System.Data.DataColumn("DEALDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALDATE);
                this.columnDEALTIME = new global::System.Data.DataColumn("DEALTIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALTIME);
                this.columnSPOTDATE = new global::System.Data.DataColumn("SPOTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPOTDATE);
                this.columnOPTSDATE = new global::System.Data.DataColumn("OPTSDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPTSDATE);
                this.columnVALDATE = new global::System.Data.DataColumn("VALDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALDATE);
                this.columnPSTYPE = new global::System.Data.DataColumn("PSTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSTYPE);
                this.columnCCYPAIR = new global::System.Data.DataColumn("CCYPAIR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCYPAIR);
                this.columnCCYEXCH = new global::System.Data.DataColumn("CCYEXCH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCYEXCH);
                this.columnRECCCY = new global::System.Data.DataColumn("RECCCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECCCY);
                this.columnRECCCYAMT = new global::System.Data.DataColumn("RECCCYAMT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECCCYAMT);
                this.columnPAYCCY = new global::System.Data.DataColumn("PAYCCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYCCY);
                this.columnPAYCCYAMT = new global::System.Data.DataColumn("PAYCCYAMT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYCCYAMT);
                this.columnDEALSRC = new global::System.Data.DataColumn("DEALSRC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALSRC);
                this.columnDEALNOTE = new global::System.Data.DataColumn("DEALNOTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALNOTE);
                this.columnDEALTEXT = new global::System.Data.DataColumn("DEALTEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALTEXT);
                this.columnVERIFIER = new global::System.Data.DataColumn("VERIFIER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERIFIER);
                this.columnPRINTSTATUS = new global::System.Data.DataColumn("PRINTSTATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRINTSTATUS);
                this.columnNETPAYIND = new global::System.Data.DataColumn("NETPAYIND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETPAYIND);
                this.columnPURPOSE = new global::System.Data.DataColumn("PURPOSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPURPOSE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETFXRow NewTB_TICKETFXRow() {
                return ((TB_TICKETFXRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_TICKETFXRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_TICKETFXRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_TICKETFXRowChanged != null)) {
                    this.TB_TICKETFXRowChanged(this, new TB_TICKETFXRowChangeEvent(((TB_TICKETFXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_TICKETFXRowChanging != null)) {
                    this.TB_TICKETFXRowChanging(this, new TB_TICKETFXRowChangeEvent(((TB_TICKETFXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_TICKETFXRowDeleted != null)) {
                    this.TB_TICKETFXRowDeleted(this, new TB_TICKETFXRowChangeEvent(((TB_TICKETFXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_TICKETFXRowDeleting != null)) {
                    this.TB_TICKETFXRowDeleting(this, new TB_TICKETFXRowChangeEvent(((TB_TICKETFXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_TICKETFXRow(TB_TICKETFXRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TICKETFX ds = new DS_TICKETFX();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_TICKETFXDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_TICKETFXRow : global::System.Data.DataRow {
            
            private TB_TICKETFXDataTable tableTB_TICKETFX;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TICKETFXRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_TICKETFX = ((TB_TICKETFXDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BR {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.BRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BR\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.BRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.PRODUCTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.PRODUCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROD_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.PROD_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROD_DESCRIPTION\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.PROD_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.PRODTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODTYPE\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.PRODTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PORT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.PORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PORT\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.PORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COST {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COST\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRAD {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.TRADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRAD\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.TRADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALNO {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.DEALNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALNO\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.DEALNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.DEALDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALDATE\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.DEALDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALTIME {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.DEALTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALTIME\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.DEALTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPOTDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.SPOTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPOTDATE\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.SPOTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OPTSDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.OPTSDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPTSDATE\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.OPTSDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VALDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.VALDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALDATE\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.VALDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PSTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.PSTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PSTYPE\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.PSTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CCYPAIR {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.CCYPAIRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CCYPAIR\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.CCYPAIRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CCYEXCH {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.CCYEXCHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CCYEXCH\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.CCYEXCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RECCCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.RECCCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECCCY\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.RECCCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RECCCYAMT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.RECCCYAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECCCYAMT\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.RECCCYAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAYCCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.PAYCCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAYCCY\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.PAYCCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAYCCYAMT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.PAYCCYAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAYCCYAMT\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.PAYCCYAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALSRC {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.DEALSRCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALSRC\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.DEALSRCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALNOTE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.DEALNOTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALNOTE\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.DEALNOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALTEXT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.DEALTEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALTEXT\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.DEALTEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERIFIER {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.VERIFIERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VERIFIER\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.VERIFIERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRINTSTATUS {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.PRINTSTATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRINTSTATUS\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.PRINTSTATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NETPAYIND {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.NETPAYINDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NETPAYIND\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.NETPAYINDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PURPOSE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFX.PURPOSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PURPOSE\' in table \'TB_TICKETFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFX.PURPOSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRNull() {
                return this.IsNull(this.tableTB_TICKETFX.BRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRNull() {
                this[this.tableTB_TICKETFX.BRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCTNull() {
                return this.IsNull(this.tableTB_TICKETFX.PRODUCTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCTNull() {
                this[this.tableTB_TICKETFX.PRODUCTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROD_DESCRIPTIONNull() {
                return this.IsNull(this.tableTB_TICKETFX.PROD_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROD_DESCRIPTIONNull() {
                this[this.tableTB_TICKETFX.PROD_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODTYPENull() {
                return this.IsNull(this.tableTB_TICKETFX.PRODTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODTYPENull() {
                this[this.tableTB_TICKETFX.PRODTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPORTNull() {
                return this.IsNull(this.tableTB_TICKETFX.PORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPORTNull() {
                this[this.tableTB_TICKETFX.PORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOSTNull() {
                return this.IsNull(this.tableTB_TICKETFX.COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOSTNull() {
                this[this.tableTB_TICKETFX.COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRADNull() {
                return this.IsNull(this.tableTB_TICKETFX.TRADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRADNull() {
                this[this.tableTB_TICKETFX.TRADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALNONull() {
                return this.IsNull(this.tableTB_TICKETFX.DEALNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALNONull() {
                this[this.tableTB_TICKETFX.DEALNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tableTB_TICKETFX.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMERNull() {
                this[this.tableTB_TICKETFX.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALDATENull() {
                return this.IsNull(this.tableTB_TICKETFX.DEALDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALDATENull() {
                this[this.tableTB_TICKETFX.DEALDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALTIMENull() {
                return this.IsNull(this.tableTB_TICKETFX.DEALTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALTIMENull() {
                this[this.tableTB_TICKETFX.DEALTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPOTDATENull() {
                return this.IsNull(this.tableTB_TICKETFX.SPOTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPOTDATENull() {
                this[this.tableTB_TICKETFX.SPOTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPTSDATENull() {
                return this.IsNull(this.tableTB_TICKETFX.OPTSDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPTSDATENull() {
                this[this.tableTB_TICKETFX.OPTSDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVALDATENull() {
                return this.IsNull(this.tableTB_TICKETFX.VALDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVALDATENull() {
                this[this.tableTB_TICKETFX.VALDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPSTYPENull() {
                return this.IsNull(this.tableTB_TICKETFX.PSTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPSTYPENull() {
                this[this.tableTB_TICKETFX.PSTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCCYPAIRNull() {
                return this.IsNull(this.tableTB_TICKETFX.CCYPAIRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCCYPAIRNull() {
                this[this.tableTB_TICKETFX.CCYPAIRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCCYEXCHNull() {
                return this.IsNull(this.tableTB_TICKETFX.CCYEXCHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCCYEXCHNull() {
                this[this.tableTB_TICKETFX.CCYEXCHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRECCCYNull() {
                return this.IsNull(this.tableTB_TICKETFX.RECCCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRECCCYNull() {
                this[this.tableTB_TICKETFX.RECCCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRECCCYAMTNull() {
                return this.IsNull(this.tableTB_TICKETFX.RECCCYAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRECCCYAMTNull() {
                this[this.tableTB_TICKETFX.RECCCYAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYCCYNull() {
                return this.IsNull(this.tableTB_TICKETFX.PAYCCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYCCYNull() {
                this[this.tableTB_TICKETFX.PAYCCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYCCYAMTNull() {
                return this.IsNull(this.tableTB_TICKETFX.PAYCCYAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYCCYAMTNull() {
                this[this.tableTB_TICKETFX.PAYCCYAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALSRCNull() {
                return this.IsNull(this.tableTB_TICKETFX.DEALSRCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALSRCNull() {
                this[this.tableTB_TICKETFX.DEALSRCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALNOTENull() {
                return this.IsNull(this.tableTB_TICKETFX.DEALNOTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALNOTENull() {
                this[this.tableTB_TICKETFX.DEALNOTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALTEXTNull() {
                return this.IsNull(this.tableTB_TICKETFX.DEALTEXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALTEXTNull() {
                this[this.tableTB_TICKETFX.DEALTEXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERIFIERNull() {
                return this.IsNull(this.tableTB_TICKETFX.VERIFIERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERIFIERNull() {
                this[this.tableTB_TICKETFX.VERIFIERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRINTSTATUSNull() {
                return this.IsNull(this.tableTB_TICKETFX.PRINTSTATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRINTSTATUSNull() {
                this[this.tableTB_TICKETFX.PRINTSTATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNETPAYINDNull() {
                return this.IsNull(this.tableTB_TICKETFX.NETPAYINDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNETPAYINDNull() {
                this[this.tableTB_TICKETFX.NETPAYINDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPURPOSENull() {
                return this.IsNull(this.tableTB_TICKETFX.PURPOSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPURPOSENull() {
                this[this.tableTB_TICKETFX.PURPOSEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_TICKETFXRowChangeEvent : global::System.EventArgs {
            
            private TB_TICKETFXRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETFXRowChangeEvent(TB_TICKETFXRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETFXRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591