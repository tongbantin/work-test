//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KKB.DealTicketReport.DSData {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_TICKETFI")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_TICKETFI : global::System.Data.DataSet {
        
        private TB_TICKETFIDataTable tableTB_TICKETFI;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_TICKETFI() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_TICKETFI(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TB_TICKETFI"] != null)) {
                    base.Tables.Add(new TB_TICKETFIDataTable(ds.Tables["TB_TICKETFI"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_TICKETFIDataTable TB_TICKETFI {
            get {
                return this.tableTB_TICKETFI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_TICKETFI cln = ((DS_TICKETFI)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TB_TICKETFI"] != null)) {
                    base.Tables.Add(new TB_TICKETFIDataTable(ds.Tables["TB_TICKETFI"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTB_TICKETFI = ((TB_TICKETFIDataTable)(base.Tables["TB_TICKETFI"]));
            if ((initTable == true)) {
                if ((this.tableTB_TICKETFI != null)) {
                    this.tableTB_TICKETFI.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_TICKETFI";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_TICKETFI.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTB_TICKETFI = new TB_TICKETFIDataTable();
            base.Tables.Add(this.tableTB_TICKETFI);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_TICKETFI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_TICKETFI ds = new DS_TICKETFI();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TB_TICKETFIRowChangeEventHandler(object sender, TB_TICKETFIRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_TICKETFIDataTable : global::System.Data.TypedTableBase<TB_TICKETFIRow> {
            
            private global::System.Data.DataColumn columnBR;
            
            private global::System.Data.DataColumn columnPRODUCT;
            
            private global::System.Data.DataColumn columnPROD_DESCRIPTION;
            
            private global::System.Data.DataColumn columnPRODTYPE;
            
            private global::System.Data.DataColumn columnPORT;
            
            private global::System.Data.DataColumn columnCOST;
            
            private global::System.Data.DataColumn columnTRAD;
            
            private global::System.Data.DataColumn columnDEALNO;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnDEALDATE;
            
            private global::System.Data.DataColumn columnDEALTIME;
            
            private global::System.Data.DataColumn columnSETTDATE;
            
            private global::System.Data.DataColumn columnACCTYPE;
            
            private global::System.Data.DataColumn columnPOSITION;
            
            private global::System.Data.DataColumn columnSECURITY;
            
            private global::System.Data.DataColumn columnISIN;
            
            private global::System.Data.DataColumn columnISSUER;
            
            private global::System.Data.DataColumn columnCCY;
            
            private global::System.Data.DataColumn columnDEALSRC;
            
            private global::System.Data.DataColumn columnUNITS;
            
            private global::System.Data.DataColumn columnFV;
            
            private global::System.Data.DataColumn columnFACEAMT;
            
            private global::System.Data.DataColumn columnYIELD;
            
            private global::System.Data.DataColumn columnGLEANAMT;
            
            private global::System.Data.DataColumn columnPURCINT;
            
            private global::System.Data.DataColumn columnGROSSAMT;
            
            private global::System.Data.DataColumn columnWHTAX;
            
            private global::System.Data.DataColumn columnSETGROSSAMT;
            
            private global::System.Data.DataColumn columnMATDATE;
            
            private global::System.Data.DataColumn columnSETLTYPE;
            
            private global::System.Data.DataColumn columnDELITYPE;
            
            private global::System.Data.DataColumn columnDEALNOTE;
            
            private global::System.Data.DataColumn columnDEALTEXT;
            
            private global::System.Data.DataColumn columnVERIFIER;
            
            private global::System.Data.DataColumn columnINVTYPE;
            
            private global::System.Data.DataColumn columnPRINTSTATUS;
            
            private global::System.Data.DataColumn columnCOUPON;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETFIDataTable() {
                this.TableName = "TB_TICKETFI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TICKETFIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_TICKETFIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRColumn {
                get {
                    return this.columnBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCTColumn {
                get {
                    return this.columnPRODUCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROD_DESCRIPTIONColumn {
                get {
                    return this.columnPROD_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODTYPEColumn {
                get {
                    return this.columnPRODTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PORTColumn {
                get {
                    return this.columnPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COSTColumn {
                get {
                    return this.columnCOST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRADColumn {
                get {
                    return this.columnTRAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALNOColumn {
                get {
                    return this.columnDEALNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALDATEColumn {
                get {
                    return this.columnDEALDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALTIMEColumn {
                get {
                    return this.columnDEALTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SETTDATEColumn {
                get {
                    return this.columnSETTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACCTYPEColumn {
                get {
                    return this.columnACCTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POSITIONColumn {
                get {
                    return this.columnPOSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SECURITYColumn {
                get {
                    return this.columnSECURITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISINColumn {
                get {
                    return this.columnISIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISSUERColumn {
                get {
                    return this.columnISSUER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CCYColumn {
                get {
                    return this.columnCCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALSRCColumn {
                get {
                    return this.columnDEALSRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNITSColumn {
                get {
                    return this.columnUNITS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FVColumn {
                get {
                    return this.columnFV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FACEAMTColumn {
                get {
                    return this.columnFACEAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YIELDColumn {
                get {
                    return this.columnYIELD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GLEANAMTColumn {
                get {
                    return this.columnGLEANAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PURCINTColumn {
                get {
                    return this.columnPURCINT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GROSSAMTColumn {
                get {
                    return this.columnGROSSAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WHTAXColumn {
                get {
                    return this.columnWHTAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SETGROSSAMTColumn {
                get {
                    return this.columnSETGROSSAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MATDATEColumn {
                get {
                    return this.columnMATDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SETLTYPEColumn {
                get {
                    return this.columnSETLTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DELITYPEColumn {
                get {
                    return this.columnDELITYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALNOTEColumn {
                get {
                    return this.columnDEALNOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALTEXTColumn {
                get {
                    return this.columnDEALTEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERIFIERColumn {
                get {
                    return this.columnVERIFIER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INVTYPEColumn {
                get {
                    return this.columnINVTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRINTSTATUSColumn {
                get {
                    return this.columnPRINTSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COUPONColumn {
                get {
                    return this.columnCOUPON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETFIRow this[int index] {
                get {
                    return ((TB_TICKETFIRow)(this.Rows[index]));
                }
            }
            
            public event TB_TICKETFIRowChangeEventHandler TB_TICKETFIRowChanging;
            
            public event TB_TICKETFIRowChangeEventHandler TB_TICKETFIRowChanged;
            
            public event TB_TICKETFIRowChangeEventHandler TB_TICKETFIRowDeleting;
            
            public event TB_TICKETFIRowChangeEventHandler TB_TICKETFIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_TICKETFIRow(TB_TICKETFIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETFIRow AddTB_TICKETFIRow(
                        string BR, 
                        string PRODUCT, 
                        string PROD_DESCRIPTION, 
                        string PRODTYPE, 
                        string PORT, 
                        string COST, 
                        string TRAD, 
                        string DEALNO, 
                        string CUSTOMER, 
                        string DEALDATE, 
                        string DEALTIME, 
                        string SETTDATE, 
                        string ACCTYPE, 
                        string POSITION, 
                        string SECURITY, 
                        string ISIN, 
                        string ISSUER, 
                        string CCY, 
                        string DEALSRC, 
                        string UNITS, 
                        string FV, 
                        string FACEAMT, 
                        string YIELD, 
                        string GLEANAMT, 
                        string PURCINT, 
                        string GROSSAMT, 
                        string WHTAX, 
                        string SETGROSSAMT, 
                        string MATDATE, 
                        string SETLTYPE, 
                        string DELITYPE, 
                        string DEALNOTE, 
                        string DEALTEXT, 
                        string VERIFIER, 
                        string INVTYPE, 
                        string PRINTSTATUS, 
                        decimal COUPON) {
                TB_TICKETFIRow rowTB_TICKETFIRow = ((TB_TICKETFIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BR,
                        PRODUCT,
                        PROD_DESCRIPTION,
                        PRODTYPE,
                        PORT,
                        COST,
                        TRAD,
                        DEALNO,
                        CUSTOMER,
                        DEALDATE,
                        DEALTIME,
                        SETTDATE,
                        ACCTYPE,
                        POSITION,
                        SECURITY,
                        ISIN,
                        ISSUER,
                        CCY,
                        DEALSRC,
                        UNITS,
                        FV,
                        FACEAMT,
                        YIELD,
                        GLEANAMT,
                        PURCINT,
                        GROSSAMT,
                        WHTAX,
                        SETGROSSAMT,
                        MATDATE,
                        SETLTYPE,
                        DELITYPE,
                        DEALNOTE,
                        DEALTEXT,
                        VERIFIER,
                        INVTYPE,
                        PRINTSTATUS,
                        COUPON};
                rowTB_TICKETFIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_TICKETFIRow);
                return rowTB_TICKETFIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_TICKETFIDataTable cln = ((TB_TICKETFIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_TICKETFIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBR = base.Columns["BR"];
                this.columnPRODUCT = base.Columns["PRODUCT"];
                this.columnPROD_DESCRIPTION = base.Columns["PROD_DESCRIPTION"];
                this.columnPRODTYPE = base.Columns["PRODTYPE"];
                this.columnPORT = base.Columns["PORT"];
                this.columnCOST = base.Columns["COST"];
                this.columnTRAD = base.Columns["TRAD"];
                this.columnDEALNO = base.Columns["DEALNO"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnDEALDATE = base.Columns["DEALDATE"];
                this.columnDEALTIME = base.Columns["DEALTIME"];
                this.columnSETTDATE = base.Columns["SETTDATE"];
                this.columnACCTYPE = base.Columns["ACCTYPE"];
                this.columnPOSITION = base.Columns["POSITION"];
                this.columnSECURITY = base.Columns["SECURITY"];
                this.columnISIN = base.Columns["ISIN"];
                this.columnISSUER = base.Columns["ISSUER"];
                this.columnCCY = base.Columns["CCY"];
                this.columnDEALSRC = base.Columns["DEALSRC"];
                this.columnUNITS = base.Columns["UNITS"];
                this.columnFV = base.Columns["FV"];
                this.columnFACEAMT = base.Columns["FACEAMT"];
                this.columnYIELD = base.Columns["YIELD"];
                this.columnGLEANAMT = base.Columns["GLEANAMT"];
                this.columnPURCINT = base.Columns["PURCINT"];
                this.columnGROSSAMT = base.Columns["GROSSAMT"];
                this.columnWHTAX = base.Columns["WHTAX"];
                this.columnSETGROSSAMT = base.Columns["SETGROSSAMT"];
                this.columnMATDATE = base.Columns["MATDATE"];
                this.columnSETLTYPE = base.Columns["SETLTYPE"];
                this.columnDELITYPE = base.Columns["DELITYPE"];
                this.columnDEALNOTE = base.Columns["DEALNOTE"];
                this.columnDEALTEXT = base.Columns["DEALTEXT"];
                this.columnVERIFIER = base.Columns["VERIFIER"];
                this.columnINVTYPE = base.Columns["INVTYPE"];
                this.columnPRINTSTATUS = base.Columns["PRINTSTATUS"];
                this.columnCOUPON = base.Columns["COUPON"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBR = new global::System.Data.DataColumn("BR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBR);
                this.columnPRODUCT = new global::System.Data.DataColumn("PRODUCT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT);
                this.columnPROD_DESCRIPTION = new global::System.Data.DataColumn("PROD_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_DESCRIPTION);
                this.columnPRODTYPE = new global::System.Data.DataColumn("PRODTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODTYPE);
                this.columnPORT = new global::System.Data.DataColumn("PORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORT);
                this.columnCOST = new global::System.Data.DataColumn("COST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST);
                this.columnTRAD = new global::System.Data.DataColumn("TRAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRAD);
                this.columnDEALNO = new global::System.Data.DataColumn("DEALNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALNO);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnDEALDATE = new global::System.Data.DataColumn("DEALDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALDATE);
                this.columnDEALTIME = new global::System.Data.DataColumn("DEALTIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALTIME);
                this.columnSETTDATE = new global::System.Data.DataColumn("SETTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTDATE);
                this.columnACCTYPE = new global::System.Data.DataColumn("ACCTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCTYPE);
                this.columnPOSITION = new global::System.Data.DataColumn("POSITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSITION);
                this.columnSECURITY = new global::System.Data.DataColumn("SECURITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECURITY);
                this.columnISIN = new global::System.Data.DataColumn("ISIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISIN);
                this.columnISSUER = new global::System.Data.DataColumn("ISSUER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISSUER);
                this.columnCCY = new global::System.Data.DataColumn("CCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCY);
                this.columnDEALSRC = new global::System.Data.DataColumn("DEALSRC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALSRC);
                this.columnUNITS = new global::System.Data.DataColumn("UNITS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNITS);
                this.columnFV = new global::System.Data.DataColumn("FV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFV);
                this.columnFACEAMT = new global::System.Data.DataColumn("FACEAMT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFACEAMT);
                this.columnYIELD = new global::System.Data.DataColumn("YIELD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYIELD);
                this.columnGLEANAMT = new global::System.Data.DataColumn("GLEANAMT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLEANAMT);
                this.columnPURCINT = new global::System.Data.DataColumn("PURCINT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPURCINT);
                this.columnGROSSAMT = new global::System.Data.DataColumn("GROSSAMT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROSSAMT);
                this.columnWHTAX = new global::System.Data.DataColumn("WHTAX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWHTAX);
                this.columnSETGROSSAMT = new global::System.Data.DataColumn("SETGROSSAMT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETGROSSAMT);
                this.columnMATDATE = new global::System.Data.DataColumn("MATDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMATDATE);
                this.columnSETLTYPE = new global::System.Data.DataColumn("SETLTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETLTYPE);
                this.columnDELITYPE = new global::System.Data.DataColumn("DELITYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDELITYPE);
                this.columnDEALNOTE = new global::System.Data.DataColumn("DEALNOTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALNOTE);
                this.columnDEALTEXT = new global::System.Data.DataColumn("DEALTEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALTEXT);
                this.columnVERIFIER = new global::System.Data.DataColumn("VERIFIER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERIFIER);
                this.columnINVTYPE = new global::System.Data.DataColumn("INVTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVTYPE);
                this.columnPRINTSTATUS = new global::System.Data.DataColumn("PRINTSTATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRINTSTATUS);
                this.columnCOUPON = new global::System.Data.DataColumn("COUPON", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUPON);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETFIRow NewTB_TICKETFIRow() {
                return ((TB_TICKETFIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_TICKETFIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_TICKETFIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_TICKETFIRowChanged != null)) {
                    this.TB_TICKETFIRowChanged(this, new TB_TICKETFIRowChangeEvent(((TB_TICKETFIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_TICKETFIRowChanging != null)) {
                    this.TB_TICKETFIRowChanging(this, new TB_TICKETFIRowChangeEvent(((TB_TICKETFIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_TICKETFIRowDeleted != null)) {
                    this.TB_TICKETFIRowDeleted(this, new TB_TICKETFIRowChangeEvent(((TB_TICKETFIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_TICKETFIRowDeleting != null)) {
                    this.TB_TICKETFIRowDeleting(this, new TB_TICKETFIRowChangeEvent(((TB_TICKETFIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_TICKETFIRow(TB_TICKETFIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TICKETFI ds = new DS_TICKETFI();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_TICKETFIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_TICKETFIRow : global::System.Data.DataRow {
            
            private TB_TICKETFIDataTable tableTB_TICKETFI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TICKETFIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_TICKETFI = ((TB_TICKETFIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BR {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.BRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BR\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.BRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.PRODUCTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.PRODUCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROD_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.PROD_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROD_DESCRIPTION\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.PROD_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.PRODTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODTYPE\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.PRODTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PORT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.PORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PORT\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.PORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COST {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COST\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRAD {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.TRADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRAD\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.TRADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALNO {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.DEALNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALNO\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.DEALNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.DEALDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALDATE\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.DEALDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALTIME {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.DEALTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALTIME\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.DEALTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.SETTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SETTDATE\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.SETTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.ACCTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCTYPE\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.ACCTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string POSITION {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.POSITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POSITION\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SECURITY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.SECURITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SECURITY\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.SECURITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISIN {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.ISINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISIN\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.ISINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISSUER {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.ISSUERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISSUER\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.ISSUERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.CCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CCY\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.CCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALSRC {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.DEALSRCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALSRC\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.DEALSRCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNITS {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.UNITSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNITS\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.UNITSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FV {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.FVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FV\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.FVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FACEAMT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.FACEAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FACEAMT\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.FACEAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YIELD {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.YIELDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YIELD\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.YIELDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GLEANAMT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.GLEANAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GLEANAMT\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.GLEANAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PURCINT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.PURCINTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PURCINT\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.PURCINTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GROSSAMT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.GROSSAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GROSSAMT\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.GROSSAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WHTAX {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.WHTAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WHTAX\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.WHTAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETGROSSAMT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.SETGROSSAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SETGROSSAMT\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.SETGROSSAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MATDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.MATDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MATDATE\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.MATDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETLTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.SETLTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SETLTYPE\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.SETLTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DELITYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.DELITYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DELITYPE\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.DELITYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALNOTE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.DEALNOTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALNOTE\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.DEALNOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALTEXT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.DEALTEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALTEXT\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.DEALTEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERIFIER {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.VERIFIERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VERIFIER\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.VERIFIERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INVTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.INVTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INVTYPE\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.INVTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRINTSTATUS {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETFI.PRINTSTATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRINTSTATUS\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.PRINTSTATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal COUPON {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TICKETFI.COUPONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COUPON\' in table \'TB_TICKETFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETFI.COUPONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRNull() {
                return this.IsNull(this.tableTB_TICKETFI.BRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRNull() {
                this[this.tableTB_TICKETFI.BRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCTNull() {
                return this.IsNull(this.tableTB_TICKETFI.PRODUCTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCTNull() {
                this[this.tableTB_TICKETFI.PRODUCTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROD_DESCRIPTIONNull() {
                return this.IsNull(this.tableTB_TICKETFI.PROD_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROD_DESCRIPTIONNull() {
                this[this.tableTB_TICKETFI.PROD_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODTYPENull() {
                return this.IsNull(this.tableTB_TICKETFI.PRODTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODTYPENull() {
                this[this.tableTB_TICKETFI.PRODTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPORTNull() {
                return this.IsNull(this.tableTB_TICKETFI.PORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPORTNull() {
                this[this.tableTB_TICKETFI.PORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOSTNull() {
                return this.IsNull(this.tableTB_TICKETFI.COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOSTNull() {
                this[this.tableTB_TICKETFI.COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRADNull() {
                return this.IsNull(this.tableTB_TICKETFI.TRADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRADNull() {
                this[this.tableTB_TICKETFI.TRADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALNONull() {
                return this.IsNull(this.tableTB_TICKETFI.DEALNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALNONull() {
                this[this.tableTB_TICKETFI.DEALNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tableTB_TICKETFI.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMERNull() {
                this[this.tableTB_TICKETFI.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALDATENull() {
                return this.IsNull(this.tableTB_TICKETFI.DEALDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALDATENull() {
                this[this.tableTB_TICKETFI.DEALDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALTIMENull() {
                return this.IsNull(this.tableTB_TICKETFI.DEALTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALTIMENull() {
                this[this.tableTB_TICKETFI.DEALTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETTDATENull() {
                return this.IsNull(this.tableTB_TICKETFI.SETTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETTDATENull() {
                this[this.tableTB_TICKETFI.SETTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCTYPENull() {
                return this.IsNull(this.tableTB_TICKETFI.ACCTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCTYPENull() {
                this[this.tableTB_TICKETFI.ACCTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOSITIONNull() {
                return this.IsNull(this.tableTB_TICKETFI.POSITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOSITIONNull() {
                this[this.tableTB_TICKETFI.POSITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSECURITYNull() {
                return this.IsNull(this.tableTB_TICKETFI.SECURITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSECURITYNull() {
                this[this.tableTB_TICKETFI.SECURITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISINNull() {
                return this.IsNull(this.tableTB_TICKETFI.ISINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISINNull() {
                this[this.tableTB_TICKETFI.ISINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISSUERNull() {
                return this.IsNull(this.tableTB_TICKETFI.ISSUERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISSUERNull() {
                this[this.tableTB_TICKETFI.ISSUERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCCYNull() {
                return this.IsNull(this.tableTB_TICKETFI.CCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCCYNull() {
                this[this.tableTB_TICKETFI.CCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALSRCNull() {
                return this.IsNull(this.tableTB_TICKETFI.DEALSRCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALSRCNull() {
                this[this.tableTB_TICKETFI.DEALSRCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNITSNull() {
                return this.IsNull(this.tableTB_TICKETFI.UNITSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNITSNull() {
                this[this.tableTB_TICKETFI.UNITSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFVNull() {
                return this.IsNull(this.tableTB_TICKETFI.FVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFVNull() {
                this[this.tableTB_TICKETFI.FVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFACEAMTNull() {
                return this.IsNull(this.tableTB_TICKETFI.FACEAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFACEAMTNull() {
                this[this.tableTB_TICKETFI.FACEAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYIELDNull() {
                return this.IsNull(this.tableTB_TICKETFI.YIELDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYIELDNull() {
                this[this.tableTB_TICKETFI.YIELDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGLEANAMTNull() {
                return this.IsNull(this.tableTB_TICKETFI.GLEANAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGLEANAMTNull() {
                this[this.tableTB_TICKETFI.GLEANAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPURCINTNull() {
                return this.IsNull(this.tableTB_TICKETFI.PURCINTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPURCINTNull() {
                this[this.tableTB_TICKETFI.PURCINTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGROSSAMTNull() {
                return this.IsNull(this.tableTB_TICKETFI.GROSSAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGROSSAMTNull() {
                this[this.tableTB_TICKETFI.GROSSAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWHTAXNull() {
                return this.IsNull(this.tableTB_TICKETFI.WHTAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWHTAXNull() {
                this[this.tableTB_TICKETFI.WHTAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETGROSSAMTNull() {
                return this.IsNull(this.tableTB_TICKETFI.SETGROSSAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETGROSSAMTNull() {
                this[this.tableTB_TICKETFI.SETGROSSAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMATDATENull() {
                return this.IsNull(this.tableTB_TICKETFI.MATDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMATDATENull() {
                this[this.tableTB_TICKETFI.MATDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETLTYPENull() {
                return this.IsNull(this.tableTB_TICKETFI.SETLTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETLTYPENull() {
                this[this.tableTB_TICKETFI.SETLTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDELITYPENull() {
                return this.IsNull(this.tableTB_TICKETFI.DELITYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDELITYPENull() {
                this[this.tableTB_TICKETFI.DELITYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALNOTENull() {
                return this.IsNull(this.tableTB_TICKETFI.DEALNOTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALNOTENull() {
                this[this.tableTB_TICKETFI.DEALNOTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALTEXTNull() {
                return this.IsNull(this.tableTB_TICKETFI.DEALTEXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALTEXTNull() {
                this[this.tableTB_TICKETFI.DEALTEXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERIFIERNull() {
                return this.IsNull(this.tableTB_TICKETFI.VERIFIERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERIFIERNull() {
                this[this.tableTB_TICKETFI.VERIFIERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINVTYPENull() {
                return this.IsNull(this.tableTB_TICKETFI.INVTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINVTYPENull() {
                this[this.tableTB_TICKETFI.INVTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRINTSTATUSNull() {
                return this.IsNull(this.tableTB_TICKETFI.PRINTSTATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRINTSTATUSNull() {
                this[this.tableTB_TICKETFI.PRINTSTATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOUPONNull() {
                return this.IsNull(this.tableTB_TICKETFI.COUPONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOUPONNull() {
                this[this.tableTB_TICKETFI.COUPONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_TICKETFIRowChangeEvent : global::System.EventArgs {
            
            private TB_TICKETFIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETFIRowChangeEvent(TB_TICKETFIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETFIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591