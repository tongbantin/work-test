//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KKB.DealTicketReport.DSData {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_TICKETRP")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_TICKETRP : global::System.Data.DataSet {
        
        private TB_TICKETRPDataTable tableTB_TICKETRP;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_TICKETRP() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_TICKETRP(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TB_TICKETRP"] != null)) {
                    base.Tables.Add(new TB_TICKETRPDataTable(ds.Tables["TB_TICKETRP"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_TICKETRPDataTable TB_TICKETRP {
            get {
                return this.tableTB_TICKETRP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_TICKETRP cln = ((DS_TICKETRP)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TB_TICKETRP"] != null)) {
                    base.Tables.Add(new TB_TICKETRPDataTable(ds.Tables["TB_TICKETRP"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTB_TICKETRP = ((TB_TICKETRPDataTable)(base.Tables["TB_TICKETRP"]));
            if ((initTable == true)) {
                if ((this.tableTB_TICKETRP != null)) {
                    this.tableTB_TICKETRP.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_TICKETRP";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_TICKETRP.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTB_TICKETRP = new TB_TICKETRPDataTable();
            base.Tables.Add(this.tableTB_TICKETRP);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_TICKETRP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_TICKETRP ds = new DS_TICKETRP();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TB_TICKETRPRowChangeEventHandler(object sender, TB_TICKETRPRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_TICKETRPDataTable : global::System.Data.TypedTableBase<TB_TICKETRPRow> {
            
            private global::System.Data.DataColumn columnBR;
            
            private global::System.Data.DataColumn columnPRODUCT;
            
            private global::System.Data.DataColumn columnPROD_DESCRIPTION;
            
            private global::System.Data.DataColumn columnPRODTYPE;
            
            private global::System.Data.DataColumn columnPORT;
            
            private global::System.Data.DataColumn columnCOST;
            
            private global::System.Data.DataColumn columnTRAD;
            
            private global::System.Data.DataColumn columnDEALNO;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnDEALTYPE;
            
            private global::System.Data.DataColumn columnDEALDATE;
            
            private global::System.Data.DataColumn columnDEALTIME;
            
            private global::System.Data.DataColumn columnSETTDATE;
            
            private global::System.Data.DataColumn columnPOSITION;
            
            private global::System.Data.DataColumn columnDELIVTYPE;
            
            private global::System.Data.DataColumn columnTERM;
            
            private global::System.Data.DataColumn columnCCY;
            
            private global::System.Data.DataColumn columnPURCPRICE;
            
            private global::System.Data.DataColumn columnSTRDATE;
            
            private global::System.Data.DataColumn columnFINDATE;
            
            private global::System.Data.DataColumn columnREPORATE;
            
            private global::System.Data.DataColumn columnREPURCPRICE;
            
            private global::System.Data.DataColumn columnMGRATIO;
            
            private global::System.Data.DataColumn columnMGIRATE;
            
            private global::System.Data.DataColumn columnTHRESHOLD;
            
            private global::System.Data.DataColumn columnSECURITY;
            
            private global::System.Data.DataColumn columnISIN;
            
            private global::System.Data.DataColumn columnINVTYPE;
            
            private global::System.Data.DataColumn columnGROSSVALUE;
            
            private global::System.Data.DataColumn columnUNITS;
            
            private global::System.Data.DataColumn columnMARTPRICE;
            
            private global::System.Data.DataColumn columnDEALNOTE;
            
            private global::System.Data.DataColumn columnDEALTEXT;
            
            private global::System.Data.DataColumn columnVERIFIER;
            
            private global::System.Data.DataColumn columnPRINTSTATUS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETRPDataTable() {
                this.TableName = "TB_TICKETRP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TICKETRPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_TICKETRPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRColumn {
                get {
                    return this.columnBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCTColumn {
                get {
                    return this.columnPRODUCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROD_DESCRIPTIONColumn {
                get {
                    return this.columnPROD_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODTYPEColumn {
                get {
                    return this.columnPRODTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PORTColumn {
                get {
                    return this.columnPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COSTColumn {
                get {
                    return this.columnCOST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRADColumn {
                get {
                    return this.columnTRAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALNOColumn {
                get {
                    return this.columnDEALNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALTYPEColumn {
                get {
                    return this.columnDEALTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALDATEColumn {
                get {
                    return this.columnDEALDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALTIMEColumn {
                get {
                    return this.columnDEALTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SETTDATEColumn {
                get {
                    return this.columnSETTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POSITIONColumn {
                get {
                    return this.columnPOSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DELIVTYPEColumn {
                get {
                    return this.columnDELIVTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TERMColumn {
                get {
                    return this.columnTERM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CCYColumn {
                get {
                    return this.columnCCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PURCPRICEColumn {
                get {
                    return this.columnPURCPRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STRDATEColumn {
                get {
                    return this.columnSTRDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FINDATEColumn {
                get {
                    return this.columnFINDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REPORATEColumn {
                get {
                    return this.columnREPORATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REPURCPRICEColumn {
                get {
                    return this.columnREPURCPRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MGRATIOColumn {
                get {
                    return this.columnMGRATIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MGIRATEColumn {
                get {
                    return this.columnMGIRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn THRESHOLDColumn {
                get {
                    return this.columnTHRESHOLD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SECURITYColumn {
                get {
                    return this.columnSECURITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISINColumn {
                get {
                    return this.columnISIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INVTYPEColumn {
                get {
                    return this.columnINVTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GROSSVALUEColumn {
                get {
                    return this.columnGROSSVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNITSColumn {
                get {
                    return this.columnUNITS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MARTPRICEColumn {
                get {
                    return this.columnMARTPRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALNOTEColumn {
                get {
                    return this.columnDEALNOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALTEXTColumn {
                get {
                    return this.columnDEALTEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERIFIERColumn {
                get {
                    return this.columnVERIFIER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRINTSTATUSColumn {
                get {
                    return this.columnPRINTSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETRPRow this[int index] {
                get {
                    return ((TB_TICKETRPRow)(this.Rows[index]));
                }
            }
            
            public event TB_TICKETRPRowChangeEventHandler TB_TICKETRPRowChanging;
            
            public event TB_TICKETRPRowChangeEventHandler TB_TICKETRPRowChanged;
            
            public event TB_TICKETRPRowChangeEventHandler TB_TICKETRPRowDeleting;
            
            public event TB_TICKETRPRowChangeEventHandler TB_TICKETRPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_TICKETRPRow(TB_TICKETRPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETRPRow AddTB_TICKETRPRow(
                        string BR, 
                        string PRODUCT, 
                        string PROD_DESCRIPTION, 
                        string PRODTYPE, 
                        string PORT, 
                        string COST, 
                        string TRAD, 
                        string DEALNO, 
                        string CUSTOMER, 
                        string DEALTYPE, 
                        string DEALDATE, 
                        string DEALTIME, 
                        string SETTDATE, 
                        string POSITION, 
                        string DELIVTYPE, 
                        string TERM, 
                        string CCY, 
                        string PURCPRICE, 
                        string STRDATE, 
                        string FINDATE, 
                        string REPORATE, 
                        string REPURCPRICE, 
                        string MGRATIO, 
                        string MGIRATE, 
                        string THRESHOLD, 
                        string SECURITY, 
                        string ISIN, 
                        string INVTYPE, 
                        string GROSSVALUE, 
                        string UNITS, 
                        string MARTPRICE, 
                        string DEALNOTE, 
                        string DEALTEXT, 
                        string VERIFIER, 
                        string PRINTSTATUS) {
                TB_TICKETRPRow rowTB_TICKETRPRow = ((TB_TICKETRPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BR,
                        PRODUCT,
                        PROD_DESCRIPTION,
                        PRODTYPE,
                        PORT,
                        COST,
                        TRAD,
                        DEALNO,
                        CUSTOMER,
                        DEALTYPE,
                        DEALDATE,
                        DEALTIME,
                        SETTDATE,
                        POSITION,
                        DELIVTYPE,
                        TERM,
                        CCY,
                        PURCPRICE,
                        STRDATE,
                        FINDATE,
                        REPORATE,
                        REPURCPRICE,
                        MGRATIO,
                        MGIRATE,
                        THRESHOLD,
                        SECURITY,
                        ISIN,
                        INVTYPE,
                        GROSSVALUE,
                        UNITS,
                        MARTPRICE,
                        DEALNOTE,
                        DEALTEXT,
                        VERIFIER,
                        PRINTSTATUS};
                rowTB_TICKETRPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_TICKETRPRow);
                return rowTB_TICKETRPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_TICKETRPDataTable cln = ((TB_TICKETRPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_TICKETRPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBR = base.Columns["BR"];
                this.columnPRODUCT = base.Columns["PRODUCT"];
                this.columnPROD_DESCRIPTION = base.Columns["PROD_DESCRIPTION"];
                this.columnPRODTYPE = base.Columns["PRODTYPE"];
                this.columnPORT = base.Columns["PORT"];
                this.columnCOST = base.Columns["COST"];
                this.columnTRAD = base.Columns["TRAD"];
                this.columnDEALNO = base.Columns["DEALNO"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnDEALTYPE = base.Columns["DEALTYPE"];
                this.columnDEALDATE = base.Columns["DEALDATE"];
                this.columnDEALTIME = base.Columns["DEALTIME"];
                this.columnSETTDATE = base.Columns["SETTDATE"];
                this.columnPOSITION = base.Columns["POSITION"];
                this.columnDELIVTYPE = base.Columns["DELIVTYPE"];
                this.columnTERM = base.Columns["TERM"];
                this.columnCCY = base.Columns["CCY"];
                this.columnPURCPRICE = base.Columns["PURCPRICE"];
                this.columnSTRDATE = base.Columns["STRDATE"];
                this.columnFINDATE = base.Columns["FINDATE"];
                this.columnREPORATE = base.Columns["REPORATE"];
                this.columnREPURCPRICE = base.Columns["REPURCPRICE"];
                this.columnMGRATIO = base.Columns["MGRATIO"];
                this.columnMGIRATE = base.Columns["MGIRATE"];
                this.columnTHRESHOLD = base.Columns["THRESHOLD"];
                this.columnSECURITY = base.Columns["SECURITY"];
                this.columnISIN = base.Columns["ISIN"];
                this.columnINVTYPE = base.Columns["INVTYPE"];
                this.columnGROSSVALUE = base.Columns["GROSSVALUE"];
                this.columnUNITS = base.Columns["UNITS"];
                this.columnMARTPRICE = base.Columns["MARTPRICE"];
                this.columnDEALNOTE = base.Columns["DEALNOTE"];
                this.columnDEALTEXT = base.Columns["DEALTEXT"];
                this.columnVERIFIER = base.Columns["VERIFIER"];
                this.columnPRINTSTATUS = base.Columns["PRINTSTATUS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBR = new global::System.Data.DataColumn("BR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBR);
                this.columnPRODUCT = new global::System.Data.DataColumn("PRODUCT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT);
                this.columnPROD_DESCRIPTION = new global::System.Data.DataColumn("PROD_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_DESCRIPTION);
                this.columnPRODTYPE = new global::System.Data.DataColumn("PRODTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODTYPE);
                this.columnPORT = new global::System.Data.DataColumn("PORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORT);
                this.columnCOST = new global::System.Data.DataColumn("COST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST);
                this.columnTRAD = new global::System.Data.DataColumn("TRAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRAD);
                this.columnDEALNO = new global::System.Data.DataColumn("DEALNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALNO);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnDEALTYPE = new global::System.Data.DataColumn("DEALTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALTYPE);
                this.columnDEALDATE = new global::System.Data.DataColumn("DEALDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALDATE);
                this.columnDEALTIME = new global::System.Data.DataColumn("DEALTIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALTIME);
                this.columnSETTDATE = new global::System.Data.DataColumn("SETTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTDATE);
                this.columnPOSITION = new global::System.Data.DataColumn("POSITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSITION);
                this.columnDELIVTYPE = new global::System.Data.DataColumn("DELIVTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDELIVTYPE);
                this.columnTERM = new global::System.Data.DataColumn("TERM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERM);
                this.columnCCY = new global::System.Data.DataColumn("CCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCY);
                this.columnPURCPRICE = new global::System.Data.DataColumn("PURCPRICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPURCPRICE);
                this.columnSTRDATE = new global::System.Data.DataColumn("STRDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTRDATE);
                this.columnFINDATE = new global::System.Data.DataColumn("FINDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINDATE);
                this.columnREPORATE = new global::System.Data.DataColumn("REPORATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREPORATE);
                this.columnREPURCPRICE = new global::System.Data.DataColumn("REPURCPRICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREPURCPRICE);
                this.columnMGRATIO = new global::System.Data.DataColumn("MGRATIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMGRATIO);
                this.columnMGIRATE = new global::System.Data.DataColumn("MGIRATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMGIRATE);
                this.columnTHRESHOLD = new global::System.Data.DataColumn("THRESHOLD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHRESHOLD);
                this.columnSECURITY = new global::System.Data.DataColumn("SECURITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECURITY);
                this.columnISIN = new global::System.Data.DataColumn("ISIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISIN);
                this.columnINVTYPE = new global::System.Data.DataColumn("INVTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVTYPE);
                this.columnGROSSVALUE = new global::System.Data.DataColumn("GROSSVALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROSSVALUE);
                this.columnUNITS = new global::System.Data.DataColumn("UNITS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNITS);
                this.columnMARTPRICE = new global::System.Data.DataColumn("MARTPRICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMARTPRICE);
                this.columnDEALNOTE = new global::System.Data.DataColumn("DEALNOTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALNOTE);
                this.columnDEALTEXT = new global::System.Data.DataColumn("DEALTEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALTEXT);
                this.columnVERIFIER = new global::System.Data.DataColumn("VERIFIER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERIFIER);
                this.columnPRINTSTATUS = new global::System.Data.DataColumn("PRINTSTATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRINTSTATUS);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETRPRow NewTB_TICKETRPRow() {
                return ((TB_TICKETRPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_TICKETRPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_TICKETRPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_TICKETRPRowChanged != null)) {
                    this.TB_TICKETRPRowChanged(this, new TB_TICKETRPRowChangeEvent(((TB_TICKETRPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_TICKETRPRowChanging != null)) {
                    this.TB_TICKETRPRowChanging(this, new TB_TICKETRPRowChangeEvent(((TB_TICKETRPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_TICKETRPRowDeleted != null)) {
                    this.TB_TICKETRPRowDeleted(this, new TB_TICKETRPRowChangeEvent(((TB_TICKETRPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_TICKETRPRowDeleting != null)) {
                    this.TB_TICKETRPRowDeleting(this, new TB_TICKETRPRowChangeEvent(((TB_TICKETRPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_TICKETRPRow(TB_TICKETRPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TICKETRP ds = new DS_TICKETRP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_TICKETRPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_TICKETRPRow : global::System.Data.DataRow {
            
            private TB_TICKETRPDataTable tableTB_TICKETRP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TICKETRPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_TICKETRP = ((TB_TICKETRPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BR {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.BRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BR\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.BRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.PRODUCTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.PRODUCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROD_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.PROD_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROD_DESCRIPTION\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.PROD_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.PRODTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODTYPE\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.PRODTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PORT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.PORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PORT\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.PORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COST {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COST\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRAD {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.TRADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRAD\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.TRADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALNO {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.DEALNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALNO\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.DEALNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.DEALTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALTYPE\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.DEALTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.DEALDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALDATE\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.DEALDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALTIME {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.DEALTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALTIME\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.DEALTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.SETTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SETTDATE\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.SETTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string POSITION {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.POSITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POSITION\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DELIVTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.DELIVTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DELIVTYPE\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.DELIVTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TERM {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.TERMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TERM\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.TERMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.CCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CCY\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.CCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PURCPRICE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.PURCPRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PURCPRICE\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.PURCPRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STRDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.STRDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STRDATE\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.STRDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FINDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.FINDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINDATE\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.FINDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REPORATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.REPORATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REPORATE\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.REPORATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REPURCPRICE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.REPURCPRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REPURCPRICE\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.REPURCPRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MGRATIO {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.MGRATIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MGRATIO\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.MGRATIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MGIRATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.MGIRATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MGIRATE\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.MGIRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string THRESHOLD {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.THRESHOLDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THRESHOLD\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.THRESHOLDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SECURITY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.SECURITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SECURITY\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.SECURITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISIN {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.ISINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISIN\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.ISINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INVTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.INVTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INVTYPE\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.INVTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GROSSVALUE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.GROSSVALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GROSSVALUE\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.GROSSVALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNITS {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.UNITSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNITS\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.UNITSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MARTPRICE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.MARTPRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MARTPRICE\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.MARTPRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALNOTE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.DEALNOTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALNOTE\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.DEALNOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALTEXT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.DEALTEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALTEXT\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.DEALTEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERIFIER {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.VERIFIERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VERIFIER\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.VERIFIERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRINTSTATUS {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETRP.PRINTSTATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRINTSTATUS\' in table \'TB_TICKETRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETRP.PRINTSTATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRNull() {
                return this.IsNull(this.tableTB_TICKETRP.BRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRNull() {
                this[this.tableTB_TICKETRP.BRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCTNull() {
                return this.IsNull(this.tableTB_TICKETRP.PRODUCTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCTNull() {
                this[this.tableTB_TICKETRP.PRODUCTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROD_DESCRIPTIONNull() {
                return this.IsNull(this.tableTB_TICKETRP.PROD_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROD_DESCRIPTIONNull() {
                this[this.tableTB_TICKETRP.PROD_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODTYPENull() {
                return this.IsNull(this.tableTB_TICKETRP.PRODTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODTYPENull() {
                this[this.tableTB_TICKETRP.PRODTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPORTNull() {
                return this.IsNull(this.tableTB_TICKETRP.PORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPORTNull() {
                this[this.tableTB_TICKETRP.PORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOSTNull() {
                return this.IsNull(this.tableTB_TICKETRP.COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOSTNull() {
                this[this.tableTB_TICKETRP.COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRADNull() {
                return this.IsNull(this.tableTB_TICKETRP.TRADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRADNull() {
                this[this.tableTB_TICKETRP.TRADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALNONull() {
                return this.IsNull(this.tableTB_TICKETRP.DEALNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALNONull() {
                this[this.tableTB_TICKETRP.DEALNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tableTB_TICKETRP.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMERNull() {
                this[this.tableTB_TICKETRP.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALTYPENull() {
                return this.IsNull(this.tableTB_TICKETRP.DEALTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALTYPENull() {
                this[this.tableTB_TICKETRP.DEALTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALDATENull() {
                return this.IsNull(this.tableTB_TICKETRP.DEALDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALDATENull() {
                this[this.tableTB_TICKETRP.DEALDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALTIMENull() {
                return this.IsNull(this.tableTB_TICKETRP.DEALTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALTIMENull() {
                this[this.tableTB_TICKETRP.DEALTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETTDATENull() {
                return this.IsNull(this.tableTB_TICKETRP.SETTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETTDATENull() {
                this[this.tableTB_TICKETRP.SETTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOSITIONNull() {
                return this.IsNull(this.tableTB_TICKETRP.POSITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOSITIONNull() {
                this[this.tableTB_TICKETRP.POSITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDELIVTYPENull() {
                return this.IsNull(this.tableTB_TICKETRP.DELIVTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDELIVTYPENull() {
                this[this.tableTB_TICKETRP.DELIVTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTERMNull() {
                return this.IsNull(this.tableTB_TICKETRP.TERMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTERMNull() {
                this[this.tableTB_TICKETRP.TERMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCCYNull() {
                return this.IsNull(this.tableTB_TICKETRP.CCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCCYNull() {
                this[this.tableTB_TICKETRP.CCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPURCPRICENull() {
                return this.IsNull(this.tableTB_TICKETRP.PURCPRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPURCPRICENull() {
                this[this.tableTB_TICKETRP.PURCPRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTRDATENull() {
                return this.IsNull(this.tableTB_TICKETRP.STRDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTRDATENull() {
                this[this.tableTB_TICKETRP.STRDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFINDATENull() {
                return this.IsNull(this.tableTB_TICKETRP.FINDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFINDATENull() {
                this[this.tableTB_TICKETRP.FINDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREPORATENull() {
                return this.IsNull(this.tableTB_TICKETRP.REPORATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREPORATENull() {
                this[this.tableTB_TICKETRP.REPORATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREPURCPRICENull() {
                return this.IsNull(this.tableTB_TICKETRP.REPURCPRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREPURCPRICENull() {
                this[this.tableTB_TICKETRP.REPURCPRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMGRATIONull() {
                return this.IsNull(this.tableTB_TICKETRP.MGRATIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMGRATIONull() {
                this[this.tableTB_TICKETRP.MGRATIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMGIRATENull() {
                return this.IsNull(this.tableTB_TICKETRP.MGIRATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMGIRATENull() {
                this[this.tableTB_TICKETRP.MGIRATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHRESHOLDNull() {
                return this.IsNull(this.tableTB_TICKETRP.THRESHOLDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHRESHOLDNull() {
                this[this.tableTB_TICKETRP.THRESHOLDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSECURITYNull() {
                return this.IsNull(this.tableTB_TICKETRP.SECURITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSECURITYNull() {
                this[this.tableTB_TICKETRP.SECURITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISINNull() {
                return this.IsNull(this.tableTB_TICKETRP.ISINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISINNull() {
                this[this.tableTB_TICKETRP.ISINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINVTYPENull() {
                return this.IsNull(this.tableTB_TICKETRP.INVTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINVTYPENull() {
                this[this.tableTB_TICKETRP.INVTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGROSSVALUENull() {
                return this.IsNull(this.tableTB_TICKETRP.GROSSVALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGROSSVALUENull() {
                this[this.tableTB_TICKETRP.GROSSVALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNITSNull() {
                return this.IsNull(this.tableTB_TICKETRP.UNITSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNITSNull() {
                this[this.tableTB_TICKETRP.UNITSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMARTPRICENull() {
                return this.IsNull(this.tableTB_TICKETRP.MARTPRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMARTPRICENull() {
                this[this.tableTB_TICKETRP.MARTPRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALNOTENull() {
                return this.IsNull(this.tableTB_TICKETRP.DEALNOTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALNOTENull() {
                this[this.tableTB_TICKETRP.DEALNOTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALTEXTNull() {
                return this.IsNull(this.tableTB_TICKETRP.DEALTEXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALTEXTNull() {
                this[this.tableTB_TICKETRP.DEALTEXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERIFIERNull() {
                return this.IsNull(this.tableTB_TICKETRP.VERIFIERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERIFIERNull() {
                this[this.tableTB_TICKETRP.VERIFIERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRINTSTATUSNull() {
                return this.IsNull(this.tableTB_TICKETRP.PRINTSTATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRINTSTATUSNull() {
                this[this.tableTB_TICKETRP.PRINTSTATUSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_TICKETRPRowChangeEvent : global::System.EventArgs {
            
            private TB_TICKETRPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETRPRowChangeEvent(TB_TICKETRPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETRPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591