//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3655
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KKB.DealTicketReport.DSData {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_TICKETSW")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_TICKETSW : global::System.Data.DataSet {
        
        private TB_TICKETSWDataTable tableTB_TICKETSW;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_TICKETSW() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_TICKETSW(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TB_TICKETSW"] != null)) {
                    base.Tables.Add(new TB_TICKETSWDataTable(ds.Tables["TB_TICKETSW"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_TICKETSWDataTable TB_TICKETSW {
            get {
                return this.tableTB_TICKETSW;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_TICKETSW cln = ((DS_TICKETSW)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TB_TICKETSW"] != null)) {
                    base.Tables.Add(new TB_TICKETSWDataTable(ds.Tables["TB_TICKETSW"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTB_TICKETSW = ((TB_TICKETSWDataTable)(base.Tables["TB_TICKETSW"]));
            if ((initTable == true)) {
                if ((this.tableTB_TICKETSW != null)) {
                    this.tableTB_TICKETSW.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_TICKETSW";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_TICKETSW.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTB_TICKETSW = new TB_TICKETSWDataTable();
            base.Tables.Add(this.tableTB_TICKETSW);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_TICKETSW() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_TICKETSW ds = new DS_TICKETSW();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TB_TICKETSWRowChangeEventHandler(object sender, TB_TICKETSWRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_TICKETSWDataTable : global::System.Data.TypedTableBase<TB_TICKETSWRow> {
            
            private global::System.Data.DataColumn columnBR;
            
            private global::System.Data.DataColumn columnPRODUCT;
            
            private global::System.Data.DataColumn columnPROD_DESCRIPTION;
            
            private global::System.Data.DataColumn columnPRODTYPE;
            
            private global::System.Data.DataColumn columnPORT;
            
            private global::System.Data.DataColumn columnCOST;
            
            private global::System.Data.DataColumn columnTRAD;
            
            private global::System.Data.DataColumn columnDEALNO;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnUNDDEALNO;
            
            private global::System.Data.DataColumn columnUNDSECID;
            
            private global::System.Data.DataColumn columnDEALDATE;
            
            private global::System.Data.DataColumn columnDEALTIME;
            
            private global::System.Data.DataColumn columnSETTDATE;
            
            private global::System.Data.DataColumn columnMATDATE;
            
            private global::System.Data.DataColumn columnNOTCCY;
            
            private global::System.Data.DataColumn columnNOTCCYAMT;
            
            private global::System.Data.DataColumn columnEXCHRATE;
            
            private global::System.Data.DataColumn columnCCYPAIR;
            
            private global::System.Data.DataColumn columnINITPAYDAY;
            
            private global::System.Data.DataColumn columnINITRECCCY;
            
            private global::System.Data.DataColumn columnINITRECAMT;
            
            private global::System.Data.DataColumn columnINITPAYCCY;
            
            private global::System.Data.DataColumn columnINITPAYAMT;
            
            private global::System.Data.DataColumn columnINTPAYDAY;
            
            private global::System.Data.DataColumn columnINTPAYCYCLE;
            
            private global::System.Data.DataColumn columnINTRECVDAY;
            
            private global::System.Data.DataColumn columnINTRECVCYCLE;
            
            private global::System.Data.DataColumn columnIRTYPEREC;
            
            private global::System.Data.DataColumn columnIRCODEREC;
            
            private global::System.Data.DataColumn columnIRRATEREC;
            
            private global::System.Data.DataColumn columnIRCCYREC;
            
            private global::System.Data.DataColumn columnIBASISREC;
            
            private global::System.Data.DataColumn columnIRTYPEPAY;
            
            private global::System.Data.DataColumn columnIRCODEPAY;
            
            private global::System.Data.DataColumn columnIRRATEPAY;
            
            private global::System.Data.DataColumn columnIRCCYPAY;
            
            private global::System.Data.DataColumn columnIBASISPAY;
            
            private global::System.Data.DataColumn columnFINDATE;
            
            private global::System.Data.DataColumn columnFINRECCCY;
            
            private global::System.Data.DataColumn columnFINRECAMT;
            
            private global::System.Data.DataColumn columnFINPAYCCY;
            
            private global::System.Data.DataColumn columnFINPAYAMT;
            
            private global::System.Data.DataColumn columnFINCENT;
            
            private global::System.Data.DataColumn columnDAYCONVT;
            
            private global::System.Data.DataColumn columnDEALSRC;
            
            private global::System.Data.DataColumn columnDEALNOTE;
            
            private global::System.Data.DataColumn columnTRADEDATE;
            
            private global::System.Data.DataColumn columnDEALTEXT;
            
            private global::System.Data.DataColumn columnVERIFIER;
            
            private global::System.Data.DataColumn columnSPREADRATEREC;
            
            private global::System.Data.DataColumn columnSPREADRATEPAY;
            
            private global::System.Data.DataColumn columnACCTMETHOD;
            
            private global::System.Data.DataColumn columnCOUNTERPARTYREF;
            
            private global::System.Data.DataColumn columnINTPAYCYCLEMONTH;
            
            private global::System.Data.DataColumn columnINTRECVCYCLEMONTH;
            
            private global::System.Data.DataColumn columnPRINTSTATUS;
            
            private global::System.Data.DataColumn columnNETPAYIND;
            
            private global::System.Data.DataColumn columnFINCENTPAY;
            
            private global::System.Data.DataColumn columnDAYCONVTPAY;
            
            private global::System.Data.DataColumn columnTERMINATIONFEE;
            
            private global::System.Data.DataColumn columnPRINCIPALAMORT;
            
            private global::System.Data.DataColumn columnPAYDISCOUNT;
            
            private global::System.Data.DataColumn columnPAYFORWARD;
            
            private global::System.Data.DataColumn columnRECVDISCOUNT;
            
            private global::System.Data.DataColumn columnRECVFORWARD;
            
            private global::System.Data.DataColumn columnSETTLEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETSWDataTable() {
                this.TableName = "TB_TICKETSW";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TICKETSWDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_TICKETSWDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRColumn {
                get {
                    return this.columnBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCTColumn {
                get {
                    return this.columnPRODUCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROD_DESCRIPTIONColumn {
                get {
                    return this.columnPROD_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODTYPEColumn {
                get {
                    return this.columnPRODTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PORTColumn {
                get {
                    return this.columnPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COSTColumn {
                get {
                    return this.columnCOST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRADColumn {
                get {
                    return this.columnTRAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALNOColumn {
                get {
                    return this.columnDEALNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNDDEALNOColumn {
                get {
                    return this.columnUNDDEALNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNDSECIDColumn {
                get {
                    return this.columnUNDSECID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALDATEColumn {
                get {
                    return this.columnDEALDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALTIMEColumn {
                get {
                    return this.columnDEALTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SETTDATEColumn {
                get {
                    return this.columnSETTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MATDATEColumn {
                get {
                    return this.columnMATDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOTCCYColumn {
                get {
                    return this.columnNOTCCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOTCCYAMTColumn {
                get {
                    return this.columnNOTCCYAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXCHRATEColumn {
                get {
                    return this.columnEXCHRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CCYPAIRColumn {
                get {
                    return this.columnCCYPAIR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INITPAYDAYColumn {
                get {
                    return this.columnINITPAYDAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INITRECCCYColumn {
                get {
                    return this.columnINITRECCCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INITRECAMTColumn {
                get {
                    return this.columnINITRECAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INITPAYCCYColumn {
                get {
                    return this.columnINITPAYCCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INITPAYAMTColumn {
                get {
                    return this.columnINITPAYAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTPAYDAYColumn {
                get {
                    return this.columnINTPAYDAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTPAYCYCLEColumn {
                get {
                    return this.columnINTPAYCYCLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTRECVDAYColumn {
                get {
                    return this.columnINTRECVDAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTRECVCYCLEColumn {
                get {
                    return this.columnINTRECVCYCLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IRTYPERECColumn {
                get {
                    return this.columnIRTYPEREC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IRCODERECColumn {
                get {
                    return this.columnIRCODEREC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IRRATERECColumn {
                get {
                    return this.columnIRRATEREC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IRCCYRECColumn {
                get {
                    return this.columnIRCCYREC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IBASISRECColumn {
                get {
                    return this.columnIBASISREC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IRTYPEPAYColumn {
                get {
                    return this.columnIRTYPEPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IRCODEPAYColumn {
                get {
                    return this.columnIRCODEPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IRRATEPAYColumn {
                get {
                    return this.columnIRRATEPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IRCCYPAYColumn {
                get {
                    return this.columnIRCCYPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IBASISPAYColumn {
                get {
                    return this.columnIBASISPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FINDATEColumn {
                get {
                    return this.columnFINDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FINRECCCYColumn {
                get {
                    return this.columnFINRECCCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FINRECAMTColumn {
                get {
                    return this.columnFINRECAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FINPAYCCYColumn {
                get {
                    return this.columnFINPAYCCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FINPAYAMTColumn {
                get {
                    return this.columnFINPAYAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FINCENTColumn {
                get {
                    return this.columnFINCENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DAYCONVTColumn {
                get {
                    return this.columnDAYCONVT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALSRCColumn {
                get {
                    return this.columnDEALSRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALNOTEColumn {
                get {
                    return this.columnDEALNOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRADEDATEColumn {
                get {
                    return this.columnTRADEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALTEXTColumn {
                get {
                    return this.columnDEALTEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERIFIERColumn {
                get {
                    return this.columnVERIFIER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPREADRATERECColumn {
                get {
                    return this.columnSPREADRATEREC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPREADRATEPAYColumn {
                get {
                    return this.columnSPREADRATEPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACCTMETHODColumn {
                get {
                    return this.columnACCTMETHOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COUNTERPARTYREFColumn {
                get {
                    return this.columnCOUNTERPARTYREF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTPAYCYCLEMONTHColumn {
                get {
                    return this.columnINTPAYCYCLEMONTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTRECVCYCLEMONTHColumn {
                get {
                    return this.columnINTRECVCYCLEMONTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRINTSTATUSColumn {
                get {
                    return this.columnPRINTSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NETPAYINDColumn {
                get {
                    return this.columnNETPAYIND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FINCENTPAYColumn {
                get {
                    return this.columnFINCENTPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DAYCONVTPAYColumn {
                get {
                    return this.columnDAYCONVTPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TERMINATIONFEEColumn {
                get {
                    return this.columnTERMINATIONFEE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRINCIPALAMORTColumn {
                get {
                    return this.columnPRINCIPALAMORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAYDISCOUNTColumn {
                get {
                    return this.columnPAYDISCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAYFORWARDColumn {
                get {
                    return this.columnPAYFORWARD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECVDISCOUNTColumn {
                get {
                    return this.columnRECVDISCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECVFORWARDColumn {
                get {
                    return this.columnRECVFORWARD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SETTLEDATEColumn {
                get {
                    return this.columnSETTLEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETSWRow this[int index] {
                get {
                    return ((TB_TICKETSWRow)(this.Rows[index]));
                }
            }
            
            public event TB_TICKETSWRowChangeEventHandler TB_TICKETSWRowChanging;
            
            public event TB_TICKETSWRowChangeEventHandler TB_TICKETSWRowChanged;
            
            public event TB_TICKETSWRowChangeEventHandler TB_TICKETSWRowDeleting;
            
            public event TB_TICKETSWRowChangeEventHandler TB_TICKETSWRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_TICKETSWRow(TB_TICKETSWRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETSWRow AddTB_TICKETSWRow(
                        string BR, 
                        string PRODUCT, 
                        string PROD_DESCRIPTION, 
                        string PRODTYPE, 
                        string PORT, 
                        string COST, 
                        string TRAD, 
                        string DEALNO, 
                        string CUSTOMER, 
                        string UNDDEALNO, 
                        string UNDSECID, 
                        string DEALDATE, 
                        string DEALTIME, 
                        string SETTDATE, 
                        string MATDATE, 
                        string NOTCCY, 
                        string NOTCCYAMT, 
                        string EXCHRATE, 
                        string CCYPAIR, 
                        string INITPAYDAY, 
                        string INITRECCCY, 
                        string INITRECAMT, 
                        string INITPAYCCY, 
                        string INITPAYAMT, 
                        string INTPAYDAY, 
                        string INTPAYCYCLE, 
                        string INTRECVDAY, 
                        string INTRECVCYCLE, 
                        string IRTYPEREC, 
                        string IRCODEREC, 
                        string IRRATEREC, 
                        string IRCCYREC, 
                        string IBASISREC, 
                        string IRTYPEPAY, 
                        string IRCODEPAY, 
                        string IRRATEPAY, 
                        string IRCCYPAY, 
                        string IBASISPAY, 
                        string FINDATE, 
                        string FINRECCCY, 
                        string FINRECAMT, 
                        string FINPAYCCY, 
                        string FINPAYAMT, 
                        string FINCENT, 
                        string DAYCONVT, 
                        string DEALSRC, 
                        string DEALNOTE, 
                        string TRADEDATE, 
                        string DEALTEXT, 
                        string VERIFIER, 
                        string SPREADRATEREC, 
                        string SPREADRATEPAY, 
                        string ACCTMETHOD, 
                        string COUNTERPARTYREF, 
                        string INTPAYCYCLEMONTH, 
                        string INTRECVCYCLEMONTH, 
                        string PRINTSTATUS, 
                        string NETPAYIND, 
                        string FINCENTPAY, 
                        string DAYCONVTPAY, 
                        string TERMINATIONFEE, 
                        string PRINCIPALAMORT, 
                        string PAYDISCOUNT, 
                        string PAYFORWARD, 
                        string RECVDISCOUNT, 
                        string RECVFORWARD, 
                        string SETTLEDATE) {
                TB_TICKETSWRow rowTB_TICKETSWRow = ((TB_TICKETSWRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BR,
                        PRODUCT,
                        PROD_DESCRIPTION,
                        PRODTYPE,
                        PORT,
                        COST,
                        TRAD,
                        DEALNO,
                        CUSTOMER,
                        UNDDEALNO,
                        UNDSECID,
                        DEALDATE,
                        DEALTIME,
                        SETTDATE,
                        MATDATE,
                        NOTCCY,
                        NOTCCYAMT,
                        EXCHRATE,
                        CCYPAIR,
                        INITPAYDAY,
                        INITRECCCY,
                        INITRECAMT,
                        INITPAYCCY,
                        INITPAYAMT,
                        INTPAYDAY,
                        INTPAYCYCLE,
                        INTRECVDAY,
                        INTRECVCYCLE,
                        IRTYPEREC,
                        IRCODEREC,
                        IRRATEREC,
                        IRCCYREC,
                        IBASISREC,
                        IRTYPEPAY,
                        IRCODEPAY,
                        IRRATEPAY,
                        IRCCYPAY,
                        IBASISPAY,
                        FINDATE,
                        FINRECCCY,
                        FINRECAMT,
                        FINPAYCCY,
                        FINPAYAMT,
                        FINCENT,
                        DAYCONVT,
                        DEALSRC,
                        DEALNOTE,
                        TRADEDATE,
                        DEALTEXT,
                        VERIFIER,
                        SPREADRATEREC,
                        SPREADRATEPAY,
                        ACCTMETHOD,
                        COUNTERPARTYREF,
                        INTPAYCYCLEMONTH,
                        INTRECVCYCLEMONTH,
                        PRINTSTATUS,
                        NETPAYIND,
                        FINCENTPAY,
                        DAYCONVTPAY,
                        TERMINATIONFEE,
                        PRINCIPALAMORT,
                        PAYDISCOUNT,
                        PAYFORWARD,
                        RECVDISCOUNT,
                        RECVFORWARD,
                        SETTLEDATE};
                rowTB_TICKETSWRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_TICKETSWRow);
                return rowTB_TICKETSWRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_TICKETSWDataTable cln = ((TB_TICKETSWDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_TICKETSWDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBR = base.Columns["BR"];
                this.columnPRODUCT = base.Columns["PRODUCT"];
                this.columnPROD_DESCRIPTION = base.Columns["PROD_DESCRIPTION"];
                this.columnPRODTYPE = base.Columns["PRODTYPE"];
                this.columnPORT = base.Columns["PORT"];
                this.columnCOST = base.Columns["COST"];
                this.columnTRAD = base.Columns["TRAD"];
                this.columnDEALNO = base.Columns["DEALNO"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnUNDDEALNO = base.Columns["UNDDEALNO"];
                this.columnUNDSECID = base.Columns["UNDSECID"];
                this.columnDEALDATE = base.Columns["DEALDATE"];
                this.columnDEALTIME = base.Columns["DEALTIME"];
                this.columnSETTDATE = base.Columns["SETTDATE"];
                this.columnMATDATE = base.Columns["MATDATE"];
                this.columnNOTCCY = base.Columns["NOTCCY"];
                this.columnNOTCCYAMT = base.Columns["NOTCCYAMT"];
                this.columnEXCHRATE = base.Columns["EXCHRATE"];
                this.columnCCYPAIR = base.Columns["CCYPAIR"];
                this.columnINITPAYDAY = base.Columns["INITPAYDAY"];
                this.columnINITRECCCY = base.Columns["INITRECCCY"];
                this.columnINITRECAMT = base.Columns["INITRECAMT"];
                this.columnINITPAYCCY = base.Columns["INITPAYCCY"];
                this.columnINITPAYAMT = base.Columns["INITPAYAMT"];
                this.columnINTPAYDAY = base.Columns["INTPAYDAY"];
                this.columnINTPAYCYCLE = base.Columns["INTPAYCYCLE"];
                this.columnINTRECVDAY = base.Columns["INTRECVDAY"];
                this.columnINTRECVCYCLE = base.Columns["INTRECVCYCLE"];
                this.columnIRTYPEREC = base.Columns["IRTYPEREC"];
                this.columnIRCODEREC = base.Columns["IRCODEREC"];
                this.columnIRRATEREC = base.Columns["IRRATEREC"];
                this.columnIRCCYREC = base.Columns["IRCCYREC"];
                this.columnIBASISREC = base.Columns["IBASISREC"];
                this.columnIRTYPEPAY = base.Columns["IRTYPEPAY"];
                this.columnIRCODEPAY = base.Columns["IRCODEPAY"];
                this.columnIRRATEPAY = base.Columns["IRRATEPAY"];
                this.columnIRCCYPAY = base.Columns["IRCCYPAY"];
                this.columnIBASISPAY = base.Columns["IBASISPAY"];
                this.columnFINDATE = base.Columns["FINDATE"];
                this.columnFINRECCCY = base.Columns["FINRECCCY"];
                this.columnFINRECAMT = base.Columns["FINRECAMT"];
                this.columnFINPAYCCY = base.Columns["FINPAYCCY"];
                this.columnFINPAYAMT = base.Columns["FINPAYAMT"];
                this.columnFINCENT = base.Columns["FINCENT"];
                this.columnDAYCONVT = base.Columns["DAYCONVT"];
                this.columnDEALSRC = base.Columns["DEALSRC"];
                this.columnDEALNOTE = base.Columns["DEALNOTE"];
                this.columnTRADEDATE = base.Columns["TRADEDATE"];
                this.columnDEALTEXT = base.Columns["DEALTEXT"];
                this.columnVERIFIER = base.Columns["VERIFIER"];
                this.columnSPREADRATEREC = base.Columns["SPREADRATEREC"];
                this.columnSPREADRATEPAY = base.Columns["SPREADRATEPAY"];
                this.columnACCTMETHOD = base.Columns["ACCTMETHOD"];
                this.columnCOUNTERPARTYREF = base.Columns["COUNTERPARTYREF"];
                this.columnINTPAYCYCLEMONTH = base.Columns["INTPAYCYCLEMONTH"];
                this.columnINTRECVCYCLEMONTH = base.Columns["INTRECVCYCLEMONTH"];
                this.columnPRINTSTATUS = base.Columns["PRINTSTATUS"];
                this.columnNETPAYIND = base.Columns["NETPAYIND"];
                this.columnFINCENTPAY = base.Columns["FINCENTPAY"];
                this.columnDAYCONVTPAY = base.Columns["DAYCONVTPAY"];
                this.columnTERMINATIONFEE = base.Columns["TERMINATIONFEE"];
                this.columnPRINCIPALAMORT = base.Columns["PRINCIPALAMORT"];
                this.columnPAYDISCOUNT = base.Columns["PAYDISCOUNT"];
                this.columnPAYFORWARD = base.Columns["PAYFORWARD"];
                this.columnRECVDISCOUNT = base.Columns["RECVDISCOUNT"];
                this.columnRECVFORWARD = base.Columns["RECVFORWARD"];
                this.columnSETTLEDATE = base.Columns["SETTLEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBR = new global::System.Data.DataColumn("BR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBR);
                this.columnPRODUCT = new global::System.Data.DataColumn("PRODUCT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT);
                this.columnPROD_DESCRIPTION = new global::System.Data.DataColumn("PROD_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_DESCRIPTION);
                this.columnPRODTYPE = new global::System.Data.DataColumn("PRODTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODTYPE);
                this.columnPORT = new global::System.Data.DataColumn("PORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORT);
                this.columnCOST = new global::System.Data.DataColumn("COST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST);
                this.columnTRAD = new global::System.Data.DataColumn("TRAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRAD);
                this.columnDEALNO = new global::System.Data.DataColumn("DEALNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALNO);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnUNDDEALNO = new global::System.Data.DataColumn("UNDDEALNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNDDEALNO);
                this.columnUNDSECID = new global::System.Data.DataColumn("UNDSECID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNDSECID);
                this.columnDEALDATE = new global::System.Data.DataColumn("DEALDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALDATE);
                this.columnDEALTIME = new global::System.Data.DataColumn("DEALTIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALTIME);
                this.columnSETTDATE = new global::System.Data.DataColumn("SETTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTDATE);
                this.columnMATDATE = new global::System.Data.DataColumn("MATDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMATDATE);
                this.columnNOTCCY = new global::System.Data.DataColumn("NOTCCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTCCY);
                this.columnNOTCCYAMT = new global::System.Data.DataColumn("NOTCCYAMT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTCCYAMT);
                this.columnEXCHRATE = new global::System.Data.DataColumn("EXCHRATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXCHRATE);
                this.columnCCYPAIR = new global::System.Data.DataColumn("CCYPAIR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCYPAIR);
                this.columnINITPAYDAY = new global::System.Data.DataColumn("INITPAYDAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINITPAYDAY);
                this.columnINITRECCCY = new global::System.Data.DataColumn("INITRECCCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINITRECCCY);
                this.columnINITRECAMT = new global::System.Data.DataColumn("INITRECAMT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINITRECAMT);
                this.columnINITPAYCCY = new global::System.Data.DataColumn("INITPAYCCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINITPAYCCY);
                this.columnINITPAYAMT = new global::System.Data.DataColumn("INITPAYAMT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINITPAYAMT);
                this.columnINTPAYDAY = new global::System.Data.DataColumn("INTPAYDAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTPAYDAY);
                this.columnINTPAYCYCLE = new global::System.Data.DataColumn("INTPAYCYCLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTPAYCYCLE);
                this.columnINTRECVDAY = new global::System.Data.DataColumn("INTRECVDAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTRECVDAY);
                this.columnINTRECVCYCLE = new global::System.Data.DataColumn("INTRECVCYCLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTRECVCYCLE);
                this.columnIRTYPEREC = new global::System.Data.DataColumn("IRTYPEREC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIRTYPEREC);
                this.columnIRCODEREC = new global::System.Data.DataColumn("IRCODEREC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIRCODEREC);
                this.columnIRRATEREC = new global::System.Data.DataColumn("IRRATEREC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIRRATEREC);
                this.columnIRCCYREC = new global::System.Data.DataColumn("IRCCYREC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIRCCYREC);
                this.columnIBASISREC = new global::System.Data.DataColumn("IBASISREC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIBASISREC);
                this.columnIRTYPEPAY = new global::System.Data.DataColumn("IRTYPEPAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIRTYPEPAY);
                this.columnIRCODEPAY = new global::System.Data.DataColumn("IRCODEPAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIRCODEPAY);
                this.columnIRRATEPAY = new global::System.Data.DataColumn("IRRATEPAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIRRATEPAY);
                this.columnIRCCYPAY = new global::System.Data.DataColumn("IRCCYPAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIRCCYPAY);
                this.columnIBASISPAY = new global::System.Data.DataColumn("IBASISPAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIBASISPAY);
                this.columnFINDATE = new global::System.Data.DataColumn("FINDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINDATE);
                this.columnFINRECCCY = new global::System.Data.DataColumn("FINRECCCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINRECCCY);
                this.columnFINRECAMT = new global::System.Data.DataColumn("FINRECAMT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINRECAMT);
                this.columnFINPAYCCY = new global::System.Data.DataColumn("FINPAYCCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINPAYCCY);
                this.columnFINPAYAMT = new global::System.Data.DataColumn("FINPAYAMT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINPAYAMT);
                this.columnFINCENT = new global::System.Data.DataColumn("FINCENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINCENT);
                this.columnDAYCONVT = new global::System.Data.DataColumn("DAYCONVT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYCONVT);
                this.columnDEALSRC = new global::System.Data.DataColumn("DEALSRC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALSRC);
                this.columnDEALNOTE = new global::System.Data.DataColumn("DEALNOTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALNOTE);
                this.columnTRADEDATE = new global::System.Data.DataColumn("TRADEDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRADEDATE);
                this.columnDEALTEXT = new global::System.Data.DataColumn("DEALTEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALTEXT);
                this.columnVERIFIER = new global::System.Data.DataColumn("VERIFIER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERIFIER);
                this.columnSPREADRATEREC = new global::System.Data.DataColumn("SPREADRATEREC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPREADRATEREC);
                this.columnSPREADRATEPAY = new global::System.Data.DataColumn("SPREADRATEPAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPREADRATEPAY);
                this.columnACCTMETHOD = new global::System.Data.DataColumn("ACCTMETHOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCTMETHOD);
                this.columnCOUNTERPARTYREF = new global::System.Data.DataColumn("COUNTERPARTYREF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNTERPARTYREF);
                this.columnINTPAYCYCLEMONTH = new global::System.Data.DataColumn("INTPAYCYCLEMONTH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTPAYCYCLEMONTH);
                this.columnINTRECVCYCLEMONTH = new global::System.Data.DataColumn("INTRECVCYCLEMONTH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTRECVCYCLEMONTH);
                this.columnPRINTSTATUS = new global::System.Data.DataColumn("PRINTSTATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRINTSTATUS);
                this.columnNETPAYIND = new global::System.Data.DataColumn("NETPAYIND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETPAYIND);
                this.columnFINCENTPAY = new global::System.Data.DataColumn("FINCENTPAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINCENTPAY);
                this.columnDAYCONVTPAY = new global::System.Data.DataColumn("DAYCONVTPAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYCONVTPAY);
                this.columnTERMINATIONFEE = new global::System.Data.DataColumn("TERMINATIONFEE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERMINATIONFEE);
                this.columnPRINCIPALAMORT = new global::System.Data.DataColumn("PRINCIPALAMORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRINCIPALAMORT);
                this.columnPAYDISCOUNT = new global::System.Data.DataColumn("PAYDISCOUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYDISCOUNT);
                this.columnPAYFORWARD = new global::System.Data.DataColumn("PAYFORWARD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYFORWARD);
                this.columnRECVDISCOUNT = new global::System.Data.DataColumn("RECVDISCOUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECVDISCOUNT);
                this.columnRECVFORWARD = new global::System.Data.DataColumn("RECVFORWARD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECVFORWARD);
                this.columnSETTLEDATE = new global::System.Data.DataColumn("SETTLEDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTLEDATE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETSWRow NewTB_TICKETSWRow() {
                return ((TB_TICKETSWRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_TICKETSWRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_TICKETSWRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_TICKETSWRowChanged != null)) {
                    this.TB_TICKETSWRowChanged(this, new TB_TICKETSWRowChangeEvent(((TB_TICKETSWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_TICKETSWRowChanging != null)) {
                    this.TB_TICKETSWRowChanging(this, new TB_TICKETSWRowChangeEvent(((TB_TICKETSWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_TICKETSWRowDeleted != null)) {
                    this.TB_TICKETSWRowDeleted(this, new TB_TICKETSWRowChangeEvent(((TB_TICKETSWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_TICKETSWRowDeleting != null)) {
                    this.TB_TICKETSWRowDeleting(this, new TB_TICKETSWRowChangeEvent(((TB_TICKETSWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_TICKETSWRow(TB_TICKETSWRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TICKETSW ds = new DS_TICKETSW();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_TICKETSWDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_TICKETSWRow : global::System.Data.DataRow {
            
            private TB_TICKETSWDataTable tableTB_TICKETSW;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TICKETSWRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_TICKETSW = ((TB_TICKETSWDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BR {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.BRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BR\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.BRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.PRODUCTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.PRODUCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROD_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.PROD_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROD_DESCRIPTION\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.PROD_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.PRODTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODTYPE\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.PRODTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PORT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.PORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PORT\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.PORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COST {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COST\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRAD {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.TRADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRAD\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.TRADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALNO {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.DEALNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALNO\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.DEALNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNDDEALNO {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.UNDDEALNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNDDEALNO\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.UNDDEALNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNDSECID {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.UNDSECIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNDSECID\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.UNDSECIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.DEALDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALDATE\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.DEALDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALTIME {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.DEALTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALTIME\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.DEALTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.SETTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SETTDATE\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.SETTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MATDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.MATDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MATDATE\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.MATDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOTCCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.NOTCCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOTCCY\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.NOTCCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOTCCYAMT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.NOTCCYAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOTCCYAMT\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.NOTCCYAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EXCHRATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.EXCHRATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXCHRATE\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.EXCHRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CCYPAIR {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.CCYPAIRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CCYPAIR\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.CCYPAIRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INITPAYDAY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.INITPAYDAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INITPAYDAY\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.INITPAYDAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INITRECCCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.INITRECCCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INITRECCCY\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.INITRECCCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INITRECAMT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.INITRECAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INITRECAMT\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.INITRECAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INITPAYCCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.INITPAYCCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INITPAYCCY\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.INITPAYCCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INITPAYAMT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.INITPAYAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INITPAYAMT\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.INITPAYAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTPAYDAY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.INTPAYDAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTPAYDAY\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.INTPAYDAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTPAYCYCLE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.INTPAYCYCLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTPAYCYCLE\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.INTPAYCYCLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTRECVDAY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.INTRECVDAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTRECVDAY\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.INTRECVDAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTRECVCYCLE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.INTRECVCYCLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTRECVCYCLE\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.INTRECVCYCLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IRTYPEREC {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.IRTYPERECColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IRTYPEREC\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.IRTYPERECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IRCODEREC {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.IRCODERECColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IRCODEREC\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.IRCODERECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IRRATEREC {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.IRRATERECColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IRRATEREC\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.IRRATERECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IRCCYREC {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.IRCCYRECColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IRCCYREC\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.IRCCYRECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IBASISREC {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.IBASISRECColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IBASISREC\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.IBASISRECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IRTYPEPAY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.IRTYPEPAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IRTYPEPAY\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.IRTYPEPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IRCODEPAY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.IRCODEPAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IRCODEPAY\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.IRCODEPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IRRATEPAY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.IRRATEPAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IRRATEPAY\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.IRRATEPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IRCCYPAY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.IRCCYPAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IRCCYPAY\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.IRCCYPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IBASISPAY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.IBASISPAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IBASISPAY\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.IBASISPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FINDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.FINDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINDATE\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.FINDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FINRECCCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.FINRECCCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINRECCCY\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.FINRECCCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FINRECAMT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.FINRECAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINRECAMT\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.FINRECAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FINPAYCCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.FINPAYCCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINPAYCCY\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.FINPAYCCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FINPAYAMT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.FINPAYAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINPAYAMT\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.FINPAYAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FINCENT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.FINCENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINCENT\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.FINCENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DAYCONVT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.DAYCONVTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYCONVT\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.DAYCONVTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALSRC {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.DEALSRCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALSRC\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.DEALSRCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALNOTE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.DEALNOTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALNOTE\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.DEALNOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRADEDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.TRADEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRADEDATE\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.TRADEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALTEXT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.DEALTEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALTEXT\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.DEALTEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERIFIER {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.VERIFIERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VERIFIER\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.VERIFIERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPREADRATEREC {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.SPREADRATERECColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPREADRATEREC\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.SPREADRATERECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPREADRATEPAY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.SPREADRATEPAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPREADRATEPAY\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.SPREADRATEPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCTMETHOD {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.ACCTMETHODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCTMETHOD\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.ACCTMETHODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COUNTERPARTYREF {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.COUNTERPARTYREFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COUNTERPARTYREF\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.COUNTERPARTYREFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTPAYCYCLEMONTH {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.INTPAYCYCLEMONTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTPAYCYCLEMONTH\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.INTPAYCYCLEMONTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTRECVCYCLEMONTH {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.INTRECVCYCLEMONTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTRECVCYCLEMONTH\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.INTRECVCYCLEMONTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRINTSTATUS {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.PRINTSTATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRINTSTATUS\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.PRINTSTATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NETPAYIND {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.NETPAYINDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NETPAYIND\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.NETPAYINDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FINCENTPAY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.FINCENTPAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINCENTPAY\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.FINCENTPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DAYCONVTPAY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.DAYCONVTPAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYCONVTPAY\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.DAYCONVTPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TERMINATIONFEE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.TERMINATIONFEEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TERMINATIONFEE\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.TERMINATIONFEEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRINCIPALAMORT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.PRINCIPALAMORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRINCIPALAMORT\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.PRINCIPALAMORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAYDISCOUNT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.PAYDISCOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAYDISCOUNT\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.PAYDISCOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAYFORWARD {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.PAYFORWARDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAYFORWARD\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.PAYFORWARDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RECVDISCOUNT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.RECVDISCOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECVDISCOUNT\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.RECVDISCOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RECVFORWARD {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.RECVFORWARDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECVFORWARD\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.RECVFORWARDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTLEDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TICKETSW.SETTLEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SETTLEDATE\' in table \'TB_TICKETSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TICKETSW.SETTLEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRNull() {
                return this.IsNull(this.tableTB_TICKETSW.BRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRNull() {
                this[this.tableTB_TICKETSW.BRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCTNull() {
                return this.IsNull(this.tableTB_TICKETSW.PRODUCTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCTNull() {
                this[this.tableTB_TICKETSW.PRODUCTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROD_DESCRIPTIONNull() {
                return this.IsNull(this.tableTB_TICKETSW.PROD_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROD_DESCRIPTIONNull() {
                this[this.tableTB_TICKETSW.PROD_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODTYPENull() {
                return this.IsNull(this.tableTB_TICKETSW.PRODTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODTYPENull() {
                this[this.tableTB_TICKETSW.PRODTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPORTNull() {
                return this.IsNull(this.tableTB_TICKETSW.PORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPORTNull() {
                this[this.tableTB_TICKETSW.PORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOSTNull() {
                return this.IsNull(this.tableTB_TICKETSW.COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOSTNull() {
                this[this.tableTB_TICKETSW.COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRADNull() {
                return this.IsNull(this.tableTB_TICKETSW.TRADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRADNull() {
                this[this.tableTB_TICKETSW.TRADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALNONull() {
                return this.IsNull(this.tableTB_TICKETSW.DEALNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALNONull() {
                this[this.tableTB_TICKETSW.DEALNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tableTB_TICKETSW.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMERNull() {
                this[this.tableTB_TICKETSW.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNDDEALNONull() {
                return this.IsNull(this.tableTB_TICKETSW.UNDDEALNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNDDEALNONull() {
                this[this.tableTB_TICKETSW.UNDDEALNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNDSECIDNull() {
                return this.IsNull(this.tableTB_TICKETSW.UNDSECIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNDSECIDNull() {
                this[this.tableTB_TICKETSW.UNDSECIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALDATENull() {
                return this.IsNull(this.tableTB_TICKETSW.DEALDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALDATENull() {
                this[this.tableTB_TICKETSW.DEALDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALTIMENull() {
                return this.IsNull(this.tableTB_TICKETSW.DEALTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALTIMENull() {
                this[this.tableTB_TICKETSW.DEALTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETTDATENull() {
                return this.IsNull(this.tableTB_TICKETSW.SETTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETTDATENull() {
                this[this.tableTB_TICKETSW.SETTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMATDATENull() {
                return this.IsNull(this.tableTB_TICKETSW.MATDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMATDATENull() {
                this[this.tableTB_TICKETSW.MATDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOTCCYNull() {
                return this.IsNull(this.tableTB_TICKETSW.NOTCCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOTCCYNull() {
                this[this.tableTB_TICKETSW.NOTCCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOTCCYAMTNull() {
                return this.IsNull(this.tableTB_TICKETSW.NOTCCYAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOTCCYAMTNull() {
                this[this.tableTB_TICKETSW.NOTCCYAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXCHRATENull() {
                return this.IsNull(this.tableTB_TICKETSW.EXCHRATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXCHRATENull() {
                this[this.tableTB_TICKETSW.EXCHRATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCCYPAIRNull() {
                return this.IsNull(this.tableTB_TICKETSW.CCYPAIRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCCYPAIRNull() {
                this[this.tableTB_TICKETSW.CCYPAIRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINITPAYDAYNull() {
                return this.IsNull(this.tableTB_TICKETSW.INITPAYDAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINITPAYDAYNull() {
                this[this.tableTB_TICKETSW.INITPAYDAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINITRECCCYNull() {
                return this.IsNull(this.tableTB_TICKETSW.INITRECCCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINITRECCCYNull() {
                this[this.tableTB_TICKETSW.INITRECCCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINITRECAMTNull() {
                return this.IsNull(this.tableTB_TICKETSW.INITRECAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINITRECAMTNull() {
                this[this.tableTB_TICKETSW.INITRECAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINITPAYCCYNull() {
                return this.IsNull(this.tableTB_TICKETSW.INITPAYCCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINITPAYCCYNull() {
                this[this.tableTB_TICKETSW.INITPAYCCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINITPAYAMTNull() {
                return this.IsNull(this.tableTB_TICKETSW.INITPAYAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINITPAYAMTNull() {
                this[this.tableTB_TICKETSW.INITPAYAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTPAYDAYNull() {
                return this.IsNull(this.tableTB_TICKETSW.INTPAYDAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTPAYDAYNull() {
                this[this.tableTB_TICKETSW.INTPAYDAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTPAYCYCLENull() {
                return this.IsNull(this.tableTB_TICKETSW.INTPAYCYCLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTPAYCYCLENull() {
                this[this.tableTB_TICKETSW.INTPAYCYCLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTRECVDAYNull() {
                return this.IsNull(this.tableTB_TICKETSW.INTRECVDAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTRECVDAYNull() {
                this[this.tableTB_TICKETSW.INTRECVDAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTRECVCYCLENull() {
                return this.IsNull(this.tableTB_TICKETSW.INTRECVCYCLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTRECVCYCLENull() {
                this[this.tableTB_TICKETSW.INTRECVCYCLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIRTYPERECNull() {
                return this.IsNull(this.tableTB_TICKETSW.IRTYPERECColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIRTYPERECNull() {
                this[this.tableTB_TICKETSW.IRTYPERECColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIRCODERECNull() {
                return this.IsNull(this.tableTB_TICKETSW.IRCODERECColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIRCODERECNull() {
                this[this.tableTB_TICKETSW.IRCODERECColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIRRATERECNull() {
                return this.IsNull(this.tableTB_TICKETSW.IRRATERECColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIRRATERECNull() {
                this[this.tableTB_TICKETSW.IRRATERECColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIRCCYRECNull() {
                return this.IsNull(this.tableTB_TICKETSW.IRCCYRECColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIRCCYRECNull() {
                this[this.tableTB_TICKETSW.IRCCYRECColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIBASISRECNull() {
                return this.IsNull(this.tableTB_TICKETSW.IBASISRECColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIBASISRECNull() {
                this[this.tableTB_TICKETSW.IBASISRECColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIRTYPEPAYNull() {
                return this.IsNull(this.tableTB_TICKETSW.IRTYPEPAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIRTYPEPAYNull() {
                this[this.tableTB_TICKETSW.IRTYPEPAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIRCODEPAYNull() {
                return this.IsNull(this.tableTB_TICKETSW.IRCODEPAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIRCODEPAYNull() {
                this[this.tableTB_TICKETSW.IRCODEPAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIRRATEPAYNull() {
                return this.IsNull(this.tableTB_TICKETSW.IRRATEPAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIRRATEPAYNull() {
                this[this.tableTB_TICKETSW.IRRATEPAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIRCCYPAYNull() {
                return this.IsNull(this.tableTB_TICKETSW.IRCCYPAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIRCCYPAYNull() {
                this[this.tableTB_TICKETSW.IRCCYPAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIBASISPAYNull() {
                return this.IsNull(this.tableTB_TICKETSW.IBASISPAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIBASISPAYNull() {
                this[this.tableTB_TICKETSW.IBASISPAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFINDATENull() {
                return this.IsNull(this.tableTB_TICKETSW.FINDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFINDATENull() {
                this[this.tableTB_TICKETSW.FINDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFINRECCCYNull() {
                return this.IsNull(this.tableTB_TICKETSW.FINRECCCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFINRECCCYNull() {
                this[this.tableTB_TICKETSW.FINRECCCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFINRECAMTNull() {
                return this.IsNull(this.tableTB_TICKETSW.FINRECAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFINRECAMTNull() {
                this[this.tableTB_TICKETSW.FINRECAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFINPAYCCYNull() {
                return this.IsNull(this.tableTB_TICKETSW.FINPAYCCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFINPAYCCYNull() {
                this[this.tableTB_TICKETSW.FINPAYCCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFINPAYAMTNull() {
                return this.IsNull(this.tableTB_TICKETSW.FINPAYAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFINPAYAMTNull() {
                this[this.tableTB_TICKETSW.FINPAYAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFINCENTNull() {
                return this.IsNull(this.tableTB_TICKETSW.FINCENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFINCENTNull() {
                this[this.tableTB_TICKETSW.FINCENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDAYCONVTNull() {
                return this.IsNull(this.tableTB_TICKETSW.DAYCONVTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDAYCONVTNull() {
                this[this.tableTB_TICKETSW.DAYCONVTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALSRCNull() {
                return this.IsNull(this.tableTB_TICKETSW.DEALSRCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALSRCNull() {
                this[this.tableTB_TICKETSW.DEALSRCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALNOTENull() {
                return this.IsNull(this.tableTB_TICKETSW.DEALNOTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALNOTENull() {
                this[this.tableTB_TICKETSW.DEALNOTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRADEDATENull() {
                return this.IsNull(this.tableTB_TICKETSW.TRADEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRADEDATENull() {
                this[this.tableTB_TICKETSW.TRADEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALTEXTNull() {
                return this.IsNull(this.tableTB_TICKETSW.DEALTEXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALTEXTNull() {
                this[this.tableTB_TICKETSW.DEALTEXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERIFIERNull() {
                return this.IsNull(this.tableTB_TICKETSW.VERIFIERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERIFIERNull() {
                this[this.tableTB_TICKETSW.VERIFIERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPREADRATERECNull() {
                return this.IsNull(this.tableTB_TICKETSW.SPREADRATERECColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPREADRATERECNull() {
                this[this.tableTB_TICKETSW.SPREADRATERECColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPREADRATEPAYNull() {
                return this.IsNull(this.tableTB_TICKETSW.SPREADRATEPAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPREADRATEPAYNull() {
                this[this.tableTB_TICKETSW.SPREADRATEPAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCTMETHODNull() {
                return this.IsNull(this.tableTB_TICKETSW.ACCTMETHODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCTMETHODNull() {
                this[this.tableTB_TICKETSW.ACCTMETHODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOUNTERPARTYREFNull() {
                return this.IsNull(this.tableTB_TICKETSW.COUNTERPARTYREFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOUNTERPARTYREFNull() {
                this[this.tableTB_TICKETSW.COUNTERPARTYREFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTPAYCYCLEMONTHNull() {
                return this.IsNull(this.tableTB_TICKETSW.INTPAYCYCLEMONTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTPAYCYCLEMONTHNull() {
                this[this.tableTB_TICKETSW.INTPAYCYCLEMONTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTRECVCYCLEMONTHNull() {
                return this.IsNull(this.tableTB_TICKETSW.INTRECVCYCLEMONTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTRECVCYCLEMONTHNull() {
                this[this.tableTB_TICKETSW.INTRECVCYCLEMONTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRINTSTATUSNull() {
                return this.IsNull(this.tableTB_TICKETSW.PRINTSTATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRINTSTATUSNull() {
                this[this.tableTB_TICKETSW.PRINTSTATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNETPAYINDNull() {
                return this.IsNull(this.tableTB_TICKETSW.NETPAYINDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNETPAYINDNull() {
                this[this.tableTB_TICKETSW.NETPAYINDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFINCENTPAYNull() {
                return this.IsNull(this.tableTB_TICKETSW.FINCENTPAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFINCENTPAYNull() {
                this[this.tableTB_TICKETSW.FINCENTPAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDAYCONVTPAYNull() {
                return this.IsNull(this.tableTB_TICKETSW.DAYCONVTPAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDAYCONVTPAYNull() {
                this[this.tableTB_TICKETSW.DAYCONVTPAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTERMINATIONFEENull() {
                return this.IsNull(this.tableTB_TICKETSW.TERMINATIONFEEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTERMINATIONFEENull() {
                this[this.tableTB_TICKETSW.TERMINATIONFEEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRINCIPALAMORTNull() {
                return this.IsNull(this.tableTB_TICKETSW.PRINCIPALAMORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRINCIPALAMORTNull() {
                this[this.tableTB_TICKETSW.PRINCIPALAMORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYDISCOUNTNull() {
                return this.IsNull(this.tableTB_TICKETSW.PAYDISCOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYDISCOUNTNull() {
                this[this.tableTB_TICKETSW.PAYDISCOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYFORWARDNull() {
                return this.IsNull(this.tableTB_TICKETSW.PAYFORWARDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYFORWARDNull() {
                this[this.tableTB_TICKETSW.PAYFORWARDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRECVDISCOUNTNull() {
                return this.IsNull(this.tableTB_TICKETSW.RECVDISCOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRECVDISCOUNTNull() {
                this[this.tableTB_TICKETSW.RECVDISCOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRECVFORWARDNull() {
                return this.IsNull(this.tableTB_TICKETSW.RECVFORWARDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRECVFORWARDNull() {
                this[this.tableTB_TICKETSW.RECVFORWARDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETTLEDATENull() {
                return this.IsNull(this.tableTB_TICKETSW.SETTLEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETTLEDATENull() {
                this[this.tableTB_TICKETSW.SETTLEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_TICKETSWRowChangeEvent : global::System.EventArgs {
            
            private TB_TICKETSWRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETSWRowChangeEvent(TB_TICKETSWRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TICKETSWRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591