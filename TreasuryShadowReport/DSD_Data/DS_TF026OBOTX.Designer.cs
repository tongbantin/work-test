//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3634
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KKB.Treasury.TreasuryReport.DSD_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_TF026OBOTX")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_TF026OBOTX : global::System.Data.DataSet {
        
        private TB_TF026OBOTXDataTable tableTB_TF026OBOTX;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_TF026OBOTX() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_TF026OBOTX(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TB_TF026OBOTX"] != null)) {
                    base.Tables.Add(new TB_TF026OBOTXDataTable(ds.Tables["TB_TF026OBOTX"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_TF026OBOTXDataTable TB_TF026OBOTX {
            get {
                return this.tableTB_TF026OBOTX;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_TF026OBOTX cln = ((DS_TF026OBOTX)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TB_TF026OBOTX"] != null)) {
                    base.Tables.Add(new TB_TF026OBOTXDataTable(ds.Tables["TB_TF026OBOTX"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTB_TF026OBOTX = ((TB_TF026OBOTXDataTable)(base.Tables["TB_TF026OBOTX"]));
            if ((initTable == true)) {
                if ((this.tableTB_TF026OBOTX != null)) {
                    this.tableTB_TF026OBOTX.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_TF026OBOTX";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_TF026OBOTX.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTB_TF026OBOTX = new TB_TF026OBOTXDataTable();
            base.Tables.Add(this.tableTB_TF026OBOTX);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_TF026OBOTX() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_TF026OBOTX ds = new DS_TF026OBOTX();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TB_TF026OBOTXRowChangeEventHandler(object sender, TB_TF026OBOTXRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_TF026OBOTXDataTable : global::System.Data.TypedTableBase<TB_TF026OBOTXRow> {
            
            private global::System.Data.DataColumn columnREFNO;
            
            private global::System.Data.DataColumn columnWITHHOLDINGTAX1;
            
            private global::System.Data.DataColumn columnTAXID1;
            
            private global::System.Data.DataColumn columnADDRESS1;
            
            private global::System.Data.DataColumn columnWITHHOLDINGTAX2;
            
            private global::System.Data.DataColumn columnTAXID2;
            
            private global::System.Data.DataColumn columnADDRESS2;
            
            private global::System.Data.DataColumn columnTAXTYPE;
            
            private global::System.Data.DataColumn columnPAYMENTTYPE;
            
            private global::System.Data.DataColumn columnPAYMENTDATE;
            
            private global::System.Data.DataColumn columnPAIDAMOUNT;
            
            private global::System.Data.DataColumn columnTAXAMOUNT;
            
            private global::System.Data.DataColumn columnDOCDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TF026OBOTXDataTable() {
                this.TableName = "TB_TF026OBOTX";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TF026OBOTXDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_TF026OBOTXDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REFNOColumn {
                get {
                    return this.columnREFNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WITHHOLDINGTAX1Column {
                get {
                    return this.columnWITHHOLDINGTAX1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAXID1Column {
                get {
                    return this.columnTAXID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDRESS1Column {
                get {
                    return this.columnADDRESS1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WITHHOLDINGTAX2Column {
                get {
                    return this.columnWITHHOLDINGTAX2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAXID2Column {
                get {
                    return this.columnTAXID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDRESS2Column {
                get {
                    return this.columnADDRESS2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAXTYPEColumn {
                get {
                    return this.columnTAXTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAYMENTTYPEColumn {
                get {
                    return this.columnPAYMENTTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAYMENTDATEColumn {
                get {
                    return this.columnPAYMENTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAIDAMOUNTColumn {
                get {
                    return this.columnPAIDAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAXAMOUNTColumn {
                get {
                    return this.columnTAXAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOCDATEColumn {
                get {
                    return this.columnDOCDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TF026OBOTXRow this[int index] {
                get {
                    return ((TB_TF026OBOTXRow)(this.Rows[index]));
                }
            }
            
            public event TB_TF026OBOTXRowChangeEventHandler TB_TF026OBOTXRowChanging;
            
            public event TB_TF026OBOTXRowChangeEventHandler TB_TF026OBOTXRowChanged;
            
            public event TB_TF026OBOTXRowChangeEventHandler TB_TF026OBOTXRowDeleting;
            
            public event TB_TF026OBOTXRowChangeEventHandler TB_TF026OBOTXRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_TF026OBOTXRow(TB_TF026OBOTXRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TF026OBOTXRow AddTB_TF026OBOTXRow(string REFNO, string WITHHOLDINGTAX1, string TAXID1, string ADDRESS1, string WITHHOLDINGTAX2, string TAXID2, string ADDRESS2, string TAXTYPE, string PAYMENTTYPE, string PAYMENTDATE, string PAIDAMOUNT, string TAXAMOUNT, string DOCDATE) {
                TB_TF026OBOTXRow rowTB_TF026OBOTXRow = ((TB_TF026OBOTXRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        REFNO,
                        WITHHOLDINGTAX1,
                        TAXID1,
                        ADDRESS1,
                        WITHHOLDINGTAX2,
                        TAXID2,
                        ADDRESS2,
                        TAXTYPE,
                        PAYMENTTYPE,
                        PAYMENTDATE,
                        PAIDAMOUNT,
                        TAXAMOUNT,
                        DOCDATE};
                rowTB_TF026OBOTXRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_TF026OBOTXRow);
                return rowTB_TF026OBOTXRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_TF026OBOTXDataTable cln = ((TB_TF026OBOTXDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_TF026OBOTXDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnREFNO = base.Columns["REFNO"];
                this.columnWITHHOLDINGTAX1 = base.Columns["WITHHOLDINGTAX1"];
                this.columnTAXID1 = base.Columns["TAXID1"];
                this.columnADDRESS1 = base.Columns["ADDRESS1"];
                this.columnWITHHOLDINGTAX2 = base.Columns["WITHHOLDINGTAX2"];
                this.columnTAXID2 = base.Columns["TAXID2"];
                this.columnADDRESS2 = base.Columns["ADDRESS2"];
                this.columnTAXTYPE = base.Columns["TAXTYPE"];
                this.columnPAYMENTTYPE = base.Columns["PAYMENTTYPE"];
                this.columnPAYMENTDATE = base.Columns["PAYMENTDATE"];
                this.columnPAIDAMOUNT = base.Columns["PAIDAMOUNT"];
                this.columnTAXAMOUNT = base.Columns["TAXAMOUNT"];
                this.columnDOCDATE = base.Columns["DOCDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnREFNO = new global::System.Data.DataColumn("REFNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFNO);
                this.columnWITHHOLDINGTAX1 = new global::System.Data.DataColumn("WITHHOLDINGTAX1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWITHHOLDINGTAX1);
                this.columnTAXID1 = new global::System.Data.DataColumn("TAXID1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXID1);
                this.columnADDRESS1 = new global::System.Data.DataColumn("ADDRESS1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS1);
                this.columnWITHHOLDINGTAX2 = new global::System.Data.DataColumn("WITHHOLDINGTAX2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWITHHOLDINGTAX2);
                this.columnTAXID2 = new global::System.Data.DataColumn("TAXID2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXID2);
                this.columnADDRESS2 = new global::System.Data.DataColumn("ADDRESS2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS2);
                this.columnTAXTYPE = new global::System.Data.DataColumn("TAXTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXTYPE);
                this.columnPAYMENTTYPE = new global::System.Data.DataColumn("PAYMENTTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYMENTTYPE);
                this.columnPAYMENTDATE = new global::System.Data.DataColumn("PAYMENTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYMENTDATE);
                this.columnPAIDAMOUNT = new global::System.Data.DataColumn("PAIDAMOUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAIDAMOUNT);
                this.columnTAXAMOUNT = new global::System.Data.DataColumn("TAXAMOUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXAMOUNT);
                this.columnDOCDATE = new global::System.Data.DataColumn("DOCDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCDATE);
                this.columnTAXAMOUNT.DefaultValue = ((string)("0"));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TF026OBOTXRow NewTB_TF026OBOTXRow() {
                return ((TB_TF026OBOTXRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_TF026OBOTXRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_TF026OBOTXRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_TF026OBOTXRowChanged != null)) {
                    this.TB_TF026OBOTXRowChanged(this, new TB_TF026OBOTXRowChangeEvent(((TB_TF026OBOTXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_TF026OBOTXRowChanging != null)) {
                    this.TB_TF026OBOTXRowChanging(this, new TB_TF026OBOTXRowChangeEvent(((TB_TF026OBOTXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_TF026OBOTXRowDeleted != null)) {
                    this.TB_TF026OBOTXRowDeleted(this, new TB_TF026OBOTXRowChangeEvent(((TB_TF026OBOTXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_TF026OBOTXRowDeleting != null)) {
                    this.TB_TF026OBOTXRowDeleting(this, new TB_TF026OBOTXRowChangeEvent(((TB_TF026OBOTXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_TF026OBOTXRow(TB_TF026OBOTXRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TF026OBOTX ds = new DS_TF026OBOTX();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_TF026OBOTXDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_TF026OBOTXRow : global::System.Data.DataRow {
            
            private TB_TF026OBOTXDataTable tableTB_TF026OBOTX;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TF026OBOTXRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_TF026OBOTX = ((TB_TF026OBOTXDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REFNO {
                get {
                    try {
                        return ((string)(this[this.tableTB_TF026OBOTX.REFNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REFNO\' in table \'TB_TF026OBOTX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TF026OBOTX.REFNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WITHHOLDINGTAX1 {
                get {
                    try {
                        return ((string)(this[this.tableTB_TF026OBOTX.WITHHOLDINGTAX1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WITHHOLDINGTAX1\' in table \'TB_TF026OBOTX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TF026OBOTX.WITHHOLDINGTAX1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TAXID1 {
                get {
                    try {
                        return ((string)(this[this.tableTB_TF026OBOTX.TAXID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAXID1\' in table \'TB_TF026OBOTX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TF026OBOTX.TAXID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS1 {
                get {
                    try {
                        return ((string)(this[this.tableTB_TF026OBOTX.ADDRESS1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADDRESS1\' in table \'TB_TF026OBOTX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TF026OBOTX.ADDRESS1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WITHHOLDINGTAX2 {
                get {
                    try {
                        return ((string)(this[this.tableTB_TF026OBOTX.WITHHOLDINGTAX2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WITHHOLDINGTAX2\' in table \'TB_TF026OBOTX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TF026OBOTX.WITHHOLDINGTAX2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TAXID2 {
                get {
                    try {
                        return ((string)(this[this.tableTB_TF026OBOTX.TAXID2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAXID2\' in table \'TB_TF026OBOTX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TF026OBOTX.TAXID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS2 {
                get {
                    try {
                        return ((string)(this[this.tableTB_TF026OBOTX.ADDRESS2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADDRESS2\' in table \'TB_TF026OBOTX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TF026OBOTX.ADDRESS2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TAXTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TF026OBOTX.TAXTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAXTYPE\' in table \'TB_TF026OBOTX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TF026OBOTX.TAXTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAYMENTTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TF026OBOTX.PAYMENTTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAYMENTTYPE\' in table \'TB_TF026OBOTX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TF026OBOTX.PAYMENTTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAYMENTDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TF026OBOTX.PAYMENTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAYMENTDATE\' in table \'TB_TF026OBOTX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TF026OBOTX.PAYMENTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAIDAMOUNT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TF026OBOTX.PAIDAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAIDAMOUNT\' in table \'TB_TF026OBOTX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TF026OBOTX.PAIDAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TAXAMOUNT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TF026OBOTX.TAXAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAXAMOUNT\' in table \'TB_TF026OBOTX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TF026OBOTX.TAXAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOCDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TF026OBOTX.DOCDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOCDATE\' in table \'TB_TF026OBOTX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TF026OBOTX.DOCDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREFNONull() {
                return this.IsNull(this.tableTB_TF026OBOTX.REFNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREFNONull() {
                this[this.tableTB_TF026OBOTX.REFNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWITHHOLDINGTAX1Null() {
                return this.IsNull(this.tableTB_TF026OBOTX.WITHHOLDINGTAX1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWITHHOLDINGTAX1Null() {
                this[this.tableTB_TF026OBOTX.WITHHOLDINGTAX1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAXID1Null() {
                return this.IsNull(this.tableTB_TF026OBOTX.TAXID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAXID1Null() {
                this[this.tableTB_TF026OBOTX.TAXID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDRESS1Null() {
                return this.IsNull(this.tableTB_TF026OBOTX.ADDRESS1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDRESS1Null() {
                this[this.tableTB_TF026OBOTX.ADDRESS1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWITHHOLDINGTAX2Null() {
                return this.IsNull(this.tableTB_TF026OBOTX.WITHHOLDINGTAX2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWITHHOLDINGTAX2Null() {
                this[this.tableTB_TF026OBOTX.WITHHOLDINGTAX2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAXID2Null() {
                return this.IsNull(this.tableTB_TF026OBOTX.TAXID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAXID2Null() {
                this[this.tableTB_TF026OBOTX.TAXID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDRESS2Null() {
                return this.IsNull(this.tableTB_TF026OBOTX.ADDRESS2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDRESS2Null() {
                this[this.tableTB_TF026OBOTX.ADDRESS2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAXTYPENull() {
                return this.IsNull(this.tableTB_TF026OBOTX.TAXTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAXTYPENull() {
                this[this.tableTB_TF026OBOTX.TAXTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYMENTTYPENull() {
                return this.IsNull(this.tableTB_TF026OBOTX.PAYMENTTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYMENTTYPENull() {
                this[this.tableTB_TF026OBOTX.PAYMENTTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYMENTDATENull() {
                return this.IsNull(this.tableTB_TF026OBOTX.PAYMENTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYMENTDATENull() {
                this[this.tableTB_TF026OBOTX.PAYMENTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAIDAMOUNTNull() {
                return this.IsNull(this.tableTB_TF026OBOTX.PAIDAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAIDAMOUNTNull() {
                this[this.tableTB_TF026OBOTX.PAIDAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAXAMOUNTNull() {
                return this.IsNull(this.tableTB_TF026OBOTX.TAXAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAXAMOUNTNull() {
                this[this.tableTB_TF026OBOTX.TAXAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOCDATENull() {
                return this.IsNull(this.tableTB_TF026OBOTX.DOCDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOCDATENull() {
                this[this.tableTB_TF026OBOTX.DOCDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_TF026OBOTXRowChangeEvent : global::System.EventArgs {
            
            private TB_TF026OBOTXRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TF026OBOTXRowChangeEvent(TB_TF026OBOTXRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TF026OBOTXRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591