//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3655
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KKB.Treasury.TreasuryReport.DSD_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_TR051TAXSUMMARY")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_TR051TAXSUMMARY : global::System.Data.DataSet {
        
        private TB_TR051TAXSUMMARYDataTable tableTB_TR051TAXSUMMARY;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_TR051TAXSUMMARY() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_TR051TAXSUMMARY(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TB_TR051TAXSUMMARY"] != null)) {
                    base.Tables.Add(new TB_TR051TAXSUMMARYDataTable(ds.Tables["TB_TR051TAXSUMMARY"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_TR051TAXSUMMARYDataTable TB_TR051TAXSUMMARY {
            get {
                return this.tableTB_TR051TAXSUMMARY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_TR051TAXSUMMARY cln = ((DS_TR051TAXSUMMARY)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TB_TR051TAXSUMMARY"] != null)) {
                    base.Tables.Add(new TB_TR051TAXSUMMARYDataTable(ds.Tables["TB_TR051TAXSUMMARY"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTB_TR051TAXSUMMARY = ((TB_TR051TAXSUMMARYDataTable)(base.Tables["TB_TR051TAXSUMMARY"]));
            if ((initTable == true)) {
                if ((this.tableTB_TR051TAXSUMMARY != null)) {
                    this.tableTB_TR051TAXSUMMARY.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_TR051TAXSUMMARY";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_TR051TAXSUMMARY.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTB_TR051TAXSUMMARY = new TB_TR051TAXSUMMARYDataTable();
            base.Tables.Add(this.tableTB_TR051TAXSUMMARY);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_TR051TAXSUMMARY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_TR051TAXSUMMARY ds = new DS_TR051TAXSUMMARY();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TB_TR051TAXSUMMARYRowChangeEventHandler(object sender, TB_TR051TAXSUMMARYRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_TR051TAXSUMMARYDataTable : global::System.Data.TypedTableBase<TB_TR051TAXSUMMARYRow> {
            
            private global::System.Data.DataColumn columnSTARTDATE;
            
            private global::System.Data.DataColumn columnENDDATE;
            
            private global::System.Data.DataColumn columnPREFIX;
            
            private global::System.Data.DataColumn columnNAMETH;
            
            private global::System.Data.DataColumn columnPOSTNAME;
            
            private global::System.Data.DataColumn columnTAXID;
            
            private global::System.Data.DataColumn columnADDRESS;
            
            private global::System.Data.DataColumn columnCUSTOMERTYPE;
            
            private global::System.Data.DataColumn columnPAYMENTDATE;
            
            private global::System.Data.DataColumn columnSETTAMT;
            
            private global::System.Data.DataColumn columnVAT;
            
            private global::System.Data.DataColumn columnTAX;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR051TAXSUMMARYDataTable() {
                this.TableName = "TB_TR051TAXSUMMARY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TR051TAXSUMMARYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_TR051TAXSUMMARYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STARTDATEColumn {
                get {
                    return this.columnSTARTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENDDATEColumn {
                get {
                    return this.columnENDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PREFIXColumn {
                get {
                    return this.columnPREFIX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMETHColumn {
                get {
                    return this.columnNAMETH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POSTNAMEColumn {
                get {
                    return this.columnPOSTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAXIDColumn {
                get {
                    return this.columnTAXID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDRESSColumn {
                get {
                    return this.columnADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMERTYPEColumn {
                get {
                    return this.columnCUSTOMERTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAYMENTDATEColumn {
                get {
                    return this.columnPAYMENTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SETTAMTColumn {
                get {
                    return this.columnSETTAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.columnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAXColumn {
                get {
                    return this.columnTAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR051TAXSUMMARYRow this[int index] {
                get {
                    return ((TB_TR051TAXSUMMARYRow)(this.Rows[index]));
                }
            }
            
            public event TB_TR051TAXSUMMARYRowChangeEventHandler TB_TR051TAXSUMMARYRowChanging;
            
            public event TB_TR051TAXSUMMARYRowChangeEventHandler TB_TR051TAXSUMMARYRowChanged;
            
            public event TB_TR051TAXSUMMARYRowChangeEventHandler TB_TR051TAXSUMMARYRowDeleting;
            
            public event TB_TR051TAXSUMMARYRowChangeEventHandler TB_TR051TAXSUMMARYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_TR051TAXSUMMARYRow(TB_TR051TAXSUMMARYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR051TAXSUMMARYRow AddTB_TR051TAXSUMMARYRow(string STARTDATE, string ENDDATE, string PREFIX, string NAMETH, string POSTNAME, string TAXID, string ADDRESS, string CUSTOMERTYPE, string PAYMENTDATE, decimal SETTAMT, decimal VAT, decimal TAX) {
                TB_TR051TAXSUMMARYRow rowTB_TR051TAXSUMMARYRow = ((TB_TR051TAXSUMMARYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        STARTDATE,
                        ENDDATE,
                        PREFIX,
                        NAMETH,
                        POSTNAME,
                        TAXID,
                        ADDRESS,
                        CUSTOMERTYPE,
                        PAYMENTDATE,
                        SETTAMT,
                        VAT,
                        TAX};
                rowTB_TR051TAXSUMMARYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_TR051TAXSUMMARYRow);
                return rowTB_TR051TAXSUMMARYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_TR051TAXSUMMARYDataTable cln = ((TB_TR051TAXSUMMARYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_TR051TAXSUMMARYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSTARTDATE = base.Columns["STARTDATE"];
                this.columnENDDATE = base.Columns["ENDDATE"];
                this.columnPREFIX = base.Columns["PREFIX"];
                this.columnNAMETH = base.Columns["NAMETH"];
                this.columnPOSTNAME = base.Columns["POSTNAME"];
                this.columnTAXID = base.Columns["TAXID"];
                this.columnADDRESS = base.Columns["ADDRESS"];
                this.columnCUSTOMERTYPE = base.Columns["CUSTOMERTYPE"];
                this.columnPAYMENTDATE = base.Columns["PAYMENTDATE"];
                this.columnSETTAMT = base.Columns["SETTAMT"];
                this.columnVAT = base.Columns["VAT"];
                this.columnTAX = base.Columns["TAX"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSTARTDATE = new global::System.Data.DataColumn("STARTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTARTDATE);
                this.columnENDDATE = new global::System.Data.DataColumn("ENDDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENDDATE);
                this.columnPREFIX = new global::System.Data.DataColumn("PREFIX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREFIX);
                this.columnNAMETH = new global::System.Data.DataColumn("NAMETH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAMETH);
                this.columnPOSTNAME = new global::System.Data.DataColumn("POSTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSTNAME);
                this.columnTAXID = new global::System.Data.DataColumn("TAXID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXID);
                this.columnADDRESS = new global::System.Data.DataColumn("ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS);
                this.columnCUSTOMERTYPE = new global::System.Data.DataColumn("CUSTOMERTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMERTYPE);
                this.columnPAYMENTDATE = new global::System.Data.DataColumn("PAYMENTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYMENTDATE);
                this.columnSETTAMT = new global::System.Data.DataColumn("SETTAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTAMT);
                this.columnVAT = new global::System.Data.DataColumn("VAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT);
                this.columnTAX = new global::System.Data.DataColumn("TAX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAX);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR051TAXSUMMARYRow NewTB_TR051TAXSUMMARYRow() {
                return ((TB_TR051TAXSUMMARYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_TR051TAXSUMMARYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_TR051TAXSUMMARYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_TR051TAXSUMMARYRowChanged != null)) {
                    this.TB_TR051TAXSUMMARYRowChanged(this, new TB_TR051TAXSUMMARYRowChangeEvent(((TB_TR051TAXSUMMARYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_TR051TAXSUMMARYRowChanging != null)) {
                    this.TB_TR051TAXSUMMARYRowChanging(this, new TB_TR051TAXSUMMARYRowChangeEvent(((TB_TR051TAXSUMMARYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_TR051TAXSUMMARYRowDeleted != null)) {
                    this.TB_TR051TAXSUMMARYRowDeleted(this, new TB_TR051TAXSUMMARYRowChangeEvent(((TB_TR051TAXSUMMARYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_TR051TAXSUMMARYRowDeleting != null)) {
                    this.TB_TR051TAXSUMMARYRowDeleting(this, new TB_TR051TAXSUMMARYRowChangeEvent(((TB_TR051TAXSUMMARYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_TR051TAXSUMMARYRow(TB_TR051TAXSUMMARYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TR051TAXSUMMARY ds = new DS_TR051TAXSUMMARY();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_TR051TAXSUMMARYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_TR051TAXSUMMARYRow : global::System.Data.DataRow {
            
            private TB_TR051TAXSUMMARYDataTable tableTB_TR051TAXSUMMARY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TR051TAXSUMMARYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_TR051TAXSUMMARY = ((TB_TR051TAXSUMMARYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STARTDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR051TAXSUMMARY.STARTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STARTDATE\' in table \'TB_TR051TAXSUMMARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR051TAXSUMMARY.STARTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENDDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR051TAXSUMMARY.ENDDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENDDATE\' in table \'TB_TR051TAXSUMMARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR051TAXSUMMARY.ENDDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PREFIX {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR051TAXSUMMARY.PREFIXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PREFIX\' in table \'TB_TR051TAXSUMMARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR051TAXSUMMARY.PREFIXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAMETH {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR051TAXSUMMARY.NAMETHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAMETH\' in table \'TB_TR051TAXSUMMARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR051TAXSUMMARY.NAMETHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string POSTNAME {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR051TAXSUMMARY.POSTNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POSTNAME\' in table \'TB_TR051TAXSUMMARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR051TAXSUMMARY.POSTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TAXID {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR051TAXSUMMARY.TAXIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAXID\' in table \'TB_TR051TAXSUMMARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR051TAXSUMMARY.TAXIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR051TAXSUMMARY.ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADDRESS\' in table \'TB_TR051TAXSUMMARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR051TAXSUMMARY.ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMERTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR051TAXSUMMARY.CUSTOMERTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMERTYPE\' in table \'TB_TR051TAXSUMMARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR051TAXSUMMARY.CUSTOMERTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAYMENTDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR051TAXSUMMARY.PAYMENTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAYMENTDATE\' in table \'TB_TR051TAXSUMMARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR051TAXSUMMARY.PAYMENTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SETTAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR051TAXSUMMARY.SETTAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SETTAMT\' in table \'TB_TR051TAXSUMMARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR051TAXSUMMARY.SETTAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VAT {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR051TAXSUMMARY.VATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT\' in table \'TB_TR051TAXSUMMARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR051TAXSUMMARY.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TAX {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR051TAXSUMMARY.TAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAX\' in table \'TB_TR051TAXSUMMARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR051TAXSUMMARY.TAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTARTDATENull() {
                return this.IsNull(this.tableTB_TR051TAXSUMMARY.STARTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTARTDATENull() {
                this[this.tableTB_TR051TAXSUMMARY.STARTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENDDATENull() {
                return this.IsNull(this.tableTB_TR051TAXSUMMARY.ENDDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENDDATENull() {
                this[this.tableTB_TR051TAXSUMMARY.ENDDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPREFIXNull() {
                return this.IsNull(this.tableTB_TR051TAXSUMMARY.PREFIXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPREFIXNull() {
                this[this.tableTB_TR051TAXSUMMARY.PREFIXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMETHNull() {
                return this.IsNull(this.tableTB_TR051TAXSUMMARY.NAMETHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMETHNull() {
                this[this.tableTB_TR051TAXSUMMARY.NAMETHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOSTNAMENull() {
                return this.IsNull(this.tableTB_TR051TAXSUMMARY.POSTNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOSTNAMENull() {
                this[this.tableTB_TR051TAXSUMMARY.POSTNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAXIDNull() {
                return this.IsNull(this.tableTB_TR051TAXSUMMARY.TAXIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAXIDNull() {
                this[this.tableTB_TR051TAXSUMMARY.TAXIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDRESSNull() {
                return this.IsNull(this.tableTB_TR051TAXSUMMARY.ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDRESSNull() {
                this[this.tableTB_TR051TAXSUMMARY.ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMERTYPENull() {
                return this.IsNull(this.tableTB_TR051TAXSUMMARY.CUSTOMERTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMERTYPENull() {
                this[this.tableTB_TR051TAXSUMMARY.CUSTOMERTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYMENTDATENull() {
                return this.IsNull(this.tableTB_TR051TAXSUMMARY.PAYMENTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYMENTDATENull() {
                this[this.tableTB_TR051TAXSUMMARY.PAYMENTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETTAMTNull() {
                return this.IsNull(this.tableTB_TR051TAXSUMMARY.SETTAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETTAMTNull() {
                this[this.tableTB_TR051TAXSUMMARY.SETTAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATNull() {
                return this.IsNull(this.tableTB_TR051TAXSUMMARY.VATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATNull() {
                this[this.tableTB_TR051TAXSUMMARY.VATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAXNull() {
                return this.IsNull(this.tableTB_TR051TAXSUMMARY.TAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAXNull() {
                this[this.tableTB_TR051TAXSUMMARY.TAXColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_TR051TAXSUMMARYRowChangeEvent : global::System.EventArgs {
            
            private TB_TR051TAXSUMMARYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR051TAXSUMMARYRowChangeEvent(TB_TR051TAXSUMMARYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR051TAXSUMMARYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591