//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KKB.Treasury.TreasuryReport.DSD_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_R01IRMVTFM")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_R01IRMVTFM : global::System.Data.DataSet {
        
        private TB_R01IRMVTFMDataTable tableTB_R01IRMVTFM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_R01IRMVTFM() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_R01IRMVTFM(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TB_R01IRMVTFM"] != null)) {
                    base.Tables.Add(new TB_R01IRMVTFMDataTable(ds.Tables["TB_R01IRMVTFM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_R01IRMVTFMDataTable TB_R01IRMVTFM {
            get {
                return this.tableTB_R01IRMVTFM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_R01IRMVTFM cln = ((DS_R01IRMVTFM)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TB_R01IRMVTFM"] != null)) {
                    base.Tables.Add(new TB_R01IRMVTFMDataTable(ds.Tables["TB_R01IRMVTFM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTB_R01IRMVTFM = ((TB_R01IRMVTFMDataTable)(base.Tables["TB_R01IRMVTFM"]));
            if ((initTable == true)) {
                if ((this.tableTB_R01IRMVTFM != null)) {
                    this.tableTB_R01IRMVTFM.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_R01IRMVTFM";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_R01IRMVTFM.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTB_R01IRMVTFM = new TB_R01IRMVTFMDataTable();
            base.Tables.Add(this.tableTB_R01IRMVTFM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_R01IRMVTFM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_R01IRMVTFM ds = new DS_R01IRMVTFM();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TB_R01IRMVTFMRowChangeEventHandler(object sender, TB_R01IRMVTFMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_R01IRMVTFMDataTable : global::System.Data.TypedTableBase<TB_R01IRMVTFMRow> {
            
            private global::System.Data.DataColumn columnBU;
            
            private global::System.Data.DataColumn columnPORTFOLIO;
            
            private global::System.Data.DataColumn columnPRODTYPE;
            
            private global::System.Data.DataColumn columnDEALNO;
            
            private global::System.Data.DataColumn columnCPTY;
            
            private global::System.Data.DataColumn columnDEALDATE;
            
            private global::System.Data.DataColumn columnSTARTDATE;
            
            private global::System.Data.DataColumn columnMATDATE;
            
            private global::System.Data.DataColumn columnNOTIONAL1;
            
            private global::System.Data.DataColumn columnLEG1;
            
            private global::System.Data.DataColumn columnPAYRECIND1;
            
            private global::System.Data.DataColumn columnFIXFLOATIND1;
            
            private global::System.Data.DataColumn columnINTRATE1;
            
            private global::System.Data.DataColumn columnINTPAYCYCLE1;
            
            private global::System.Data.DataColumn columnLEG2;
            
            private global::System.Data.DataColumn columnPAYRECIND2;
            
            private global::System.Data.DataColumn columnFIXFLOATIND2;
            
            private global::System.Data.DataColumn columnRATECODE2;
            
            private global::System.Data.DataColumn columnINTPAYCYCLE2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01IRMVTFMDataTable() {
                this.TableName = "TB_R01IRMVTFM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_R01IRMVTFMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_R01IRMVTFMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BUColumn {
                get {
                    return this.columnBU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PORTFOLIOColumn {
                get {
                    return this.columnPORTFOLIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODTYPEColumn {
                get {
                    return this.columnPRODTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALNOColumn {
                get {
                    return this.columnDEALNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPTYColumn {
                get {
                    return this.columnCPTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALDATEColumn {
                get {
                    return this.columnDEALDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STARTDATEColumn {
                get {
                    return this.columnSTARTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MATDATEColumn {
                get {
                    return this.columnMATDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOTIONAL1Column {
                get {
                    return this.columnNOTIONAL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LEG1Column {
                get {
                    return this.columnLEG1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAYRECIND1Column {
                get {
                    return this.columnPAYRECIND1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIXFLOATIND1Column {
                get {
                    return this.columnFIXFLOATIND1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTRATE1Column {
                get {
                    return this.columnINTRATE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTPAYCYCLE1Column {
                get {
                    return this.columnINTPAYCYCLE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LEG2Column {
                get {
                    return this.columnLEG2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAYRECIND2Column {
                get {
                    return this.columnPAYRECIND2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIXFLOATIND2Column {
                get {
                    return this.columnFIXFLOATIND2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RATECODE2Column {
                get {
                    return this.columnRATECODE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTPAYCYCLE2Column {
                get {
                    return this.columnINTPAYCYCLE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01IRMVTFMRow this[int index] {
                get {
                    return ((TB_R01IRMVTFMRow)(this.Rows[index]));
                }
            }
            
            public event TB_R01IRMVTFMRowChangeEventHandler TB_R01IRMVTFMRowChanging;
            
            public event TB_R01IRMVTFMRowChangeEventHandler TB_R01IRMVTFMRowChanged;
            
            public event TB_R01IRMVTFMRowChangeEventHandler TB_R01IRMVTFMRowDeleting;
            
            public event TB_R01IRMVTFMRowChangeEventHandler TB_R01IRMVTFMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_R01IRMVTFMRow(TB_R01IRMVTFMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01IRMVTFMRow AddTB_R01IRMVTFMRow(
                        string BU, 
                        string PORTFOLIO, 
                        string PRODTYPE, 
                        string DEALNO, 
                        string CPTY, 
                        string DEALDATE, 
                        string STARTDATE, 
                        string MATDATE, 
                        string NOTIONAL1, 
                        string LEG1, 
                        string PAYRECIND1, 
                        string FIXFLOATIND1, 
                        string INTRATE1, 
                        string INTPAYCYCLE1, 
                        string LEG2, 
                        string PAYRECIND2, 
                        string FIXFLOATIND2, 
                        string RATECODE2, 
                        string INTPAYCYCLE2) {
                TB_R01IRMVTFMRow rowTB_R01IRMVTFMRow = ((TB_R01IRMVTFMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BU,
                        PORTFOLIO,
                        PRODTYPE,
                        DEALNO,
                        CPTY,
                        DEALDATE,
                        STARTDATE,
                        MATDATE,
                        NOTIONAL1,
                        LEG1,
                        PAYRECIND1,
                        FIXFLOATIND1,
                        INTRATE1,
                        INTPAYCYCLE1,
                        LEG2,
                        PAYRECIND2,
                        FIXFLOATIND2,
                        RATECODE2,
                        INTPAYCYCLE2};
                rowTB_R01IRMVTFMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_R01IRMVTFMRow);
                return rowTB_R01IRMVTFMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_R01IRMVTFMDataTable cln = ((TB_R01IRMVTFMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_R01IRMVTFMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBU = base.Columns["BU"];
                this.columnPORTFOLIO = base.Columns["PORTFOLIO"];
                this.columnPRODTYPE = base.Columns["PRODTYPE"];
                this.columnDEALNO = base.Columns["DEALNO"];
                this.columnCPTY = base.Columns["CPTY"];
                this.columnDEALDATE = base.Columns["DEALDATE"];
                this.columnSTARTDATE = base.Columns["STARTDATE"];
                this.columnMATDATE = base.Columns["MATDATE"];
                this.columnNOTIONAL1 = base.Columns["NOTIONAL1"];
                this.columnLEG1 = base.Columns["LEG1"];
                this.columnPAYRECIND1 = base.Columns["PAYRECIND1"];
                this.columnFIXFLOATIND1 = base.Columns["FIXFLOATIND1"];
                this.columnINTRATE1 = base.Columns["INTRATE1"];
                this.columnINTPAYCYCLE1 = base.Columns["INTPAYCYCLE1"];
                this.columnLEG2 = base.Columns["LEG2"];
                this.columnPAYRECIND2 = base.Columns["PAYRECIND2"];
                this.columnFIXFLOATIND2 = base.Columns["FIXFLOATIND2"];
                this.columnRATECODE2 = base.Columns["RATECODE2"];
                this.columnINTPAYCYCLE2 = base.Columns["INTPAYCYCLE2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBU = new global::System.Data.DataColumn("BU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBU);
                this.columnPORTFOLIO = new global::System.Data.DataColumn("PORTFOLIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORTFOLIO);
                this.columnPRODTYPE = new global::System.Data.DataColumn("PRODTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODTYPE);
                this.columnDEALNO = new global::System.Data.DataColumn("DEALNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALNO);
                this.columnCPTY = new global::System.Data.DataColumn("CPTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPTY);
                this.columnDEALDATE = new global::System.Data.DataColumn("DEALDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALDATE);
                this.columnSTARTDATE = new global::System.Data.DataColumn("STARTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTARTDATE);
                this.columnMATDATE = new global::System.Data.DataColumn("MATDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMATDATE);
                this.columnNOTIONAL1 = new global::System.Data.DataColumn("NOTIONAL1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTIONAL1);
                this.columnLEG1 = new global::System.Data.DataColumn("LEG1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEG1);
                this.columnPAYRECIND1 = new global::System.Data.DataColumn("PAYRECIND1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYRECIND1);
                this.columnFIXFLOATIND1 = new global::System.Data.DataColumn("FIXFLOATIND1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIXFLOATIND1);
                this.columnINTRATE1 = new global::System.Data.DataColumn("INTRATE1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTRATE1);
                this.columnINTPAYCYCLE1 = new global::System.Data.DataColumn("INTPAYCYCLE1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTPAYCYCLE1);
                this.columnLEG2 = new global::System.Data.DataColumn("LEG2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEG2);
                this.columnPAYRECIND2 = new global::System.Data.DataColumn("PAYRECIND2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYRECIND2);
                this.columnFIXFLOATIND2 = new global::System.Data.DataColumn("FIXFLOATIND2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIXFLOATIND2);
                this.columnRATECODE2 = new global::System.Data.DataColumn("RATECODE2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATECODE2);
                this.columnINTPAYCYCLE2 = new global::System.Data.DataColumn("INTPAYCYCLE2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTPAYCYCLE2);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01IRMVTFMRow NewTB_R01IRMVTFMRow() {
                return ((TB_R01IRMVTFMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_R01IRMVTFMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_R01IRMVTFMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_R01IRMVTFMRowChanged != null)) {
                    this.TB_R01IRMVTFMRowChanged(this, new TB_R01IRMVTFMRowChangeEvent(((TB_R01IRMVTFMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_R01IRMVTFMRowChanging != null)) {
                    this.TB_R01IRMVTFMRowChanging(this, new TB_R01IRMVTFMRowChangeEvent(((TB_R01IRMVTFMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_R01IRMVTFMRowDeleted != null)) {
                    this.TB_R01IRMVTFMRowDeleted(this, new TB_R01IRMVTFMRowChangeEvent(((TB_R01IRMVTFMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_R01IRMVTFMRowDeleting != null)) {
                    this.TB_R01IRMVTFMRowDeleting(this, new TB_R01IRMVTFMRowChangeEvent(((TB_R01IRMVTFMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_R01IRMVTFMRow(TB_R01IRMVTFMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_R01IRMVTFM ds = new DS_R01IRMVTFM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_R01IRMVTFMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_R01IRMVTFMRow : global::System.Data.DataRow {
            
            private TB_R01IRMVTFMDataTable tableTB_R01IRMVTFM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_R01IRMVTFMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_R01IRMVTFM = ((TB_R01IRMVTFMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BU {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.BUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BU\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.BUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PORTFOLIO {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.PORTFOLIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PORTFOLIO\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.PORTFOLIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.PRODTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODTYPE\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.PRODTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALNO {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.DEALNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALNO\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.DEALNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CPTY {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.CPTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPTY\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.CPTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.DEALDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALDATE\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.DEALDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STARTDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.STARTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STARTDATE\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.STARTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MATDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.MATDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MATDATE\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.MATDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOTIONAL1 {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.NOTIONAL1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOTIONAL1\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.NOTIONAL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LEG1 {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.LEG1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LEG1\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.LEG1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAYRECIND1 {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.PAYRECIND1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAYRECIND1\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.PAYRECIND1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FIXFLOATIND1 {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.FIXFLOATIND1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIXFLOATIND1\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.FIXFLOATIND1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTRATE1 {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.INTRATE1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTRATE1\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.INTRATE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTPAYCYCLE1 {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.INTPAYCYCLE1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTPAYCYCLE1\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.INTPAYCYCLE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LEG2 {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.LEG2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LEG2\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.LEG2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAYRECIND2 {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.PAYRECIND2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAYRECIND2\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.PAYRECIND2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FIXFLOATIND2 {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.FIXFLOATIND2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIXFLOATIND2\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.FIXFLOATIND2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RATECODE2 {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.RATECODE2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RATECODE2\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.RATECODE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTPAYCYCLE2 {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRMVTFM.INTPAYCYCLE2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTPAYCYCLE2\' in table \'TB_R01IRMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRMVTFM.INTPAYCYCLE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBUNull() {
                return this.IsNull(this.tableTB_R01IRMVTFM.BUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBUNull() {
                this[this.tableTB_R01IRMVTFM.BUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPORTFOLIONull() {
                return this.IsNull(this.tableTB_R01IRMVTFM.PORTFOLIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPORTFOLIONull() {
                this[this.tableTB_R01IRMVTFM.PORTFOLIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODTYPENull() {
                return this.IsNull(this.tableTB_R01IRMVTFM.PRODTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODTYPENull() {
                this[this.tableTB_R01IRMVTFM.PRODTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALNONull() {
                return this.IsNull(this.tableTB_R01IRMVTFM.DEALNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALNONull() {
                this[this.tableTB_R01IRMVTFM.DEALNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPTYNull() {
                return this.IsNull(this.tableTB_R01IRMVTFM.CPTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPTYNull() {
                this[this.tableTB_R01IRMVTFM.CPTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALDATENull() {
                return this.IsNull(this.tableTB_R01IRMVTFM.DEALDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALDATENull() {
                this[this.tableTB_R01IRMVTFM.DEALDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTARTDATENull() {
                return this.IsNull(this.tableTB_R01IRMVTFM.STARTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTARTDATENull() {
                this[this.tableTB_R01IRMVTFM.STARTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMATDATENull() {
                return this.IsNull(this.tableTB_R01IRMVTFM.MATDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMATDATENull() {
                this[this.tableTB_R01IRMVTFM.MATDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOTIONAL1Null() {
                return this.IsNull(this.tableTB_R01IRMVTFM.NOTIONAL1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOTIONAL1Null() {
                this[this.tableTB_R01IRMVTFM.NOTIONAL1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLEG1Null() {
                return this.IsNull(this.tableTB_R01IRMVTFM.LEG1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLEG1Null() {
                this[this.tableTB_R01IRMVTFM.LEG1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYRECIND1Null() {
                return this.IsNull(this.tableTB_R01IRMVTFM.PAYRECIND1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYRECIND1Null() {
                this[this.tableTB_R01IRMVTFM.PAYRECIND1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIXFLOATIND1Null() {
                return this.IsNull(this.tableTB_R01IRMVTFM.FIXFLOATIND1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIXFLOATIND1Null() {
                this[this.tableTB_R01IRMVTFM.FIXFLOATIND1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTRATE1Null() {
                return this.IsNull(this.tableTB_R01IRMVTFM.INTRATE1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTRATE1Null() {
                this[this.tableTB_R01IRMVTFM.INTRATE1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTPAYCYCLE1Null() {
                return this.IsNull(this.tableTB_R01IRMVTFM.INTPAYCYCLE1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTPAYCYCLE1Null() {
                this[this.tableTB_R01IRMVTFM.INTPAYCYCLE1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLEG2Null() {
                return this.IsNull(this.tableTB_R01IRMVTFM.LEG2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLEG2Null() {
                this[this.tableTB_R01IRMVTFM.LEG2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYRECIND2Null() {
                return this.IsNull(this.tableTB_R01IRMVTFM.PAYRECIND2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYRECIND2Null() {
                this[this.tableTB_R01IRMVTFM.PAYRECIND2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIXFLOATIND2Null() {
                return this.IsNull(this.tableTB_R01IRMVTFM.FIXFLOATIND2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIXFLOATIND2Null() {
                this[this.tableTB_R01IRMVTFM.FIXFLOATIND2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRATECODE2Null() {
                return this.IsNull(this.tableTB_R01IRMVTFM.RATECODE2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRATECODE2Null() {
                this[this.tableTB_R01IRMVTFM.RATECODE2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTPAYCYCLE2Null() {
                return this.IsNull(this.tableTB_R01IRMVTFM.INTPAYCYCLE2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTPAYCYCLE2Null() {
                this[this.tableTB_R01IRMVTFM.INTPAYCYCLE2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_R01IRMVTFMRowChangeEvent : global::System.EventArgs {
            
            private TB_R01IRMVTFMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01IRMVTFMRowChangeEvent(TB_R01IRMVTFMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01IRMVTFMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591