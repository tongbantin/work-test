//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KKB.Treasury.TreasuryReport.DSD_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_R01FICFFM")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_R01FICFFM : global::System.Data.DataSet {
        
        private TB_R01FICFFMDataTable tableTB_R01FICFFM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_R01FICFFM() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_R01FICFFM(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TB_R01FICFFM"] != null)) {
                    base.Tables.Add(new TB_R01FICFFMDataTable(ds.Tables["TB_R01FICFFM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_R01FICFFMDataTable TB_R01FICFFM {
            get {
                return this.tableTB_R01FICFFM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_R01FICFFM cln = ((DS_R01FICFFM)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TB_R01FICFFM"] != null)) {
                    base.Tables.Add(new TB_R01FICFFMDataTable(ds.Tables["TB_R01FICFFM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTB_R01FICFFM = ((TB_R01FICFFMDataTable)(base.Tables["TB_R01FICFFM"]));
            if ((initTable == true)) {
                if ((this.tableTB_R01FICFFM != null)) {
                    this.tableTB_R01FICFFM.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_R01FICFFM";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_R01FICFFM.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTB_R01FICFFM = new TB_R01FICFFMDataTable();
            base.Tables.Add(this.tableTB_R01FICFFM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_R01FICFFM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_R01FICFFM ds = new DS_R01FICFFM();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TB_R01FICFFMRowChangeEventHandler(object sender, TB_R01FICFFMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_R01FICFFMDataTable : global::System.Data.TypedTableBase<TB_R01FICFFMRow> {
            
            private global::System.Data.DataColumn columnBRANPRCDATE;
            
            private global::System.Data.DataColumn columnPORT;
            
            private global::System.Data.DataColumn columnPORTFOLIO;
            
            private global::System.Data.DataColumn columnISIN;
            
            private global::System.Data.DataColumn columnSECID;
            
            private global::System.Data.DataColumn columnISSUER;
            
            private global::System.Data.DataColumn columnINDUSTRYCODE;
            
            private global::System.Data.DataColumn columnCOUNTRY;
            
            private global::System.Data.DataColumn columnMATURITYDATE;
            
            private global::System.Data.DataColumn columnPRINCIPALAMT;
            
            private global::System.Data.DataColumn columnQUANTITY;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnNOTIONAL;
            
            private global::System.Data.DataColumn columnCOUPON;
            
            private global::System.Data.DataColumn columnCASHFLOW;
            
            private global::System.Data.DataColumn columnINTSTRTDTE;
            
            private global::System.Data.DataColumn columnINTENDDTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01FICFFMDataTable() {
                this.TableName = "TB_R01FICFFM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_R01FICFFMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_R01FICFFMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANPRCDATEColumn {
                get {
                    return this.columnBRANPRCDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PORTColumn {
                get {
                    return this.columnPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PORTFOLIOColumn {
                get {
                    return this.columnPORTFOLIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISINColumn {
                get {
                    return this.columnISIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SECIDColumn {
                get {
                    return this.columnSECID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISSUERColumn {
                get {
                    return this.columnISSUER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INDUSTRYCODEColumn {
                get {
                    return this.columnINDUSTRYCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COUNTRYColumn {
                get {
                    return this.columnCOUNTRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MATURITYDATEColumn {
                get {
                    return this.columnMATURITYDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRINCIPALAMTColumn {
                get {
                    return this.columnPRINCIPALAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUANTITYColumn {
                get {
                    return this.columnQUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOTIONALColumn {
                get {
                    return this.columnNOTIONAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COUPONColumn {
                get {
                    return this.columnCOUPON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CASHFLOWColumn {
                get {
                    return this.columnCASHFLOW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTSTRTDTEColumn {
                get {
                    return this.columnINTSTRTDTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTENDDTEColumn {
                get {
                    return this.columnINTENDDTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01FICFFMRow this[int index] {
                get {
                    return ((TB_R01FICFFMRow)(this.Rows[index]));
                }
            }
            
            public event TB_R01FICFFMRowChangeEventHandler TB_R01FICFFMRowChanging;
            
            public event TB_R01FICFFMRowChangeEventHandler TB_R01FICFFMRowChanged;
            
            public event TB_R01FICFFMRowChangeEventHandler TB_R01FICFFMRowDeleting;
            
            public event TB_R01FICFFMRowChangeEventHandler TB_R01FICFFMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_R01FICFFMRow(TB_R01FICFFMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01FICFFMRow AddTB_R01FICFFMRow(
                        string BRANPRCDATE, 
                        string PORT, 
                        string PORTFOLIO, 
                        string ISIN, 
                        string SECID, 
                        string ISSUER, 
                        string INDUSTRYCODE, 
                        string COUNTRY, 
                        string MATURITYDATE, 
                        string PRINCIPALAMT, 
                        string QUANTITY, 
                        string SEQ, 
                        string NOTIONAL, 
                        string COUPON, 
                        string CASHFLOW, 
                        string INTSTRTDTE, 
                        string INTENDDTE) {
                TB_R01FICFFMRow rowTB_R01FICFFMRow = ((TB_R01FICFFMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BRANPRCDATE,
                        PORT,
                        PORTFOLIO,
                        ISIN,
                        SECID,
                        ISSUER,
                        INDUSTRYCODE,
                        COUNTRY,
                        MATURITYDATE,
                        PRINCIPALAMT,
                        QUANTITY,
                        SEQ,
                        NOTIONAL,
                        COUPON,
                        CASHFLOW,
                        INTSTRTDTE,
                        INTENDDTE};
                rowTB_R01FICFFMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_R01FICFFMRow);
                return rowTB_R01FICFFMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_R01FICFFMDataTable cln = ((TB_R01FICFFMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_R01FICFFMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBRANPRCDATE = base.Columns["BRANPRCDATE"];
                this.columnPORT = base.Columns["PORT"];
                this.columnPORTFOLIO = base.Columns["PORTFOLIO"];
                this.columnISIN = base.Columns["ISIN"];
                this.columnSECID = base.Columns["SECID"];
                this.columnISSUER = base.Columns["ISSUER"];
                this.columnINDUSTRYCODE = base.Columns["INDUSTRYCODE"];
                this.columnCOUNTRY = base.Columns["COUNTRY"];
                this.columnMATURITYDATE = base.Columns["MATURITYDATE"];
                this.columnPRINCIPALAMT = base.Columns["PRINCIPALAMT"];
                this.columnQUANTITY = base.Columns["QUANTITY"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnNOTIONAL = base.Columns["NOTIONAL"];
                this.columnCOUPON = base.Columns["COUPON"];
                this.columnCASHFLOW = base.Columns["CASHFLOW"];
                this.columnINTSTRTDTE = base.Columns["INTSTRTDTE"];
                this.columnINTENDDTE = base.Columns["INTENDDTE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBRANPRCDATE = new global::System.Data.DataColumn("BRANPRCDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANPRCDATE);
                this.columnPORT = new global::System.Data.DataColumn("PORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORT);
                this.columnPORTFOLIO = new global::System.Data.DataColumn("PORTFOLIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORTFOLIO);
                this.columnISIN = new global::System.Data.DataColumn("ISIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISIN);
                this.columnSECID = new global::System.Data.DataColumn("SECID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECID);
                this.columnISSUER = new global::System.Data.DataColumn("ISSUER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISSUER);
                this.columnINDUSTRYCODE = new global::System.Data.DataColumn("INDUSTRYCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINDUSTRYCODE);
                this.columnCOUNTRY = new global::System.Data.DataColumn("COUNTRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNTRY);
                this.columnMATURITYDATE = new global::System.Data.DataColumn("MATURITYDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMATURITYDATE);
                this.columnPRINCIPALAMT = new global::System.Data.DataColumn("PRINCIPALAMT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRINCIPALAMT);
                this.columnQUANTITY = new global::System.Data.DataColumn("QUANTITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnNOTIONAL = new global::System.Data.DataColumn("NOTIONAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTIONAL);
                this.columnCOUPON = new global::System.Data.DataColumn("COUPON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUPON);
                this.columnCASHFLOW = new global::System.Data.DataColumn("CASHFLOW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASHFLOW);
                this.columnINTSTRTDTE = new global::System.Data.DataColumn("INTSTRTDTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTSTRTDTE);
                this.columnINTENDDTE = new global::System.Data.DataColumn("INTENDDTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTENDDTE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01FICFFMRow NewTB_R01FICFFMRow() {
                return ((TB_R01FICFFMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_R01FICFFMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_R01FICFFMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_R01FICFFMRowChanged != null)) {
                    this.TB_R01FICFFMRowChanged(this, new TB_R01FICFFMRowChangeEvent(((TB_R01FICFFMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_R01FICFFMRowChanging != null)) {
                    this.TB_R01FICFFMRowChanging(this, new TB_R01FICFFMRowChangeEvent(((TB_R01FICFFMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_R01FICFFMRowDeleted != null)) {
                    this.TB_R01FICFFMRowDeleted(this, new TB_R01FICFFMRowChangeEvent(((TB_R01FICFFMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_R01FICFFMRowDeleting != null)) {
                    this.TB_R01FICFFMRowDeleting(this, new TB_R01FICFFMRowChangeEvent(((TB_R01FICFFMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_R01FICFFMRow(TB_R01FICFFMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_R01FICFFM ds = new DS_R01FICFFM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_R01FICFFMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_R01FICFFMRow : global::System.Data.DataRow {
            
            private TB_R01FICFFMDataTable tableTB_R01FICFFM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_R01FICFFMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_R01FICFFM = ((TB_R01FICFFMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRANPRCDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.BRANPRCDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BRANPRCDATE\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.BRANPRCDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PORT {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.PORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PORT\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.PORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PORTFOLIO {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.PORTFOLIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PORTFOLIO\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.PORTFOLIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISIN {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.ISINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISIN\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.ISINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SECID {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.SECIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SECID\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.SECIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISSUER {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.ISSUERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISSUER\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.ISSUERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INDUSTRYCODE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.INDUSTRYCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INDUSTRYCODE\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.INDUSTRYCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COUNTRY {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.COUNTRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COUNTRY\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.COUNTRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MATURITYDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.MATURITYDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MATURITYDATE\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.MATURITYDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRINCIPALAMT {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.PRINCIPALAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRINCIPALAMT\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.PRINCIPALAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QUANTITY {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.QUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUANTITY\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEQ {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.SEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEQ\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOTIONAL {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.NOTIONALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOTIONAL\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.NOTIONALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COUPON {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.COUPONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COUPON\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.COUPONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CASHFLOW {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.CASHFLOWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CASHFLOW\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.CASHFLOWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTSTRTDTE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.INTSTRTDTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTSTRTDTE\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.INTSTRTDTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTENDDTE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FICFFM.INTENDDTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTENDDTE\' in table \'TB_R01FICFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FICFFM.INTENDDTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRANPRCDATENull() {
                return this.IsNull(this.tableTB_R01FICFFM.BRANPRCDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRANPRCDATENull() {
                this[this.tableTB_R01FICFFM.BRANPRCDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPORTNull() {
                return this.IsNull(this.tableTB_R01FICFFM.PORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPORTNull() {
                this[this.tableTB_R01FICFFM.PORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPORTFOLIONull() {
                return this.IsNull(this.tableTB_R01FICFFM.PORTFOLIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPORTFOLIONull() {
                this[this.tableTB_R01FICFFM.PORTFOLIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISINNull() {
                return this.IsNull(this.tableTB_R01FICFFM.ISINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISINNull() {
                this[this.tableTB_R01FICFFM.ISINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSECIDNull() {
                return this.IsNull(this.tableTB_R01FICFFM.SECIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSECIDNull() {
                this[this.tableTB_R01FICFFM.SECIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISSUERNull() {
                return this.IsNull(this.tableTB_R01FICFFM.ISSUERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISSUERNull() {
                this[this.tableTB_R01FICFFM.ISSUERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINDUSTRYCODENull() {
                return this.IsNull(this.tableTB_R01FICFFM.INDUSTRYCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINDUSTRYCODENull() {
                this[this.tableTB_R01FICFFM.INDUSTRYCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOUNTRYNull() {
                return this.IsNull(this.tableTB_R01FICFFM.COUNTRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOUNTRYNull() {
                this[this.tableTB_R01FICFFM.COUNTRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMATURITYDATENull() {
                return this.IsNull(this.tableTB_R01FICFFM.MATURITYDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMATURITYDATENull() {
                this[this.tableTB_R01FICFFM.MATURITYDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRINCIPALAMTNull() {
                return this.IsNull(this.tableTB_R01FICFFM.PRINCIPALAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRINCIPALAMTNull() {
                this[this.tableTB_R01FICFFM.PRINCIPALAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUANTITYNull() {
                return this.IsNull(this.tableTB_R01FICFFM.QUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUANTITYNull() {
                this[this.tableTB_R01FICFFM.QUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEQNull() {
                return this.IsNull(this.tableTB_R01FICFFM.SEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEQNull() {
                this[this.tableTB_R01FICFFM.SEQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOTIONALNull() {
                return this.IsNull(this.tableTB_R01FICFFM.NOTIONALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOTIONALNull() {
                this[this.tableTB_R01FICFFM.NOTIONALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOUPONNull() {
                return this.IsNull(this.tableTB_R01FICFFM.COUPONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOUPONNull() {
                this[this.tableTB_R01FICFFM.COUPONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCASHFLOWNull() {
                return this.IsNull(this.tableTB_R01FICFFM.CASHFLOWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCASHFLOWNull() {
                this[this.tableTB_R01FICFFM.CASHFLOWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTSTRTDTENull() {
                return this.IsNull(this.tableTB_R01FICFFM.INTSTRTDTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTSTRTDTENull() {
                this[this.tableTB_R01FICFFM.INTSTRTDTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTENDDTENull() {
                return this.IsNull(this.tableTB_R01FICFFM.INTENDDTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTENDDTENull() {
                this[this.tableTB_R01FICFFM.INTENDDTEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_R01FICFFMRowChangeEvent : global::System.EventArgs {
            
            private TB_R01FICFFMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01FICFFMRowChangeEvent(TB_R01FICFFMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01FICFFMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591