//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KKB.Treasury.TreasuryReport.DSD_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_TR080ACSWGL")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_TR080ACSWGL : global::System.Data.DataSet {
        
        private TB_TR080ACSWGLDataTable tableTB_TR080ACSWGL;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_TR080ACSWGL() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_TR080ACSWGL(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TB_TR080ACSWGL"] != null)) {
                    base.Tables.Add(new TB_TR080ACSWGLDataTable(ds.Tables["TB_TR080ACSWGL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_TR080ACSWGLDataTable TB_TR080ACSWGL {
            get {
                return this.tableTB_TR080ACSWGL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_TR080ACSWGL cln = ((DS_TR080ACSWGL)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TB_TR080ACSWGL"] != null)) {
                    base.Tables.Add(new TB_TR080ACSWGLDataTable(ds.Tables["TB_TR080ACSWGL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTB_TR080ACSWGL = ((TB_TR080ACSWGLDataTable)(base.Tables["TB_TR080ACSWGL"]));
            if ((initTable == true)) {
                if ((this.tableTB_TR080ACSWGL != null)) {
                    this.tableTB_TR080ACSWGL.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_TR080ACSWGL";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_TR080ACSWGL.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTB_TR080ACSWGL = new TB_TR080ACSWGLDataTable();
            base.Tables.Add(this.tableTB_TR080ACSWGL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_TR080ACSWGL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_TR080ACSWGL ds = new DS_TR080ACSWGL();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TB_TR080ACSWGLRowChangeEventHandler(object sender, TB_TR080ACSWGLRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_TR080ACSWGLDataTable : global::System.Data.TypedTableBase<TB_TR080ACSWGLRow> {
            
            private global::System.Data.DataColumn columnBR;
            
            private global::System.Data.DataColumn columnBRANPRCDATE;
            
            private global::System.Data.DataColumn columnDEALNO;
            
            private global::System.Data.DataColumn columnCMNE;
            
            private global::System.Data.DataColumn columnNEARFAR;
            
            private global::System.Data.DataColumn columnDEALDATE;
            
            private global::System.Data.DataColumn columnEFFDATE;
            
            private global::System.Data.DataColumn columnPAY_CCY;
            
            private global::System.Data.DataColumn columnPAY_AMOUNT;
            
            private global::System.Data.DataColumn columnPAY_RATE;
            
            private global::System.Data.DataColumn columnRECEIVE_CCY;
            
            private global::System.Data.DataColumn columnRECEIVE_AMOUNT;
            
            private global::System.Data.DataColumn columnRECEIVE_RATE;
            
            private global::System.Data.DataColumn columnREALIZEDPL;
            
            private global::System.Data.DataColumn columnCOST;
            
            private global::System.Data.DataColumn columnCONDFROMDATE;
            
            private global::System.Data.DataColumn columnCONDTODATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR080ACSWGLDataTable() {
                this.TableName = "TB_TR080ACSWGL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TR080ACSWGLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_TR080ACSWGLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRColumn {
                get {
                    return this.columnBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANPRCDATEColumn {
                get {
                    return this.columnBRANPRCDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALNOColumn {
                get {
                    return this.columnDEALNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CMNEColumn {
                get {
                    return this.columnCMNE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NEARFARColumn {
                get {
                    return this.columnNEARFAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALDATEColumn {
                get {
                    return this.columnDEALDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EFFDATEColumn {
                get {
                    return this.columnEFFDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAY_CCYColumn {
                get {
                    return this.columnPAY_CCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAY_AMOUNTColumn {
                get {
                    return this.columnPAY_AMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAY_RATEColumn {
                get {
                    return this.columnPAY_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECEIVE_CCYColumn {
                get {
                    return this.columnRECEIVE_CCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECEIVE_AMOUNTColumn {
                get {
                    return this.columnRECEIVE_AMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECEIVE_RATEColumn {
                get {
                    return this.columnRECEIVE_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REALIZEDPLColumn {
                get {
                    return this.columnREALIZEDPL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COSTColumn {
                get {
                    return this.columnCOST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONDFROMDATEColumn {
                get {
                    return this.columnCONDFROMDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONDTODATEColumn {
                get {
                    return this.columnCONDTODATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR080ACSWGLRow this[int index] {
                get {
                    return ((TB_TR080ACSWGLRow)(this.Rows[index]));
                }
            }
            
            public event TB_TR080ACSWGLRowChangeEventHandler TB_TR080ACSWGLRowChanging;
            
            public event TB_TR080ACSWGLRowChangeEventHandler TB_TR080ACSWGLRowChanged;
            
            public event TB_TR080ACSWGLRowChangeEventHandler TB_TR080ACSWGLRowDeleting;
            
            public event TB_TR080ACSWGLRowChangeEventHandler TB_TR080ACSWGLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_TR080ACSWGLRow(TB_TR080ACSWGLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR080ACSWGLRow AddTB_TR080ACSWGLRow(
                        string BR, 
                        string BRANPRCDATE, 
                        string DEALNO, 
                        string CMNE, 
                        string NEARFAR, 
                        string DEALDATE, 
                        string EFFDATE, 
                        string PAY_CCY, 
                        decimal PAY_AMOUNT, 
                        decimal PAY_RATE, 
                        string RECEIVE_CCY, 
                        decimal RECEIVE_AMOUNT, 
                        decimal RECEIVE_RATE, 
                        decimal REALIZEDPL, 
                        string COST, 
                        string CONDFROMDATE, 
                        string CONDTODATE) {
                TB_TR080ACSWGLRow rowTB_TR080ACSWGLRow = ((TB_TR080ACSWGLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BR,
                        BRANPRCDATE,
                        DEALNO,
                        CMNE,
                        NEARFAR,
                        DEALDATE,
                        EFFDATE,
                        PAY_CCY,
                        PAY_AMOUNT,
                        PAY_RATE,
                        RECEIVE_CCY,
                        RECEIVE_AMOUNT,
                        RECEIVE_RATE,
                        REALIZEDPL,
                        COST,
                        CONDFROMDATE,
                        CONDTODATE};
                rowTB_TR080ACSWGLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_TR080ACSWGLRow);
                return rowTB_TR080ACSWGLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_TR080ACSWGLDataTable cln = ((TB_TR080ACSWGLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_TR080ACSWGLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBR = base.Columns["BR"];
                this.columnBRANPRCDATE = base.Columns["BRANPRCDATE"];
                this.columnDEALNO = base.Columns["DEALNO"];
                this.columnCMNE = base.Columns["CMNE"];
                this.columnNEARFAR = base.Columns["NEARFAR"];
                this.columnDEALDATE = base.Columns["DEALDATE"];
                this.columnEFFDATE = base.Columns["EFFDATE"];
                this.columnPAY_CCY = base.Columns["PAY_CCY"];
                this.columnPAY_AMOUNT = base.Columns["PAY_AMOUNT"];
                this.columnPAY_RATE = base.Columns["PAY_RATE"];
                this.columnRECEIVE_CCY = base.Columns["RECEIVE_CCY"];
                this.columnRECEIVE_AMOUNT = base.Columns["RECEIVE_AMOUNT"];
                this.columnRECEIVE_RATE = base.Columns["RECEIVE_RATE"];
                this.columnREALIZEDPL = base.Columns["REALIZEDPL"];
                this.columnCOST = base.Columns["COST"];
                this.columnCONDFROMDATE = base.Columns["CONDFROMDATE"];
                this.columnCONDTODATE = base.Columns["CONDTODATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBR = new global::System.Data.DataColumn("BR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBR);
                this.columnBRANPRCDATE = new global::System.Data.DataColumn("BRANPRCDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANPRCDATE);
                this.columnDEALNO = new global::System.Data.DataColumn("DEALNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALNO);
                this.columnCMNE = new global::System.Data.DataColumn("CMNE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMNE);
                this.columnNEARFAR = new global::System.Data.DataColumn("NEARFAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEARFAR);
                this.columnDEALDATE = new global::System.Data.DataColumn("DEALDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALDATE);
                this.columnEFFDATE = new global::System.Data.DataColumn("EFFDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEFFDATE);
                this.columnPAY_CCY = new global::System.Data.DataColumn("PAY_CCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAY_CCY);
                this.columnPAY_AMOUNT = new global::System.Data.DataColumn("PAY_AMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAY_AMOUNT);
                this.columnPAY_RATE = new global::System.Data.DataColumn("PAY_RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAY_RATE);
                this.columnRECEIVE_CCY = new global::System.Data.DataColumn("RECEIVE_CCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIVE_CCY);
                this.columnRECEIVE_AMOUNT = new global::System.Data.DataColumn("RECEIVE_AMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIVE_AMOUNT);
                this.columnRECEIVE_RATE = new global::System.Data.DataColumn("RECEIVE_RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIVE_RATE);
                this.columnREALIZEDPL = new global::System.Data.DataColumn("REALIZEDPL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREALIZEDPL);
                this.columnCOST = new global::System.Data.DataColumn("COST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST);
                this.columnCONDFROMDATE = new global::System.Data.DataColumn("CONDFROMDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONDFROMDATE);
                this.columnCONDTODATE = new global::System.Data.DataColumn("CONDTODATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONDTODATE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR080ACSWGLRow NewTB_TR080ACSWGLRow() {
                return ((TB_TR080ACSWGLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_TR080ACSWGLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_TR080ACSWGLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_TR080ACSWGLRowChanged != null)) {
                    this.TB_TR080ACSWGLRowChanged(this, new TB_TR080ACSWGLRowChangeEvent(((TB_TR080ACSWGLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_TR080ACSWGLRowChanging != null)) {
                    this.TB_TR080ACSWGLRowChanging(this, new TB_TR080ACSWGLRowChangeEvent(((TB_TR080ACSWGLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_TR080ACSWGLRowDeleted != null)) {
                    this.TB_TR080ACSWGLRowDeleted(this, new TB_TR080ACSWGLRowChangeEvent(((TB_TR080ACSWGLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_TR080ACSWGLRowDeleting != null)) {
                    this.TB_TR080ACSWGLRowDeleting(this, new TB_TR080ACSWGLRowChangeEvent(((TB_TR080ACSWGLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_TR080ACSWGLRow(TB_TR080ACSWGLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TR080ACSWGL ds = new DS_TR080ACSWGL();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_TR080ACSWGLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_TR080ACSWGLRow : global::System.Data.DataRow {
            
            private TB_TR080ACSWGLDataTable tableTB_TR080ACSWGL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TR080ACSWGLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_TR080ACSWGL = ((TB_TR080ACSWGLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BR {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR080ACSWGL.BRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BR\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.BRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRANPRCDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR080ACSWGL.BRANPRCDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BRANPRCDATE\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.BRANPRCDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALNO {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR080ACSWGL.DEALNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALNO\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.DEALNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CMNE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR080ACSWGL.CMNEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMNE\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.CMNEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NEARFAR {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR080ACSWGL.NEARFARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NEARFAR\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.NEARFARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR080ACSWGL.DEALDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALDATE\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.DEALDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EFFDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR080ACSWGL.EFFDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EFFDATE\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.EFFDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAY_CCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR080ACSWGL.PAY_CCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAY_CCY\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.PAY_CCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PAY_AMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR080ACSWGL.PAY_AMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAY_AMOUNT\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.PAY_AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PAY_RATE {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR080ACSWGL.PAY_RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAY_RATE\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.PAY_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RECEIVE_CCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR080ACSWGL.RECEIVE_CCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECEIVE_CCY\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.RECEIVE_CCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RECEIVE_AMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR080ACSWGL.RECEIVE_AMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECEIVE_AMOUNT\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.RECEIVE_AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RECEIVE_RATE {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR080ACSWGL.RECEIVE_RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECEIVE_RATE\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.RECEIVE_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REALIZEDPL {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR080ACSWGL.REALIZEDPLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REALIZEDPL\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.REALIZEDPLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COST {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR080ACSWGL.COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COST\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONDFROMDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR080ACSWGL.CONDFROMDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONDFROMDATE\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.CONDFROMDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONDTODATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR080ACSWGL.CONDTODATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONDTODATE\' in table \'TB_TR080ACSWGL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR080ACSWGL.CONDTODATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRNull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.BRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRNull() {
                this[this.tableTB_TR080ACSWGL.BRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRANPRCDATENull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.BRANPRCDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRANPRCDATENull() {
                this[this.tableTB_TR080ACSWGL.BRANPRCDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALNONull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.DEALNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALNONull() {
                this[this.tableTB_TR080ACSWGL.DEALNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMNENull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.CMNEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMNENull() {
                this[this.tableTB_TR080ACSWGL.CMNEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNEARFARNull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.NEARFARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNEARFARNull() {
                this[this.tableTB_TR080ACSWGL.NEARFARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALDATENull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.DEALDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALDATENull() {
                this[this.tableTB_TR080ACSWGL.DEALDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEFFDATENull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.EFFDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEFFDATENull() {
                this[this.tableTB_TR080ACSWGL.EFFDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAY_CCYNull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.PAY_CCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAY_CCYNull() {
                this[this.tableTB_TR080ACSWGL.PAY_CCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAY_AMOUNTNull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.PAY_AMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAY_AMOUNTNull() {
                this[this.tableTB_TR080ACSWGL.PAY_AMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAY_RATENull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.PAY_RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAY_RATENull() {
                this[this.tableTB_TR080ACSWGL.PAY_RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRECEIVE_CCYNull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.RECEIVE_CCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRECEIVE_CCYNull() {
                this[this.tableTB_TR080ACSWGL.RECEIVE_CCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRECEIVE_AMOUNTNull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.RECEIVE_AMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRECEIVE_AMOUNTNull() {
                this[this.tableTB_TR080ACSWGL.RECEIVE_AMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRECEIVE_RATENull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.RECEIVE_RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRECEIVE_RATENull() {
                this[this.tableTB_TR080ACSWGL.RECEIVE_RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREALIZEDPLNull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.REALIZEDPLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREALIZEDPLNull() {
                this[this.tableTB_TR080ACSWGL.REALIZEDPLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOSTNull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOSTNull() {
                this[this.tableTB_TR080ACSWGL.COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONDFROMDATENull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.CONDFROMDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONDFROMDATENull() {
                this[this.tableTB_TR080ACSWGL.CONDFROMDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONDTODATENull() {
                return this.IsNull(this.tableTB_TR080ACSWGL.CONDTODATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONDTODATENull() {
                this[this.tableTB_TR080ACSWGL.CONDTODATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_TR080ACSWGLRowChangeEvent : global::System.EventArgs {
            
            private TB_TR080ACSWGLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR080ACSWGLRowChangeEvent(TB_TR080ACSWGLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR080ACSWGLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591