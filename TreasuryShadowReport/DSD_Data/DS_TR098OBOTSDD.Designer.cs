//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3655
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KKB.Treasury.TreasuryReport.DSD_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_TR098OBOTSDD")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_TR098OBOTSDD : global::System.Data.DataSet {
        
        private TB_TR098OBOTSDDDataTable tableTB_TR098OBOTSDD;
        
        private TB_TR098EXPENSEDataTable tableTB_TR098EXPENSE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_TR098OBOTSDD() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_TR098OBOTSDD(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TB_TR098OBOTSDD"] != null)) {
                    base.Tables.Add(new TB_TR098OBOTSDDDataTable(ds.Tables["TB_TR098OBOTSDD"]));
                }
                if ((ds.Tables["TB_TR098EXPENSE"] != null)) {
                    base.Tables.Add(new TB_TR098EXPENSEDataTable(ds.Tables["TB_TR098EXPENSE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_TR098OBOTSDDDataTable TB_TR098OBOTSDD {
            get {
                return this.tableTB_TR098OBOTSDD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_TR098EXPENSEDataTable TB_TR098EXPENSE {
            get {
                return this.tableTB_TR098EXPENSE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_TR098OBOTSDD cln = ((DS_TR098OBOTSDD)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TB_TR098OBOTSDD"] != null)) {
                    base.Tables.Add(new TB_TR098OBOTSDDDataTable(ds.Tables["TB_TR098OBOTSDD"]));
                }
                if ((ds.Tables["TB_TR098EXPENSE"] != null)) {
                    base.Tables.Add(new TB_TR098EXPENSEDataTable(ds.Tables["TB_TR098EXPENSE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTB_TR098OBOTSDD = ((TB_TR098OBOTSDDDataTable)(base.Tables["TB_TR098OBOTSDD"]));
            if ((initTable == true)) {
                if ((this.tableTB_TR098OBOTSDD != null)) {
                    this.tableTB_TR098OBOTSDD.InitVars();
                }
            }
            this.tableTB_TR098EXPENSE = ((TB_TR098EXPENSEDataTable)(base.Tables["TB_TR098EXPENSE"]));
            if ((initTable == true)) {
                if ((this.tableTB_TR098EXPENSE != null)) {
                    this.tableTB_TR098EXPENSE.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_TR098OBOTSDD";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_TR098OBOTSDD.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTB_TR098OBOTSDD = new TB_TR098OBOTSDDDataTable();
            base.Tables.Add(this.tableTB_TR098OBOTSDD);
            this.tableTB_TR098EXPENSE = new TB_TR098EXPENSEDataTable();
            base.Tables.Add(this.tableTB_TR098EXPENSE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_TR098OBOTSDD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_TR098EXPENSE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_TR098OBOTSDD ds = new DS_TR098OBOTSDD();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TB_TR098OBOTSDDRowChangeEventHandler(object sender, TB_TR098OBOTSDDRowChangeEvent e);
        
        public delegate void TB_TR098EXPENSERowChangeEventHandler(object sender, TB_TR098EXPENSERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_TR098OBOTSDDDataTable : global::System.Data.TypedTableBase<TB_TR098OBOTSDDRow> {
            
            private global::System.Data.DataColumn columnASOF;
            
            private global::System.Data.DataColumn columnBR;
            
            private global::System.Data.DataColumn columnCOST;
            
            private global::System.Data.DataColumn columnPORT;
            
            private global::System.Data.DataColumn columnDEALNO;
            
            private global::System.Data.DataColumn columnMETHOD;
            
            private global::System.Data.DataColumn columnPRODCODE;
            
            private global::System.Data.DataColumn columnPRODUCT;
            
            private global::System.Data.DataColumn columnDEALDATE;
            
            private global::System.Data.DataColumn columnSETTLEDATE;
            
            private global::System.Data.DataColumn columnVDATE;
            
            private global::System.Data.DataColumn columnPS;
            
            private global::System.Data.DataColumn columnSECID;
            
            private global::System.Data.DataColumn columnCUST;
            
            private global::System.Data.DataColumn columnCCY;
            
            private global::System.Data.DataColumn columnFACEAMT;
            
            private global::System.Data.DataColumn columnDAY;
            
            private global::System.Data.DataColumn columnFEE;
            
            private global::System.Data.DataColumn columnEXPENSE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR098OBOTSDDDataTable() {
                this.TableName = "TB_TR098OBOTSDD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TR098OBOTSDDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_TR098OBOTSDDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASOFColumn {
                get {
                    return this.columnASOF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRColumn {
                get {
                    return this.columnBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COSTColumn {
                get {
                    return this.columnCOST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PORTColumn {
                get {
                    return this.columnPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALNOColumn {
                get {
                    return this.columnDEALNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn METHODColumn {
                get {
                    return this.columnMETHOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODCODEColumn {
                get {
                    return this.columnPRODCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCTColumn {
                get {
                    return this.columnPRODUCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALDATEColumn {
                get {
                    return this.columnDEALDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SETTLEDATEColumn {
                get {
                    return this.columnSETTLEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VDATEColumn {
                get {
                    return this.columnVDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PSColumn {
                get {
                    return this.columnPS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SECIDColumn {
                get {
                    return this.columnSECID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTColumn {
                get {
                    return this.columnCUST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CCYColumn {
                get {
                    return this.columnCCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FACEAMTColumn {
                get {
                    return this.columnFACEAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DAYColumn {
                get {
                    return this.columnDAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEEColumn {
                get {
                    return this.columnFEE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXPENSEColumn {
                get {
                    return this.columnEXPENSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR098OBOTSDDRow this[int index] {
                get {
                    return ((TB_TR098OBOTSDDRow)(this.Rows[index]));
                }
            }
            
            public event TB_TR098OBOTSDDRowChangeEventHandler TB_TR098OBOTSDDRowChanging;
            
            public event TB_TR098OBOTSDDRowChangeEventHandler TB_TR098OBOTSDDRowChanged;
            
            public event TB_TR098OBOTSDDRowChangeEventHandler TB_TR098OBOTSDDRowDeleting;
            
            public event TB_TR098OBOTSDDRowChangeEventHandler TB_TR098OBOTSDDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_TR098OBOTSDDRow(TB_TR098OBOTSDDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR098OBOTSDDRow AddTB_TR098OBOTSDDRow(
                        string ASOF, 
                        string BR, 
                        string COST, 
                        string PORT, 
                        string DEALNO, 
                        string METHOD, 
                        string PRODCODE, 
                        string PRODUCT, 
                        string DEALDATE, 
                        string SETTLEDATE, 
                        string VDATE, 
                        string PS, 
                        string SECID, 
                        string CUST, 
                        string CCY, 
                        decimal FACEAMT, 
                        decimal DAY, 
                        decimal FEE, 
                        decimal EXPENSE) {
                TB_TR098OBOTSDDRow rowTB_TR098OBOTSDDRow = ((TB_TR098OBOTSDDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ASOF,
                        BR,
                        COST,
                        PORT,
                        DEALNO,
                        METHOD,
                        PRODCODE,
                        PRODUCT,
                        DEALDATE,
                        SETTLEDATE,
                        VDATE,
                        PS,
                        SECID,
                        CUST,
                        CCY,
                        FACEAMT,
                        DAY,
                        FEE,
                        EXPENSE};
                rowTB_TR098OBOTSDDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_TR098OBOTSDDRow);
                return rowTB_TR098OBOTSDDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_TR098OBOTSDDDataTable cln = ((TB_TR098OBOTSDDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_TR098OBOTSDDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnASOF = base.Columns["ASOF"];
                this.columnBR = base.Columns["BR"];
                this.columnCOST = base.Columns["COST"];
                this.columnPORT = base.Columns["PORT"];
                this.columnDEALNO = base.Columns["DEALNO"];
                this.columnMETHOD = base.Columns["METHOD"];
                this.columnPRODCODE = base.Columns["PRODCODE"];
                this.columnPRODUCT = base.Columns["PRODUCT"];
                this.columnDEALDATE = base.Columns["DEALDATE"];
                this.columnSETTLEDATE = base.Columns["SETTLEDATE"];
                this.columnVDATE = base.Columns["VDATE"];
                this.columnPS = base.Columns["PS"];
                this.columnSECID = base.Columns["SECID"];
                this.columnCUST = base.Columns["CUST"];
                this.columnCCY = base.Columns["CCY"];
                this.columnFACEAMT = base.Columns["FACEAMT"];
                this.columnDAY = base.Columns["DAY"];
                this.columnFEE = base.Columns["FEE"];
                this.columnEXPENSE = base.Columns["EXPENSE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnASOF = new global::System.Data.DataColumn("ASOF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASOF);
                this.columnBR = new global::System.Data.DataColumn("BR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBR);
                this.columnCOST = new global::System.Data.DataColumn("COST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST);
                this.columnPORT = new global::System.Data.DataColumn("PORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORT);
                this.columnDEALNO = new global::System.Data.DataColumn("DEALNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALNO);
                this.columnMETHOD = new global::System.Data.DataColumn("METHOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMETHOD);
                this.columnPRODCODE = new global::System.Data.DataColumn("PRODCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODCODE);
                this.columnPRODUCT = new global::System.Data.DataColumn("PRODUCT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT);
                this.columnDEALDATE = new global::System.Data.DataColumn("DEALDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALDATE);
                this.columnSETTLEDATE = new global::System.Data.DataColumn("SETTLEDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTLEDATE);
                this.columnVDATE = new global::System.Data.DataColumn("VDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVDATE);
                this.columnPS = new global::System.Data.DataColumn("PS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPS);
                this.columnSECID = new global::System.Data.DataColumn("SECID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECID);
                this.columnCUST = new global::System.Data.DataColumn("CUST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUST);
                this.columnCCY = new global::System.Data.DataColumn("CCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCY);
                this.columnFACEAMT = new global::System.Data.DataColumn("FACEAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFACEAMT);
                this.columnDAY = new global::System.Data.DataColumn("DAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAY);
                this.columnFEE = new global::System.Data.DataColumn("FEE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEE);
                this.columnEXPENSE = new global::System.Data.DataColumn("EXPENSE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPENSE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR098OBOTSDDRow NewTB_TR098OBOTSDDRow() {
                return ((TB_TR098OBOTSDDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_TR098OBOTSDDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_TR098OBOTSDDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_TR098OBOTSDDRowChanged != null)) {
                    this.TB_TR098OBOTSDDRowChanged(this, new TB_TR098OBOTSDDRowChangeEvent(((TB_TR098OBOTSDDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_TR098OBOTSDDRowChanging != null)) {
                    this.TB_TR098OBOTSDDRowChanging(this, new TB_TR098OBOTSDDRowChangeEvent(((TB_TR098OBOTSDDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_TR098OBOTSDDRowDeleted != null)) {
                    this.TB_TR098OBOTSDDRowDeleted(this, new TB_TR098OBOTSDDRowChangeEvent(((TB_TR098OBOTSDDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_TR098OBOTSDDRowDeleting != null)) {
                    this.TB_TR098OBOTSDDRowDeleting(this, new TB_TR098OBOTSDDRowChangeEvent(((TB_TR098OBOTSDDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_TR098OBOTSDDRow(TB_TR098OBOTSDDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TR098OBOTSDD ds = new DS_TR098OBOTSDD();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_TR098OBOTSDDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_TR098EXPENSEDataTable : global::System.Data.TypedTableBase<TB_TR098EXPENSERow> {
            
            private global::System.Data.DataColumn columnCOST;
            
            private global::System.Data.DataColumn columnEXPENSE;
            
            private global::System.Data.DataColumn columnTOTAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR098EXPENSEDataTable() {
                this.TableName = "TB_TR098EXPENSE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TR098EXPENSEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_TR098EXPENSEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COSTColumn {
                get {
                    return this.columnCOST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXPENSEColumn {
                get {
                    return this.columnEXPENSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TOTALColumn {
                get {
                    return this.columnTOTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR098EXPENSERow this[int index] {
                get {
                    return ((TB_TR098EXPENSERow)(this.Rows[index]));
                }
            }
            
            public event TB_TR098EXPENSERowChangeEventHandler TB_TR098EXPENSERowChanging;
            
            public event TB_TR098EXPENSERowChangeEventHandler TB_TR098EXPENSERowChanged;
            
            public event TB_TR098EXPENSERowChangeEventHandler TB_TR098EXPENSERowDeleting;
            
            public event TB_TR098EXPENSERowChangeEventHandler TB_TR098EXPENSERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_TR098EXPENSERow(TB_TR098EXPENSERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR098EXPENSERow AddTB_TR098EXPENSERow(string COST, double EXPENSE, double TOTAL) {
                TB_TR098EXPENSERow rowTB_TR098EXPENSERow = ((TB_TR098EXPENSERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COST,
                        EXPENSE,
                        TOTAL};
                rowTB_TR098EXPENSERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_TR098EXPENSERow);
                return rowTB_TR098EXPENSERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_TR098EXPENSEDataTable cln = ((TB_TR098EXPENSEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_TR098EXPENSEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCOST = base.Columns["COST"];
                this.columnEXPENSE = base.Columns["EXPENSE"];
                this.columnTOTAL = base.Columns["TOTAL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCOST = new global::System.Data.DataColumn("COST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST);
                this.columnEXPENSE = new global::System.Data.DataColumn("EXPENSE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPENSE);
                this.columnTOTAL = new global::System.Data.DataColumn("TOTAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR098EXPENSERow NewTB_TR098EXPENSERow() {
                return ((TB_TR098EXPENSERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_TR098EXPENSERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_TR098EXPENSERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_TR098EXPENSERowChanged != null)) {
                    this.TB_TR098EXPENSERowChanged(this, new TB_TR098EXPENSERowChangeEvent(((TB_TR098EXPENSERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_TR098EXPENSERowChanging != null)) {
                    this.TB_TR098EXPENSERowChanging(this, new TB_TR098EXPENSERowChangeEvent(((TB_TR098EXPENSERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_TR098EXPENSERowDeleted != null)) {
                    this.TB_TR098EXPENSERowDeleted(this, new TB_TR098EXPENSERowChangeEvent(((TB_TR098EXPENSERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_TR098EXPENSERowDeleting != null)) {
                    this.TB_TR098EXPENSERowDeleting(this, new TB_TR098EXPENSERowChangeEvent(((TB_TR098EXPENSERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_TR098EXPENSERow(TB_TR098EXPENSERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TR098OBOTSDD ds = new DS_TR098OBOTSDD();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_TR098EXPENSEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_TR098OBOTSDDRow : global::System.Data.DataRow {
            
            private TB_TR098OBOTSDDDataTable tableTB_TR098OBOTSDD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TR098OBOTSDDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_TR098OBOTSDD = ((TB_TR098OBOTSDDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ASOF {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR098OBOTSDD.ASOFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASOF\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.ASOFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BR {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR098OBOTSDD.BRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BR\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.BRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COST {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR098OBOTSDD.COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COST\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PORT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR098OBOTSDD.PORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PORT\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.PORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALNO {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR098OBOTSDD.DEALNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALNO\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.DEALNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string METHOD {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR098OBOTSDD.METHODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'METHOD\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.METHODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODCODE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR098OBOTSDD.PRODCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODCODE\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.PRODCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR098OBOTSDD.PRODUCTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.PRODUCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR098OBOTSDD.DEALDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALDATE\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.DEALDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTLEDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR098OBOTSDD.SETTLEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SETTLEDATE\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.SETTLEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR098OBOTSDD.VDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VDATE\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.VDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PS {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR098OBOTSDD.PSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PS\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.PSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SECID {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR098OBOTSDD.SECIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SECID\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.SECIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUST {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR098OBOTSDD.CUSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUST\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.CUSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR098OBOTSDD.CCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CCY\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.CCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FACEAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR098OBOTSDD.FACEAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FACEAMT\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.FACEAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DAY {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR098OBOTSDD.DAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAY\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.DAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FEE {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR098OBOTSDD.FEEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FEE\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.FEEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EXPENSE {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR098OBOTSDD.EXPENSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXPENSE\' in table \'TB_TR098OBOTSDD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098OBOTSDD.EXPENSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASOFNull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.ASOFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASOFNull() {
                this[this.tableTB_TR098OBOTSDD.ASOFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRNull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.BRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRNull() {
                this[this.tableTB_TR098OBOTSDD.BRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOSTNull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOSTNull() {
                this[this.tableTB_TR098OBOTSDD.COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPORTNull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.PORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPORTNull() {
                this[this.tableTB_TR098OBOTSDD.PORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALNONull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.DEALNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALNONull() {
                this[this.tableTB_TR098OBOTSDD.DEALNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMETHODNull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.METHODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMETHODNull() {
                this[this.tableTB_TR098OBOTSDD.METHODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODCODENull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.PRODCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODCODENull() {
                this[this.tableTB_TR098OBOTSDD.PRODCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCTNull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.PRODUCTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCTNull() {
                this[this.tableTB_TR098OBOTSDD.PRODUCTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALDATENull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.DEALDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALDATENull() {
                this[this.tableTB_TR098OBOTSDD.DEALDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETTLEDATENull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.SETTLEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETTLEDATENull() {
                this[this.tableTB_TR098OBOTSDD.SETTLEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVDATENull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.VDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVDATENull() {
                this[this.tableTB_TR098OBOTSDD.VDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPSNull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.PSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPSNull() {
                this[this.tableTB_TR098OBOTSDD.PSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSECIDNull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.SECIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSECIDNull() {
                this[this.tableTB_TR098OBOTSDD.SECIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTNull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.CUSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTNull() {
                this[this.tableTB_TR098OBOTSDD.CUSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCCYNull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.CCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCCYNull() {
                this[this.tableTB_TR098OBOTSDD.CCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFACEAMTNull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.FACEAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFACEAMTNull() {
                this[this.tableTB_TR098OBOTSDD.FACEAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDAYNull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.DAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDAYNull() {
                this[this.tableTB_TR098OBOTSDD.DAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEENull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.FEEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEENull() {
                this[this.tableTB_TR098OBOTSDD.FEEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXPENSENull() {
                return this.IsNull(this.tableTB_TR098OBOTSDD.EXPENSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXPENSENull() {
                this[this.tableTB_TR098OBOTSDD.EXPENSEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_TR098EXPENSERow : global::System.Data.DataRow {
            
            private TB_TR098EXPENSEDataTable tableTB_TR098EXPENSE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TR098EXPENSERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_TR098EXPENSE = ((TB_TR098EXPENSEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COST {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR098EXPENSE.COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COST\' in table \'TB_TR098EXPENSE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098EXPENSE.COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double EXPENSE {
                get {
                    try {
                        return ((double)(this[this.tableTB_TR098EXPENSE.EXPENSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXPENSE\' in table \'TB_TR098EXPENSE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098EXPENSE.EXPENSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TOTAL {
                get {
                    try {
                        return ((double)(this[this.tableTB_TR098EXPENSE.TOTALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAL\' in table \'TB_TR098EXPENSE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR098EXPENSE.TOTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOSTNull() {
                return this.IsNull(this.tableTB_TR098EXPENSE.COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOSTNull() {
                this[this.tableTB_TR098EXPENSE.COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXPENSENull() {
                return this.IsNull(this.tableTB_TR098EXPENSE.EXPENSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXPENSENull() {
                this[this.tableTB_TR098EXPENSE.EXPENSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOTALNull() {
                return this.IsNull(this.tableTB_TR098EXPENSE.TOTALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOTALNull() {
                this[this.tableTB_TR098EXPENSE.TOTALColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_TR098OBOTSDDRowChangeEvent : global::System.EventArgs {
            
            private TB_TR098OBOTSDDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR098OBOTSDDRowChangeEvent(TB_TR098OBOTSDDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR098OBOTSDDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_TR098EXPENSERowChangeEvent : global::System.EventArgs {
            
            private TB_TR098EXPENSERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR098EXPENSERowChangeEvent(TB_TR098EXPENSERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR098EXPENSERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591