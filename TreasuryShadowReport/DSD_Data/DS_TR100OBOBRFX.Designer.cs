//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3655
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KKB.Treasury.TreasuryReport.DSD_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_TR100OBOBRFX")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_TR100OBOBRFX : global::System.Data.DataSet {
        
        private TB_TR100OBOBRFXDataTable tableTB_TR100OBOBRFX;
        
        private TB_TR100SUMMARYDataTable tableTB_TR100SUMMARY;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_TR100OBOBRFX() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_TR100OBOBRFX(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TB_TR100OBOBRFX"] != null)) {
                    base.Tables.Add(new TB_TR100OBOBRFXDataTable(ds.Tables["TB_TR100OBOBRFX"]));
                }
                if ((ds.Tables["TB_TR100SUMMARY"] != null)) {
                    base.Tables.Add(new TB_TR100SUMMARYDataTable(ds.Tables["TB_TR100SUMMARY"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_TR100OBOBRFXDataTable TB_TR100OBOBRFX {
            get {
                return this.tableTB_TR100OBOBRFX;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_TR100SUMMARYDataTable TB_TR100SUMMARY {
            get {
                return this.tableTB_TR100SUMMARY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_TR100OBOBRFX cln = ((DS_TR100OBOBRFX)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TB_TR100OBOBRFX"] != null)) {
                    base.Tables.Add(new TB_TR100OBOBRFXDataTable(ds.Tables["TB_TR100OBOBRFX"]));
                }
                if ((ds.Tables["TB_TR100SUMMARY"] != null)) {
                    base.Tables.Add(new TB_TR100SUMMARYDataTable(ds.Tables["TB_TR100SUMMARY"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTB_TR100OBOBRFX = ((TB_TR100OBOBRFXDataTable)(base.Tables["TB_TR100OBOBRFX"]));
            if ((initTable == true)) {
                if ((this.tableTB_TR100OBOBRFX != null)) {
                    this.tableTB_TR100OBOBRFX.InitVars();
                }
            }
            this.tableTB_TR100SUMMARY = ((TB_TR100SUMMARYDataTable)(base.Tables["TB_TR100SUMMARY"]));
            if ((initTable == true)) {
                if ((this.tableTB_TR100SUMMARY != null)) {
                    this.tableTB_TR100SUMMARY.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_TR100OBOBRFX";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_TR100OBOBRFX.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTB_TR100OBOBRFX = new TB_TR100OBOBRFXDataTable();
            base.Tables.Add(this.tableTB_TR100OBOBRFX);
            this.tableTB_TR100SUMMARY = new TB_TR100SUMMARYDataTable();
            base.Tables.Add(this.tableTB_TR100SUMMARY);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_TR100OBOBRFX() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_TR100SUMMARY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_TR100OBOBRFX ds = new DS_TR100OBOBRFX();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TB_TR100OBOBRFXRowChangeEventHandler(object sender, TB_TR100OBOBRFXRowChangeEvent e);
        
        public delegate void TB_TR100SUMMARYRowChangeEventHandler(object sender, TB_TR100SUMMARYRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_TR100OBOBRFXDataTable : global::System.Data.TypedTableBase<TB_TR100OBOBRFXRow> {
            
            private global::System.Data.DataColumn columnASOF;
            
            private global::System.Data.DataColumn columnBROK;
            
            private global::System.Data.DataColumn columnBR;
            
            private global::System.Data.DataColumn columnCOST;
            
            private global::System.Data.DataColumn columnPORT;
            
            private global::System.Data.DataColumn columnDEALNO;
            
            private global::System.Data.DataColumn columnPRODCODE;
            
            private global::System.Data.DataColumn columnDEALDATE;
            
            private global::System.Data.DataColumn columnNEARVDATE;
            
            private global::System.Data.DataColumn columnVDATE;
            
            private global::System.Data.DataColumn columnPS;
            
            private global::System.Data.DataColumn columnCUST;
            
            private global::System.Data.DataColumn columnCCY;
            
            private global::System.Data.DataColumn columnCCYAMT;
            
            private global::System.Data.DataColumn columnCTRCCY;
            
            private global::System.Data.DataColumn columnCTRAMT;
            
            private global::System.Data.DataColumn columnAMOUNT;
            
            private global::System.Data.DataColumn columnDAY;
            
            private global::System.Data.DataColumn columnFEE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR100OBOBRFXDataTable() {
                this.TableName = "TB_TR100OBOBRFX";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TR100OBOBRFXDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_TR100OBOBRFXDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASOFColumn {
                get {
                    return this.columnASOF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BROKColumn {
                get {
                    return this.columnBROK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRColumn {
                get {
                    return this.columnBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COSTColumn {
                get {
                    return this.columnCOST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PORTColumn {
                get {
                    return this.columnPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALNOColumn {
                get {
                    return this.columnDEALNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODCODEColumn {
                get {
                    return this.columnPRODCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALDATEColumn {
                get {
                    return this.columnDEALDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NEARVDATEColumn {
                get {
                    return this.columnNEARVDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VDATEColumn {
                get {
                    return this.columnVDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PSColumn {
                get {
                    return this.columnPS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTColumn {
                get {
                    return this.columnCUST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CCYColumn {
                get {
                    return this.columnCCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CCYAMTColumn {
                get {
                    return this.columnCCYAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTRCCYColumn {
                get {
                    return this.columnCTRCCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTRAMTColumn {
                get {
                    return this.columnCTRAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AMOUNTColumn {
                get {
                    return this.columnAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DAYColumn {
                get {
                    return this.columnDAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEEColumn {
                get {
                    return this.columnFEE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR100OBOBRFXRow this[int index] {
                get {
                    return ((TB_TR100OBOBRFXRow)(this.Rows[index]));
                }
            }
            
            public event TB_TR100OBOBRFXRowChangeEventHandler TB_TR100OBOBRFXRowChanging;
            
            public event TB_TR100OBOBRFXRowChangeEventHandler TB_TR100OBOBRFXRowChanged;
            
            public event TB_TR100OBOBRFXRowChangeEventHandler TB_TR100OBOBRFXRowDeleting;
            
            public event TB_TR100OBOBRFXRowChangeEventHandler TB_TR100OBOBRFXRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_TR100OBOBRFXRow(TB_TR100OBOBRFXRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR100OBOBRFXRow AddTB_TR100OBOBRFXRow(
                        string ASOF, 
                        string BROK, 
                        string BR, 
                        string COST, 
                        string PORT, 
                        string DEALNO, 
                        string PRODCODE, 
                        string DEALDATE, 
                        string NEARVDATE, 
                        string VDATE, 
                        string PS, 
                        string CUST, 
                        string CCY, 
                        decimal CCYAMT, 
                        string CTRCCY, 
                        decimal CTRAMT, 
                        decimal AMOUNT, 
                        decimal DAY, 
                        decimal FEE) {
                TB_TR100OBOBRFXRow rowTB_TR100OBOBRFXRow = ((TB_TR100OBOBRFXRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ASOF,
                        BROK,
                        BR,
                        COST,
                        PORT,
                        DEALNO,
                        PRODCODE,
                        DEALDATE,
                        NEARVDATE,
                        VDATE,
                        PS,
                        CUST,
                        CCY,
                        CCYAMT,
                        CTRCCY,
                        CTRAMT,
                        AMOUNT,
                        DAY,
                        FEE};
                rowTB_TR100OBOBRFXRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_TR100OBOBRFXRow);
                return rowTB_TR100OBOBRFXRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_TR100OBOBRFXDataTable cln = ((TB_TR100OBOBRFXDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_TR100OBOBRFXDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnASOF = base.Columns["ASOF"];
                this.columnBROK = base.Columns["BROK"];
                this.columnBR = base.Columns["BR"];
                this.columnCOST = base.Columns["COST"];
                this.columnPORT = base.Columns["PORT"];
                this.columnDEALNO = base.Columns["DEALNO"];
                this.columnPRODCODE = base.Columns["PRODCODE"];
                this.columnDEALDATE = base.Columns["DEALDATE"];
                this.columnNEARVDATE = base.Columns["NEARVDATE"];
                this.columnVDATE = base.Columns["VDATE"];
                this.columnPS = base.Columns["PS"];
                this.columnCUST = base.Columns["CUST"];
                this.columnCCY = base.Columns["CCY"];
                this.columnCCYAMT = base.Columns["CCYAMT"];
                this.columnCTRCCY = base.Columns["CTRCCY"];
                this.columnCTRAMT = base.Columns["CTRAMT"];
                this.columnAMOUNT = base.Columns["AMOUNT"];
                this.columnDAY = base.Columns["DAY"];
                this.columnFEE = base.Columns["FEE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnASOF = new global::System.Data.DataColumn("ASOF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASOF);
                this.columnBROK = new global::System.Data.DataColumn("BROK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBROK);
                this.columnBR = new global::System.Data.DataColumn("BR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBR);
                this.columnCOST = new global::System.Data.DataColumn("COST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST);
                this.columnPORT = new global::System.Data.DataColumn("PORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORT);
                this.columnDEALNO = new global::System.Data.DataColumn("DEALNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALNO);
                this.columnPRODCODE = new global::System.Data.DataColumn("PRODCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODCODE);
                this.columnDEALDATE = new global::System.Data.DataColumn("DEALDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALDATE);
                this.columnNEARVDATE = new global::System.Data.DataColumn("NEARVDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEARVDATE);
                this.columnVDATE = new global::System.Data.DataColumn("VDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVDATE);
                this.columnPS = new global::System.Data.DataColumn("PS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPS);
                this.columnCUST = new global::System.Data.DataColumn("CUST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUST);
                this.columnCCY = new global::System.Data.DataColumn("CCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCY);
                this.columnCCYAMT = new global::System.Data.DataColumn("CCYAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCYAMT);
                this.columnCTRCCY = new global::System.Data.DataColumn("CTRCCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTRCCY);
                this.columnCTRAMT = new global::System.Data.DataColumn("CTRAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTRAMT);
                this.columnAMOUNT = new global::System.Data.DataColumn("AMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT);
                this.columnDAY = new global::System.Data.DataColumn("DAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAY);
                this.columnFEE = new global::System.Data.DataColumn("FEE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR100OBOBRFXRow NewTB_TR100OBOBRFXRow() {
                return ((TB_TR100OBOBRFXRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_TR100OBOBRFXRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_TR100OBOBRFXRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_TR100OBOBRFXRowChanged != null)) {
                    this.TB_TR100OBOBRFXRowChanged(this, new TB_TR100OBOBRFXRowChangeEvent(((TB_TR100OBOBRFXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_TR100OBOBRFXRowChanging != null)) {
                    this.TB_TR100OBOBRFXRowChanging(this, new TB_TR100OBOBRFXRowChangeEvent(((TB_TR100OBOBRFXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_TR100OBOBRFXRowDeleted != null)) {
                    this.TB_TR100OBOBRFXRowDeleted(this, new TB_TR100OBOBRFXRowChangeEvent(((TB_TR100OBOBRFXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_TR100OBOBRFXRowDeleting != null)) {
                    this.TB_TR100OBOBRFXRowDeleting(this, new TB_TR100OBOBRFXRowChangeEvent(((TB_TR100OBOBRFXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_TR100OBOBRFXRow(TB_TR100OBOBRFXRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TR100OBOBRFX ds = new DS_TR100OBOBRFX();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_TR100OBOBRFXDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_TR100SUMMARYDataTable : global::System.Data.TypedTableBase<TB_TR100SUMMARYRow> {
            
            private global::System.Data.DataColumn columnSUBTOTAL;
            
            private global::System.Data.DataColumn columnDISCOUNT;
            
            private global::System.Data.DataColumn columnDISCOUNTAMT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR100SUMMARYDataTable() {
                this.TableName = "TB_TR100SUMMARY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TR100SUMMARYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_TR100SUMMARYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SUBTOTALColumn {
                get {
                    return this.columnSUBTOTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISCOUNTColumn {
                get {
                    return this.columnDISCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISCOUNTAMTColumn {
                get {
                    return this.columnDISCOUNTAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR100SUMMARYRow this[int index] {
                get {
                    return ((TB_TR100SUMMARYRow)(this.Rows[index]));
                }
            }
            
            public event TB_TR100SUMMARYRowChangeEventHandler TB_TR100SUMMARYRowChanging;
            
            public event TB_TR100SUMMARYRowChangeEventHandler TB_TR100SUMMARYRowChanged;
            
            public event TB_TR100SUMMARYRowChangeEventHandler TB_TR100SUMMARYRowDeleting;
            
            public event TB_TR100SUMMARYRowChangeEventHandler TB_TR100SUMMARYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_TR100SUMMARYRow(TB_TR100SUMMARYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR100SUMMARYRow AddTB_TR100SUMMARYRow(decimal SUBTOTAL, decimal DISCOUNT, decimal DISCOUNTAMT) {
                TB_TR100SUMMARYRow rowTB_TR100SUMMARYRow = ((TB_TR100SUMMARYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SUBTOTAL,
                        DISCOUNT,
                        DISCOUNTAMT};
                rowTB_TR100SUMMARYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_TR100SUMMARYRow);
                return rowTB_TR100SUMMARYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_TR100SUMMARYDataTable cln = ((TB_TR100SUMMARYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_TR100SUMMARYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSUBTOTAL = base.Columns["SUBTOTAL"];
                this.columnDISCOUNT = base.Columns["DISCOUNT"];
                this.columnDISCOUNTAMT = base.Columns["DISCOUNTAMT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSUBTOTAL = new global::System.Data.DataColumn("SUBTOTAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUBTOTAL);
                this.columnDISCOUNT = new global::System.Data.DataColumn("DISCOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISCOUNT);
                this.columnDISCOUNTAMT = new global::System.Data.DataColumn("DISCOUNTAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISCOUNTAMT);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR100SUMMARYRow NewTB_TR100SUMMARYRow() {
                return ((TB_TR100SUMMARYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_TR100SUMMARYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_TR100SUMMARYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_TR100SUMMARYRowChanged != null)) {
                    this.TB_TR100SUMMARYRowChanged(this, new TB_TR100SUMMARYRowChangeEvent(((TB_TR100SUMMARYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_TR100SUMMARYRowChanging != null)) {
                    this.TB_TR100SUMMARYRowChanging(this, new TB_TR100SUMMARYRowChangeEvent(((TB_TR100SUMMARYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_TR100SUMMARYRowDeleted != null)) {
                    this.TB_TR100SUMMARYRowDeleted(this, new TB_TR100SUMMARYRowChangeEvent(((TB_TR100SUMMARYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_TR100SUMMARYRowDeleting != null)) {
                    this.TB_TR100SUMMARYRowDeleting(this, new TB_TR100SUMMARYRowChangeEvent(((TB_TR100SUMMARYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_TR100SUMMARYRow(TB_TR100SUMMARYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TR100OBOBRFX ds = new DS_TR100OBOBRFX();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_TR100SUMMARYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_TR100OBOBRFXRow : global::System.Data.DataRow {
            
            private TB_TR100OBOBRFXDataTable tableTB_TR100OBOBRFX;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TR100OBOBRFXRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_TR100OBOBRFX = ((TB_TR100OBOBRFXDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ASOF {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR100OBOBRFX.ASOFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASOF\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.ASOFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BROK {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR100OBOBRFX.BROKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BROK\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.BROKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BR {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR100OBOBRFX.BRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BR\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.BRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COST {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR100OBOBRFX.COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COST\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PORT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR100OBOBRFX.PORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PORT\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.PORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALNO {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR100OBOBRFX.DEALNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALNO\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.DEALNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODCODE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR100OBOBRFX.PRODCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODCODE\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.PRODCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR100OBOBRFX.DEALDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALDATE\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.DEALDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NEARVDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR100OBOBRFX.NEARVDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NEARVDATE\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.NEARVDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR100OBOBRFX.VDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VDATE\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.VDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PS {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR100OBOBRFX.PSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PS\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.PSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUST {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR100OBOBRFX.CUSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUST\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.CUSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR100OBOBRFX.CCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CCY\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.CCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CCYAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR100OBOBRFX.CCYAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CCYAMT\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.CCYAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CTRCCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR100OBOBRFX.CTRCCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTRCCY\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.CTRCCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTRAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR100OBOBRFX.CTRAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTRAMT\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.CTRAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR100OBOBRFX.AMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNT\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DAY {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR100OBOBRFX.DAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAY\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.DAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FEE {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR100OBOBRFX.FEEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FEE\' in table \'TB_TR100OBOBRFX\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100OBOBRFX.FEEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASOFNull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.ASOFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASOFNull() {
                this[this.tableTB_TR100OBOBRFX.ASOFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBROKNull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.BROKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBROKNull() {
                this[this.tableTB_TR100OBOBRFX.BROKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRNull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.BRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRNull() {
                this[this.tableTB_TR100OBOBRFX.BRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOSTNull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOSTNull() {
                this[this.tableTB_TR100OBOBRFX.COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPORTNull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.PORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPORTNull() {
                this[this.tableTB_TR100OBOBRFX.PORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALNONull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.DEALNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALNONull() {
                this[this.tableTB_TR100OBOBRFX.DEALNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODCODENull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.PRODCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODCODENull() {
                this[this.tableTB_TR100OBOBRFX.PRODCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALDATENull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.DEALDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALDATENull() {
                this[this.tableTB_TR100OBOBRFX.DEALDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNEARVDATENull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.NEARVDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNEARVDATENull() {
                this[this.tableTB_TR100OBOBRFX.NEARVDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVDATENull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.VDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVDATENull() {
                this[this.tableTB_TR100OBOBRFX.VDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPSNull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.PSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPSNull() {
                this[this.tableTB_TR100OBOBRFX.PSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTNull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.CUSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTNull() {
                this[this.tableTB_TR100OBOBRFX.CUSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCCYNull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.CCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCCYNull() {
                this[this.tableTB_TR100OBOBRFX.CCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCCYAMTNull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.CCYAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCCYAMTNull() {
                this[this.tableTB_TR100OBOBRFX.CCYAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTRCCYNull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.CTRCCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTRCCYNull() {
                this[this.tableTB_TR100OBOBRFX.CTRCCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTRAMTNull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.CTRAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTRAMTNull() {
                this[this.tableTB_TR100OBOBRFX.CTRAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAMOUNTNull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.AMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAMOUNTNull() {
                this[this.tableTB_TR100OBOBRFX.AMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDAYNull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.DAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDAYNull() {
                this[this.tableTB_TR100OBOBRFX.DAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEENull() {
                return this.IsNull(this.tableTB_TR100OBOBRFX.FEEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEENull() {
                this[this.tableTB_TR100OBOBRFX.FEEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_TR100SUMMARYRow : global::System.Data.DataRow {
            
            private TB_TR100SUMMARYDataTable tableTB_TR100SUMMARY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TR100SUMMARYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_TR100SUMMARY = ((TB_TR100SUMMARYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUBTOTAL {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR100SUMMARY.SUBTOTALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SUBTOTAL\' in table \'TB_TR100SUMMARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100SUMMARY.SUBTOTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DISCOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR100SUMMARY.DISCOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISCOUNT\' in table \'TB_TR100SUMMARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100SUMMARY.DISCOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DISCOUNTAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR100SUMMARY.DISCOUNTAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISCOUNTAMT\' in table \'TB_TR100SUMMARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR100SUMMARY.DISCOUNTAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUBTOTALNull() {
                return this.IsNull(this.tableTB_TR100SUMMARY.SUBTOTALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUBTOTALNull() {
                this[this.tableTB_TR100SUMMARY.SUBTOTALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISCOUNTNull() {
                return this.IsNull(this.tableTB_TR100SUMMARY.DISCOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISCOUNTNull() {
                this[this.tableTB_TR100SUMMARY.DISCOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISCOUNTAMTNull() {
                return this.IsNull(this.tableTB_TR100SUMMARY.DISCOUNTAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISCOUNTAMTNull() {
                this[this.tableTB_TR100SUMMARY.DISCOUNTAMTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_TR100OBOBRFXRowChangeEvent : global::System.EventArgs {
            
            private TB_TR100OBOBRFXRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR100OBOBRFXRowChangeEvent(TB_TR100OBOBRFXRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR100OBOBRFXRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_TR100SUMMARYRowChangeEvent : global::System.EventArgs {
            
            private TB_TR100SUMMARYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR100SUMMARYRowChangeEvent(TB_TR100SUMMARYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR100SUMMARYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591