//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KKB.Treasury.TreasuryReport.DSD_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_R01IRCFFM")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_R01IRCFFM : global::System.Data.DataSet {
        
        private TB_R01IRCFFMDataTable tableTB_R01IRCFFM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_R01IRCFFM() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_R01IRCFFM(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TB_R01IRCFFM"] != null)) {
                    base.Tables.Add(new TB_R01IRCFFMDataTable(ds.Tables["TB_R01IRCFFM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_R01IRCFFMDataTable TB_R01IRCFFM {
            get {
                return this.tableTB_R01IRCFFM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_R01IRCFFM cln = ((DS_R01IRCFFM)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TB_R01IRCFFM"] != null)) {
                    base.Tables.Add(new TB_R01IRCFFMDataTable(ds.Tables["TB_R01IRCFFM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTB_R01IRCFFM = ((TB_R01IRCFFMDataTable)(base.Tables["TB_R01IRCFFM"]));
            if ((initTable == true)) {
                if ((this.tableTB_R01IRCFFM != null)) {
                    this.tableTB_R01IRCFFM.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_R01IRCFFM";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_R01IRCFFM.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTB_R01IRCFFM = new TB_R01IRCFFMDataTable();
            base.Tables.Add(this.tableTB_R01IRCFFM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_R01IRCFFM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_R01IRCFFM ds = new DS_R01IRCFFM();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TB_R01IRCFFMRowChangeEventHandler(object sender, TB_R01IRCFFMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_R01IRCFFMDataTable : global::System.Data.TypedTableBase<TB_R01IRCFFMRow> {
            
            private global::System.Data.DataColumn columnBRANPRCDATE;
            
            private global::System.Data.DataColumn columnBU;
            
            private global::System.Data.DataColumn columnPORTFOLIO;
            
            private global::System.Data.DataColumn columnPROD;
            
            private global::System.Data.DataColumn columnTYPE;
            
            private global::System.Data.DataColumn columnDEALNO;
            
            private global::System.Data.DataColumn columnCPTY;
            
            private global::System.Data.DataColumn columnLEG;
            
            private global::System.Data.DataColumn columnSCHDSEQ;
            
            private global::System.Data.DataColumn columnEVENT;
            
            private global::System.Data.DataColumn columnRATECODE;
            
            private global::System.Data.DataColumn columnINTRATE;
            
            private global::System.Data.DataColumn columnSPREAD;
            
            private global::System.Data.DataColumn columnVALUEDATE;
            
            private global::System.Data.DataColumn columnPRINCCY;
            
            private global::System.Data.DataColumn columnCASHFLOW;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01IRCFFMDataTable() {
                this.TableName = "TB_R01IRCFFM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_R01IRCFFMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_R01IRCFFMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANPRCDATEColumn {
                get {
                    return this.columnBRANPRCDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BUColumn {
                get {
                    return this.columnBU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PORTFOLIOColumn {
                get {
                    return this.columnPORTFOLIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODColumn {
                get {
                    return this.columnPROD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALNOColumn {
                get {
                    return this.columnDEALNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPTYColumn {
                get {
                    return this.columnCPTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LEGColumn {
                get {
                    return this.columnLEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCHDSEQColumn {
                get {
                    return this.columnSCHDSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EVENTColumn {
                get {
                    return this.columnEVENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RATECODEColumn {
                get {
                    return this.columnRATECODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTRATEColumn {
                get {
                    return this.columnINTRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPREADColumn {
                get {
                    return this.columnSPREAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALUEDATEColumn {
                get {
                    return this.columnVALUEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRINCCYColumn {
                get {
                    return this.columnPRINCCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CASHFLOWColumn {
                get {
                    return this.columnCASHFLOW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01IRCFFMRow this[int index] {
                get {
                    return ((TB_R01IRCFFMRow)(this.Rows[index]));
                }
            }
            
            public event TB_R01IRCFFMRowChangeEventHandler TB_R01IRCFFMRowChanging;
            
            public event TB_R01IRCFFMRowChangeEventHandler TB_R01IRCFFMRowChanged;
            
            public event TB_R01IRCFFMRowChangeEventHandler TB_R01IRCFFMRowDeleting;
            
            public event TB_R01IRCFFMRowChangeEventHandler TB_R01IRCFFMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_R01IRCFFMRow(TB_R01IRCFFMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01IRCFFMRow AddTB_R01IRCFFMRow(
                        string BRANPRCDATE, 
                        string BU, 
                        string PORTFOLIO, 
                        string PROD, 
                        string TYPE, 
                        string DEALNO, 
                        string CPTY, 
                        string LEG, 
                        string SCHDSEQ, 
                        string EVENT, 
                        string RATECODE, 
                        string INTRATE, 
                        string SPREAD, 
                        string VALUEDATE, 
                        string PRINCCY, 
                        string CASHFLOW) {
                TB_R01IRCFFMRow rowTB_R01IRCFFMRow = ((TB_R01IRCFFMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BRANPRCDATE,
                        BU,
                        PORTFOLIO,
                        PROD,
                        TYPE,
                        DEALNO,
                        CPTY,
                        LEG,
                        SCHDSEQ,
                        EVENT,
                        RATECODE,
                        INTRATE,
                        SPREAD,
                        VALUEDATE,
                        PRINCCY,
                        CASHFLOW};
                rowTB_R01IRCFFMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_R01IRCFFMRow);
                return rowTB_R01IRCFFMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_R01IRCFFMDataTable cln = ((TB_R01IRCFFMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_R01IRCFFMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBRANPRCDATE = base.Columns["BRANPRCDATE"];
                this.columnBU = base.Columns["BU"];
                this.columnPORTFOLIO = base.Columns["PORTFOLIO"];
                this.columnPROD = base.Columns["PROD"];
                this.columnTYPE = base.Columns["TYPE"];
                this.columnDEALNO = base.Columns["DEALNO"];
                this.columnCPTY = base.Columns["CPTY"];
                this.columnLEG = base.Columns["LEG"];
                this.columnSCHDSEQ = base.Columns["SCHDSEQ"];
                this.columnEVENT = base.Columns["EVENT"];
                this.columnRATECODE = base.Columns["RATECODE"];
                this.columnINTRATE = base.Columns["INTRATE"];
                this.columnSPREAD = base.Columns["SPREAD"];
                this.columnVALUEDATE = base.Columns["VALUEDATE"];
                this.columnPRINCCY = base.Columns["PRINCCY"];
                this.columnCASHFLOW = base.Columns["CASHFLOW"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBRANPRCDATE = new global::System.Data.DataColumn("BRANPRCDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANPRCDATE);
                this.columnBU = new global::System.Data.DataColumn("BU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBU);
                this.columnPORTFOLIO = new global::System.Data.DataColumn("PORTFOLIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORTFOLIO);
                this.columnPROD = new global::System.Data.DataColumn("PROD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD);
                this.columnTYPE = new global::System.Data.DataColumn("TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE);
                this.columnDEALNO = new global::System.Data.DataColumn("DEALNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALNO);
                this.columnCPTY = new global::System.Data.DataColumn("CPTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPTY);
                this.columnLEG = new global::System.Data.DataColumn("LEG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEG);
                this.columnSCHDSEQ = new global::System.Data.DataColumn("SCHDSEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCHDSEQ);
                this.columnEVENT = new global::System.Data.DataColumn("EVENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEVENT);
                this.columnRATECODE = new global::System.Data.DataColumn("RATECODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATECODE);
                this.columnINTRATE = new global::System.Data.DataColumn("INTRATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTRATE);
                this.columnSPREAD = new global::System.Data.DataColumn("SPREAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPREAD);
                this.columnVALUEDATE = new global::System.Data.DataColumn("VALUEDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUEDATE);
                this.columnPRINCCY = new global::System.Data.DataColumn("PRINCCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRINCCY);
                this.columnCASHFLOW = new global::System.Data.DataColumn("CASHFLOW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASHFLOW);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01IRCFFMRow NewTB_R01IRCFFMRow() {
                return ((TB_R01IRCFFMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_R01IRCFFMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_R01IRCFFMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_R01IRCFFMRowChanged != null)) {
                    this.TB_R01IRCFFMRowChanged(this, new TB_R01IRCFFMRowChangeEvent(((TB_R01IRCFFMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_R01IRCFFMRowChanging != null)) {
                    this.TB_R01IRCFFMRowChanging(this, new TB_R01IRCFFMRowChangeEvent(((TB_R01IRCFFMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_R01IRCFFMRowDeleted != null)) {
                    this.TB_R01IRCFFMRowDeleted(this, new TB_R01IRCFFMRowChangeEvent(((TB_R01IRCFFMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_R01IRCFFMRowDeleting != null)) {
                    this.TB_R01IRCFFMRowDeleting(this, new TB_R01IRCFFMRowChangeEvent(((TB_R01IRCFFMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_R01IRCFFMRow(TB_R01IRCFFMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_R01IRCFFM ds = new DS_R01IRCFFM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_R01IRCFFMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_R01IRCFFMRow : global::System.Data.DataRow {
            
            private TB_R01IRCFFMDataTable tableTB_R01IRCFFM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_R01IRCFFMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_R01IRCFFM = ((TB_R01IRCFFMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRANPRCDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRCFFM.BRANPRCDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BRANPRCDATE\' in table \'TB_R01IRCFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRCFFM.BRANPRCDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BU {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRCFFM.BUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BU\' in table \'TB_R01IRCFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRCFFM.BUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PORTFOLIO {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRCFFM.PORTFOLIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PORTFOLIO\' in table \'TB_R01IRCFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRCFFM.PORTFOLIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROD {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRCFFM.PRODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROD\' in table \'TB_R01IRCFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRCFFM.PRODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRCFFM.TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE\' in table \'TB_R01IRCFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRCFFM.TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALNO {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRCFFM.DEALNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALNO\' in table \'TB_R01IRCFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRCFFM.DEALNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CPTY {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRCFFM.CPTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPTY\' in table \'TB_R01IRCFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRCFFM.CPTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LEG {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRCFFM.LEGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LEG\' in table \'TB_R01IRCFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRCFFM.LEGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SCHDSEQ {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRCFFM.SCHDSEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCHDSEQ\' in table \'TB_R01IRCFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRCFFM.SCHDSEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EVENT {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRCFFM.EVENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EVENT\' in table \'TB_R01IRCFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRCFFM.EVENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RATECODE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRCFFM.RATECODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RATECODE\' in table \'TB_R01IRCFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRCFFM.RATECODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTRATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRCFFM.INTRATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTRATE\' in table \'TB_R01IRCFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRCFFM.INTRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPREAD {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRCFFM.SPREADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPREAD\' in table \'TB_R01IRCFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRCFFM.SPREADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VALUEDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRCFFM.VALUEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALUEDATE\' in table \'TB_R01IRCFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRCFFM.VALUEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRINCCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRCFFM.PRINCCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRINCCY\' in table \'TB_R01IRCFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRCFFM.PRINCCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CASHFLOW {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01IRCFFM.CASHFLOWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CASHFLOW\' in table \'TB_R01IRCFFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01IRCFFM.CASHFLOWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRANPRCDATENull() {
                return this.IsNull(this.tableTB_R01IRCFFM.BRANPRCDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRANPRCDATENull() {
                this[this.tableTB_R01IRCFFM.BRANPRCDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBUNull() {
                return this.IsNull(this.tableTB_R01IRCFFM.BUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBUNull() {
                this[this.tableTB_R01IRCFFM.BUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPORTFOLIONull() {
                return this.IsNull(this.tableTB_R01IRCFFM.PORTFOLIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPORTFOLIONull() {
                this[this.tableTB_R01IRCFFM.PORTFOLIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODNull() {
                return this.IsNull(this.tableTB_R01IRCFFM.PRODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODNull() {
                this[this.tableTB_R01IRCFFM.PRODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPENull() {
                return this.IsNull(this.tableTB_R01IRCFFM.TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPENull() {
                this[this.tableTB_R01IRCFFM.TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALNONull() {
                return this.IsNull(this.tableTB_R01IRCFFM.DEALNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALNONull() {
                this[this.tableTB_R01IRCFFM.DEALNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPTYNull() {
                return this.IsNull(this.tableTB_R01IRCFFM.CPTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPTYNull() {
                this[this.tableTB_R01IRCFFM.CPTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLEGNull() {
                return this.IsNull(this.tableTB_R01IRCFFM.LEGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLEGNull() {
                this[this.tableTB_R01IRCFFM.LEGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSCHDSEQNull() {
                return this.IsNull(this.tableTB_R01IRCFFM.SCHDSEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSCHDSEQNull() {
                this[this.tableTB_R01IRCFFM.SCHDSEQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEVENTNull() {
                return this.IsNull(this.tableTB_R01IRCFFM.EVENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEVENTNull() {
                this[this.tableTB_R01IRCFFM.EVENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRATECODENull() {
                return this.IsNull(this.tableTB_R01IRCFFM.RATECODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRATECODENull() {
                this[this.tableTB_R01IRCFFM.RATECODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTRATENull() {
                return this.IsNull(this.tableTB_R01IRCFFM.INTRATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTRATENull() {
                this[this.tableTB_R01IRCFFM.INTRATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPREADNull() {
                return this.IsNull(this.tableTB_R01IRCFFM.SPREADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPREADNull() {
                this[this.tableTB_R01IRCFFM.SPREADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVALUEDATENull() {
                return this.IsNull(this.tableTB_R01IRCFFM.VALUEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVALUEDATENull() {
                this[this.tableTB_R01IRCFFM.VALUEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRINCCYNull() {
                return this.IsNull(this.tableTB_R01IRCFFM.PRINCCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRINCCYNull() {
                this[this.tableTB_R01IRCFFM.PRINCCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCASHFLOWNull() {
                return this.IsNull(this.tableTB_R01IRCFFM.CASHFLOWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCASHFLOWNull() {
                this[this.tableTB_R01IRCFFM.CASHFLOWColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_R01IRCFFMRowChangeEvent : global::System.EventArgs {
            
            private TB_R01IRCFFMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01IRCFFMRowChangeEvent(TB_R01IRCFFMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01IRCFFMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591