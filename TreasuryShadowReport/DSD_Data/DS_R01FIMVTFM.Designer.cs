//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KKB.Treasury.TreasuryReport.DSD_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_R01FIMVTFM")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_R01FIMVTFM : global::System.Data.DataSet {
        
        private TB_R01FIMVTFMDataTable tableTB_R01FIMVTFM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_R01FIMVTFM() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_R01FIMVTFM(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TB_R01FIMVTFM"] != null)) {
                    base.Tables.Add(new TB_R01FIMVTFMDataTable(ds.Tables["TB_R01FIMVTFM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_R01FIMVTFMDataTable TB_R01FIMVTFM {
            get {
                return this.tableTB_R01FIMVTFM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_R01FIMVTFM cln = ((DS_R01FIMVTFM)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TB_R01FIMVTFM"] != null)) {
                    base.Tables.Add(new TB_R01FIMVTFMDataTable(ds.Tables["TB_R01FIMVTFM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTB_R01FIMVTFM = ((TB_R01FIMVTFMDataTable)(base.Tables["TB_R01FIMVTFM"]));
            if ((initTable == true)) {
                if ((this.tableTB_R01FIMVTFM != null)) {
                    this.tableTB_R01FIMVTFM.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_R01FIMVTFM";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_R01FIMVTFM.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTB_R01FIMVTFM = new TB_R01FIMVTFMDataTable();
            base.Tables.Add(this.tableTB_R01FIMVTFM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_R01FIMVTFM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_R01FIMVTFM ds = new DS_R01FIMVTFM();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TB_R01FIMVTFMRowChangeEventHandler(object sender, TB_R01FIMVTFMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_R01FIMVTFMDataTable : global::System.Data.TypedTableBase<TB_R01FIMVTFMRow> {
            
            private global::System.Data.DataColumn columnBRANPRCDATE;
            
            private global::System.Data.DataColumn columnDEALNO;
            
            private global::System.Data.DataColumn columnDEALDATE;
            
            private global::System.Data.DataColumn columnPORT;
            
            private global::System.Data.DataColumn columnTRADEDATE;
            
            private global::System.Data.DataColumn columnSETTDATE;
            
            private global::System.Data.DataColumn columnACCTNGTYPE;
            
            private global::System.Data.DataColumn columnBUYSELL;
            
            private global::System.Data.DataColumn columnSECNAME;
            
            private global::System.Data.DataColumn columnCOUNTERPARTY;
            
            private global::System.Data.DataColumn columnYIELD;
            
            private global::System.Data.DataColumn columnCOUPON;
            
            private global::System.Data.DataColumn columnUNITS;
            
            private global::System.Data.DataColumn columnFACEAMOUNT;
            
            private global::System.Data.DataColumn columnBS_QTY;
            
            private global::System.Data.DataColumn columnCOST;
            
            private global::System.Data.DataColumn columnPL;
            
            private global::System.Data.DataColumn columnPURCHINT;
            
            private global::System.Data.DataColumn columnWTX;
            
            private global::System.Data.DataColumn columnSETTLEAMT;
            
            private global::System.Data.DataColumn columnDEALSRC;
            
            private global::System.Data.DataColumn columnPORTFOLIO;
            
            private global::System.Data.DataColumn columnPORTDESC;
            
            private global::System.Data.DataColumn columnPS;
            
            private global::System.Data.DataColumn columnSECID;
            
            private global::System.Data.DataColumn columnPRODUCT;
            
            private global::System.Data.DataColumn columnPRODTYPE;
            
            private global::System.Data.DataColumn columnCONDSTART;
            
            private global::System.Data.DataColumn columnCONDEND;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01FIMVTFMDataTable() {
                this.TableName = "TB_R01FIMVTFM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_R01FIMVTFMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_R01FIMVTFMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANPRCDATEColumn {
                get {
                    return this.columnBRANPRCDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALNOColumn {
                get {
                    return this.columnDEALNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALDATEColumn {
                get {
                    return this.columnDEALDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PORTColumn {
                get {
                    return this.columnPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRADEDATEColumn {
                get {
                    return this.columnTRADEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SETTDATEColumn {
                get {
                    return this.columnSETTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACCTNGTYPEColumn {
                get {
                    return this.columnACCTNGTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BUYSELLColumn {
                get {
                    return this.columnBUYSELL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SECNAMEColumn {
                get {
                    return this.columnSECNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COUNTERPARTYColumn {
                get {
                    return this.columnCOUNTERPARTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YIELDColumn {
                get {
                    return this.columnYIELD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COUPONColumn {
                get {
                    return this.columnCOUPON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNITSColumn {
                get {
                    return this.columnUNITS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FACEAMOUNTColumn {
                get {
                    return this.columnFACEAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BS_QTYColumn {
                get {
                    return this.columnBS_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COSTColumn {
                get {
                    return this.columnCOST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PLColumn {
                get {
                    return this.columnPL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PURCHINTColumn {
                get {
                    return this.columnPURCHINT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WTXColumn {
                get {
                    return this.columnWTX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SETTLEAMTColumn {
                get {
                    return this.columnSETTLEAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALSRCColumn {
                get {
                    return this.columnDEALSRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PORTFOLIOColumn {
                get {
                    return this.columnPORTFOLIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PORTDESCColumn {
                get {
                    return this.columnPORTDESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PSColumn {
                get {
                    return this.columnPS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SECIDColumn {
                get {
                    return this.columnSECID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCTColumn {
                get {
                    return this.columnPRODUCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODTYPEColumn {
                get {
                    return this.columnPRODTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONDSTARTColumn {
                get {
                    return this.columnCONDSTART;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONDENDColumn {
                get {
                    return this.columnCONDEND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01FIMVTFMRow this[int index] {
                get {
                    return ((TB_R01FIMVTFMRow)(this.Rows[index]));
                }
            }
            
            public event TB_R01FIMVTFMRowChangeEventHandler TB_R01FIMVTFMRowChanging;
            
            public event TB_R01FIMVTFMRowChangeEventHandler TB_R01FIMVTFMRowChanged;
            
            public event TB_R01FIMVTFMRowChangeEventHandler TB_R01FIMVTFMRowDeleting;
            
            public event TB_R01FIMVTFMRowChangeEventHandler TB_R01FIMVTFMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_R01FIMVTFMRow(TB_R01FIMVTFMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01FIMVTFMRow AddTB_R01FIMVTFMRow(
                        string BRANPRCDATE, 
                        string DEALNO, 
                        string DEALDATE, 
                        string PORT, 
                        string TRADEDATE, 
                        string SETTDATE, 
                        string ACCTNGTYPE, 
                        string BUYSELL, 
                        string SECNAME, 
                        string COUNTERPARTY, 
                        string YIELD, 
                        string COUPON, 
                        string UNITS, 
                        string FACEAMOUNT, 
                        string BS_QTY, 
                        string COST, 
                        string PL, 
                        string PURCHINT, 
                        string WTX, 
                        string SETTLEAMT, 
                        string DEALSRC, 
                        string PORTFOLIO, 
                        string PORTDESC, 
                        string PS, 
                        string SECID, 
                        string PRODUCT, 
                        string PRODTYPE, 
                        string CONDSTART, 
                        string CONDEND) {
                TB_R01FIMVTFMRow rowTB_R01FIMVTFMRow = ((TB_R01FIMVTFMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BRANPRCDATE,
                        DEALNO,
                        DEALDATE,
                        PORT,
                        TRADEDATE,
                        SETTDATE,
                        ACCTNGTYPE,
                        BUYSELL,
                        SECNAME,
                        COUNTERPARTY,
                        YIELD,
                        COUPON,
                        UNITS,
                        FACEAMOUNT,
                        BS_QTY,
                        COST,
                        PL,
                        PURCHINT,
                        WTX,
                        SETTLEAMT,
                        DEALSRC,
                        PORTFOLIO,
                        PORTDESC,
                        PS,
                        SECID,
                        PRODUCT,
                        PRODTYPE,
                        CONDSTART,
                        CONDEND};
                rowTB_R01FIMVTFMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_R01FIMVTFMRow);
                return rowTB_R01FIMVTFMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_R01FIMVTFMDataTable cln = ((TB_R01FIMVTFMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_R01FIMVTFMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBRANPRCDATE = base.Columns["BRANPRCDATE"];
                this.columnDEALNO = base.Columns["DEALNO"];
                this.columnDEALDATE = base.Columns["DEALDATE"];
                this.columnPORT = base.Columns["PORT"];
                this.columnTRADEDATE = base.Columns["TRADEDATE"];
                this.columnSETTDATE = base.Columns["SETTDATE"];
                this.columnACCTNGTYPE = base.Columns["ACCTNGTYPE"];
                this.columnBUYSELL = base.Columns["BUYSELL"];
                this.columnSECNAME = base.Columns["SECNAME"];
                this.columnCOUNTERPARTY = base.Columns["COUNTERPARTY"];
                this.columnYIELD = base.Columns["YIELD"];
                this.columnCOUPON = base.Columns["COUPON"];
                this.columnUNITS = base.Columns["UNITS"];
                this.columnFACEAMOUNT = base.Columns["FACEAMOUNT"];
                this.columnBS_QTY = base.Columns["BS_QTY"];
                this.columnCOST = base.Columns["COST"];
                this.columnPL = base.Columns["PL"];
                this.columnPURCHINT = base.Columns["PURCHINT"];
                this.columnWTX = base.Columns["WTX"];
                this.columnSETTLEAMT = base.Columns["SETTLEAMT"];
                this.columnDEALSRC = base.Columns["DEALSRC"];
                this.columnPORTFOLIO = base.Columns["PORTFOLIO"];
                this.columnPORTDESC = base.Columns["PORTDESC"];
                this.columnPS = base.Columns["PS"];
                this.columnSECID = base.Columns["SECID"];
                this.columnPRODUCT = base.Columns["PRODUCT"];
                this.columnPRODTYPE = base.Columns["PRODTYPE"];
                this.columnCONDSTART = base.Columns["CONDSTART"];
                this.columnCONDEND = base.Columns["CONDEND"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBRANPRCDATE = new global::System.Data.DataColumn("BRANPRCDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANPRCDATE);
                this.columnDEALNO = new global::System.Data.DataColumn("DEALNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALNO);
                this.columnDEALDATE = new global::System.Data.DataColumn("DEALDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALDATE);
                this.columnPORT = new global::System.Data.DataColumn("PORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORT);
                this.columnTRADEDATE = new global::System.Data.DataColumn("TRADEDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRADEDATE);
                this.columnSETTDATE = new global::System.Data.DataColumn("SETTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTDATE);
                this.columnACCTNGTYPE = new global::System.Data.DataColumn("ACCTNGTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCTNGTYPE);
                this.columnBUYSELL = new global::System.Data.DataColumn("BUYSELL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUYSELL);
                this.columnSECNAME = new global::System.Data.DataColumn("SECNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECNAME);
                this.columnCOUNTERPARTY = new global::System.Data.DataColumn("COUNTERPARTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNTERPARTY);
                this.columnYIELD = new global::System.Data.DataColumn("YIELD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYIELD);
                this.columnCOUPON = new global::System.Data.DataColumn("COUPON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUPON);
                this.columnUNITS = new global::System.Data.DataColumn("UNITS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNITS);
                this.columnFACEAMOUNT = new global::System.Data.DataColumn("FACEAMOUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFACEAMOUNT);
                this.columnBS_QTY = new global::System.Data.DataColumn("BS_QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBS_QTY);
                this.columnCOST = new global::System.Data.DataColumn("COST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST);
                this.columnPL = new global::System.Data.DataColumn("PL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPL);
                this.columnPURCHINT = new global::System.Data.DataColumn("PURCHINT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPURCHINT);
                this.columnWTX = new global::System.Data.DataColumn("WTX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWTX);
                this.columnSETTLEAMT = new global::System.Data.DataColumn("SETTLEAMT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTLEAMT);
                this.columnDEALSRC = new global::System.Data.DataColumn("DEALSRC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALSRC);
                this.columnPORTFOLIO = new global::System.Data.DataColumn("PORTFOLIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORTFOLIO);
                this.columnPORTDESC = new global::System.Data.DataColumn("PORTDESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORTDESC);
                this.columnPS = new global::System.Data.DataColumn("PS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPS);
                this.columnSECID = new global::System.Data.DataColumn("SECID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECID);
                this.columnPRODUCT = new global::System.Data.DataColumn("PRODUCT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT);
                this.columnPRODTYPE = new global::System.Data.DataColumn("PRODTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODTYPE);
                this.columnCONDSTART = new global::System.Data.DataColumn("CONDSTART", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONDSTART);
                this.columnCONDEND = new global::System.Data.DataColumn("CONDEND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONDEND);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01FIMVTFMRow NewTB_R01FIMVTFMRow() {
                return ((TB_R01FIMVTFMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_R01FIMVTFMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_R01FIMVTFMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_R01FIMVTFMRowChanged != null)) {
                    this.TB_R01FIMVTFMRowChanged(this, new TB_R01FIMVTFMRowChangeEvent(((TB_R01FIMVTFMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_R01FIMVTFMRowChanging != null)) {
                    this.TB_R01FIMVTFMRowChanging(this, new TB_R01FIMVTFMRowChangeEvent(((TB_R01FIMVTFMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_R01FIMVTFMRowDeleted != null)) {
                    this.TB_R01FIMVTFMRowDeleted(this, new TB_R01FIMVTFMRowChangeEvent(((TB_R01FIMVTFMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_R01FIMVTFMRowDeleting != null)) {
                    this.TB_R01FIMVTFMRowDeleting(this, new TB_R01FIMVTFMRowChangeEvent(((TB_R01FIMVTFMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_R01FIMVTFMRow(TB_R01FIMVTFMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_R01FIMVTFM ds = new DS_R01FIMVTFM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_R01FIMVTFMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_R01FIMVTFMRow : global::System.Data.DataRow {
            
            private TB_R01FIMVTFMDataTable tableTB_R01FIMVTFM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_R01FIMVTFMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_R01FIMVTFM = ((TB_R01FIMVTFMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRANPRCDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.BRANPRCDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BRANPRCDATE\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.BRANPRCDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALNO {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.DEALNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALNO\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.DEALNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.DEALDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALDATE\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.DEALDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PORT {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.PORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PORT\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.PORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRADEDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.TRADEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRADEDATE\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.TRADEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.SETTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SETTDATE\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.SETTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCTNGTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.ACCTNGTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCTNGTYPE\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.ACCTNGTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BUYSELL {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.BUYSELLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BUYSELL\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.BUYSELLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SECNAME {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.SECNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SECNAME\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.SECNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COUNTERPARTY {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.COUNTERPARTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COUNTERPARTY\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.COUNTERPARTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YIELD {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.YIELDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YIELD\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.YIELDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COUPON {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.COUPONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COUPON\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.COUPONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNITS {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.UNITSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNITS\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.UNITSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FACEAMOUNT {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.FACEAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FACEAMOUNT\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.FACEAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BS_QTY {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.BS_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BS_QTY\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.BS_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COST {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COST\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PL {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.PLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PL\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.PLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PURCHINT {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.PURCHINTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PURCHINT\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.PURCHINTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WTX {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.WTXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WTX\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.WTXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTLEAMT {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.SETTLEAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SETTLEAMT\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.SETTLEAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALSRC {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.DEALSRCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALSRC\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.DEALSRCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PORTFOLIO {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.PORTFOLIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PORTFOLIO\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.PORTFOLIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PORTDESC {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.PORTDESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PORTDESC\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.PORTDESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PS {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.PSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PS\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.PSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SECID {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.SECIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SECID\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.SECIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.PRODUCTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.PRODUCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.PRODTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODTYPE\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.PRODTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONDSTART {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.CONDSTARTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONDSTART\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.CONDSTARTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONDEND {
                get {
                    try {
                        return ((string)(this[this.tableTB_R01FIMVTFM.CONDENDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONDEND\' in table \'TB_R01FIMVTFM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_R01FIMVTFM.CONDENDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRANPRCDATENull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.BRANPRCDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRANPRCDATENull() {
                this[this.tableTB_R01FIMVTFM.BRANPRCDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALNONull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.DEALNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALNONull() {
                this[this.tableTB_R01FIMVTFM.DEALNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALDATENull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.DEALDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALDATENull() {
                this[this.tableTB_R01FIMVTFM.DEALDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPORTNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.PORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPORTNull() {
                this[this.tableTB_R01FIMVTFM.PORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRADEDATENull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.TRADEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRADEDATENull() {
                this[this.tableTB_R01FIMVTFM.TRADEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETTDATENull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.SETTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETTDATENull() {
                this[this.tableTB_R01FIMVTFM.SETTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCTNGTYPENull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.ACCTNGTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCTNGTYPENull() {
                this[this.tableTB_R01FIMVTFM.ACCTNGTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBUYSELLNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.BUYSELLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBUYSELLNull() {
                this[this.tableTB_R01FIMVTFM.BUYSELLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSECNAMENull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.SECNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSECNAMENull() {
                this[this.tableTB_R01FIMVTFM.SECNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOUNTERPARTYNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.COUNTERPARTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOUNTERPARTYNull() {
                this[this.tableTB_R01FIMVTFM.COUNTERPARTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYIELDNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.YIELDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYIELDNull() {
                this[this.tableTB_R01FIMVTFM.YIELDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOUPONNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.COUPONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOUPONNull() {
                this[this.tableTB_R01FIMVTFM.COUPONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNITSNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.UNITSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNITSNull() {
                this[this.tableTB_R01FIMVTFM.UNITSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFACEAMOUNTNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.FACEAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFACEAMOUNTNull() {
                this[this.tableTB_R01FIMVTFM.FACEAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBS_QTYNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.BS_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBS_QTYNull() {
                this[this.tableTB_R01FIMVTFM.BS_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOSTNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOSTNull() {
                this[this.tableTB_R01FIMVTFM.COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPLNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.PLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPLNull() {
                this[this.tableTB_R01FIMVTFM.PLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPURCHINTNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.PURCHINTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPURCHINTNull() {
                this[this.tableTB_R01FIMVTFM.PURCHINTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWTXNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.WTXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWTXNull() {
                this[this.tableTB_R01FIMVTFM.WTXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETTLEAMTNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.SETTLEAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETTLEAMTNull() {
                this[this.tableTB_R01FIMVTFM.SETTLEAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALSRCNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.DEALSRCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALSRCNull() {
                this[this.tableTB_R01FIMVTFM.DEALSRCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPORTFOLIONull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.PORTFOLIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPORTFOLIONull() {
                this[this.tableTB_R01FIMVTFM.PORTFOLIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPORTDESCNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.PORTDESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPORTDESCNull() {
                this[this.tableTB_R01FIMVTFM.PORTDESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPSNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.PSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPSNull() {
                this[this.tableTB_R01FIMVTFM.PSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSECIDNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.SECIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSECIDNull() {
                this[this.tableTB_R01FIMVTFM.SECIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCTNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.PRODUCTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCTNull() {
                this[this.tableTB_R01FIMVTFM.PRODUCTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODTYPENull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.PRODTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODTYPENull() {
                this[this.tableTB_R01FIMVTFM.PRODTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONDSTARTNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.CONDSTARTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONDSTARTNull() {
                this[this.tableTB_R01FIMVTFM.CONDSTARTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONDENDNull() {
                return this.IsNull(this.tableTB_R01FIMVTFM.CONDENDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONDENDNull() {
                this[this.tableTB_R01FIMVTFM.CONDENDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_R01FIMVTFMRowChangeEvent : global::System.EventArgs {
            
            private TB_R01FIMVTFMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01FIMVTFMRowChangeEvent(TB_R01FIMVTFMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_R01FIMVTFMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591