//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KKB.Treasury.TreasuryReport.DSD_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_TR139PAYSSW")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_TR139PAYSSW : global::System.Data.DataSet {
        
        private TB_TR139PAYSSWDataTable tableTB_TR139PAYSSW;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_TR139PAYSSW() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_TR139PAYSSW(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TB_TR139PAYSSW"] != null)) {
                    base.Tables.Add(new TB_TR139PAYSSWDataTable(ds.Tables["TB_TR139PAYSSW"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_TR139PAYSSWDataTable TB_TR139PAYSSW {
            get {
                return this.tableTB_TR139PAYSSW;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_TR139PAYSSW cln = ((DS_TR139PAYSSW)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TB_TR139PAYSSW"] != null)) {
                    base.Tables.Add(new TB_TR139PAYSSWDataTable(ds.Tables["TB_TR139PAYSSW"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTB_TR139PAYSSW = ((TB_TR139PAYSSWDataTable)(base.Tables["TB_TR139PAYSSW"]));
            if ((initTable == true)) {
                if ((this.tableTB_TR139PAYSSW != null)) {
                    this.tableTB_TR139PAYSSW.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_TR139PAYSSW";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_TR139PAYSSW.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTB_TR139PAYSSW = new TB_TR139PAYSSWDataTable();
            base.Tables.Add(this.tableTB_TR139PAYSSW);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_TR139PAYSSW() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_TR139PAYSSW ds = new DS_TR139PAYSSW();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TB_TR139PAYSSWRowChangeEventHandler(object sender, TB_TR139PAYSSWRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_TR139PAYSSWDataTable : global::System.Data.TypedTableBase<TB_TR139PAYSSWRow> {
            
            private global::System.Data.DataColumn columnBR;
            
            private global::System.Data.DataColumn columnBRANPRCDATE;
            
            private global::System.Data.DataColumn columnPRODREPORT;
            
            private global::System.Data.DataColumn columnCOST;
            
            private global::System.Data.DataColumn columnDEALNO;
            
            private global::System.Data.DataColumn columnPRODUCT;
            
            private global::System.Data.DataColumn columnPRODTYPE;
            
            private global::System.Data.DataColumn columnCMNE;
            
            private global::System.Data.DataColumn columnDEALDATE;
            
            private global::System.Data.DataColumn columnVDATE;
            
            private global::System.Data.DataColumn columnMDATE;
            
            private global::System.Data.DataColumn columnIPAYDATE;
            
            private global::System.Data.DataColumn columnPAYMENTTYPE;
            
            private global::System.Data.DataColumn columnCCY;
            
            private global::System.Data.DataColumn columnPAYMENTAMT;
            
            private global::System.Data.DataColumn columnNETDEALNO;
            
            private global::System.Data.DataColumn columnNETCCY;
            
            private global::System.Data.DataColumn columnNETAMOUNT;
            
            private global::System.Data.DataColumn columnCOMPLETED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR139PAYSSWDataTable() {
                this.TableName = "TB_TR139PAYSSW";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TR139PAYSSWDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_TR139PAYSSWDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRColumn {
                get {
                    return this.columnBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANPRCDATEColumn {
                get {
                    return this.columnBRANPRCDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODREPORTColumn {
                get {
                    return this.columnPRODREPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COSTColumn {
                get {
                    return this.columnCOST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALNOColumn {
                get {
                    return this.columnDEALNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCTColumn {
                get {
                    return this.columnPRODUCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODTYPEColumn {
                get {
                    return this.columnPRODTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CMNEColumn {
                get {
                    return this.columnCMNE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALDATEColumn {
                get {
                    return this.columnDEALDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VDATEColumn {
                get {
                    return this.columnVDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDATEColumn {
                get {
                    return this.columnMDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IPAYDATEColumn {
                get {
                    return this.columnIPAYDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAYMENTTYPEColumn {
                get {
                    return this.columnPAYMENTTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CCYColumn {
                get {
                    return this.columnCCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAYMENTAMTColumn {
                get {
                    return this.columnPAYMENTAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NETDEALNOColumn {
                get {
                    return this.columnNETDEALNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NETCCYColumn {
                get {
                    return this.columnNETCCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NETAMOUNTColumn {
                get {
                    return this.columnNETAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPLETEDColumn {
                get {
                    return this.columnCOMPLETED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR139PAYSSWRow this[int index] {
                get {
                    return ((TB_TR139PAYSSWRow)(this.Rows[index]));
                }
            }
            
            public event TB_TR139PAYSSWRowChangeEventHandler TB_TR139PAYSSWRowChanging;
            
            public event TB_TR139PAYSSWRowChangeEventHandler TB_TR139PAYSSWRowChanged;
            
            public event TB_TR139PAYSSWRowChangeEventHandler TB_TR139PAYSSWRowDeleting;
            
            public event TB_TR139PAYSSWRowChangeEventHandler TB_TR139PAYSSWRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_TR139PAYSSWRow(TB_TR139PAYSSWRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR139PAYSSWRow AddTB_TR139PAYSSWRow(
                        string BR, 
                        string BRANPRCDATE, 
                        string PRODREPORT, 
                        string COST, 
                        string DEALNO, 
                        string PRODUCT, 
                        string PRODTYPE, 
                        string CMNE, 
                        string DEALDATE, 
                        string VDATE, 
                        string MDATE, 
                        string IPAYDATE, 
                        string PAYMENTTYPE, 
                        string CCY, 
                        decimal PAYMENTAMT, 
                        string NETDEALNO, 
                        string NETCCY, 
                        decimal NETAMOUNT, 
                        string COMPLETED) {
                TB_TR139PAYSSWRow rowTB_TR139PAYSSWRow = ((TB_TR139PAYSSWRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BR,
                        BRANPRCDATE,
                        PRODREPORT,
                        COST,
                        DEALNO,
                        PRODUCT,
                        PRODTYPE,
                        CMNE,
                        DEALDATE,
                        VDATE,
                        MDATE,
                        IPAYDATE,
                        PAYMENTTYPE,
                        CCY,
                        PAYMENTAMT,
                        NETDEALNO,
                        NETCCY,
                        NETAMOUNT,
                        COMPLETED};
                rowTB_TR139PAYSSWRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_TR139PAYSSWRow);
                return rowTB_TR139PAYSSWRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_TR139PAYSSWDataTable cln = ((TB_TR139PAYSSWDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_TR139PAYSSWDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBR = base.Columns["BR"];
                this.columnBRANPRCDATE = base.Columns["BRANPRCDATE"];
                this.columnPRODREPORT = base.Columns["PRODREPORT"];
                this.columnCOST = base.Columns["COST"];
                this.columnDEALNO = base.Columns["DEALNO"];
                this.columnPRODUCT = base.Columns["PRODUCT"];
                this.columnPRODTYPE = base.Columns["PRODTYPE"];
                this.columnCMNE = base.Columns["CMNE"];
                this.columnDEALDATE = base.Columns["DEALDATE"];
                this.columnVDATE = base.Columns["VDATE"];
                this.columnMDATE = base.Columns["MDATE"];
                this.columnIPAYDATE = base.Columns["IPAYDATE"];
                this.columnPAYMENTTYPE = base.Columns["PAYMENTTYPE"];
                this.columnCCY = base.Columns["CCY"];
                this.columnPAYMENTAMT = base.Columns["PAYMENTAMT"];
                this.columnNETDEALNO = base.Columns["NETDEALNO"];
                this.columnNETCCY = base.Columns["NETCCY"];
                this.columnNETAMOUNT = base.Columns["NETAMOUNT"];
                this.columnCOMPLETED = base.Columns["COMPLETED"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBR = new global::System.Data.DataColumn("BR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBR);
                this.columnBRANPRCDATE = new global::System.Data.DataColumn("BRANPRCDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANPRCDATE);
                this.columnPRODREPORT = new global::System.Data.DataColumn("PRODREPORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODREPORT);
                this.columnCOST = new global::System.Data.DataColumn("COST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST);
                this.columnDEALNO = new global::System.Data.DataColumn("DEALNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALNO);
                this.columnPRODUCT = new global::System.Data.DataColumn("PRODUCT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT);
                this.columnPRODTYPE = new global::System.Data.DataColumn("PRODTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODTYPE);
                this.columnCMNE = new global::System.Data.DataColumn("CMNE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMNE);
                this.columnDEALDATE = new global::System.Data.DataColumn("DEALDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALDATE);
                this.columnVDATE = new global::System.Data.DataColumn("VDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVDATE);
                this.columnMDATE = new global::System.Data.DataColumn("MDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDATE);
                this.columnIPAYDATE = new global::System.Data.DataColumn("IPAYDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIPAYDATE);
                this.columnPAYMENTTYPE = new global::System.Data.DataColumn("PAYMENTTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYMENTTYPE);
                this.columnCCY = new global::System.Data.DataColumn("CCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCY);
                this.columnPAYMENTAMT = new global::System.Data.DataColumn("PAYMENTAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYMENTAMT);
                this.columnNETDEALNO = new global::System.Data.DataColumn("NETDEALNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETDEALNO);
                this.columnNETCCY = new global::System.Data.DataColumn("NETCCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETCCY);
                this.columnNETAMOUNT = new global::System.Data.DataColumn("NETAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETAMOUNT);
                this.columnCOMPLETED = new global::System.Data.DataColumn("COMPLETED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPLETED);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR139PAYSSWRow NewTB_TR139PAYSSWRow() {
                return ((TB_TR139PAYSSWRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_TR139PAYSSWRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_TR139PAYSSWRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_TR139PAYSSWRowChanged != null)) {
                    this.TB_TR139PAYSSWRowChanged(this, new TB_TR139PAYSSWRowChangeEvent(((TB_TR139PAYSSWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_TR139PAYSSWRowChanging != null)) {
                    this.TB_TR139PAYSSWRowChanging(this, new TB_TR139PAYSSWRowChangeEvent(((TB_TR139PAYSSWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_TR139PAYSSWRowDeleted != null)) {
                    this.TB_TR139PAYSSWRowDeleted(this, new TB_TR139PAYSSWRowChangeEvent(((TB_TR139PAYSSWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_TR139PAYSSWRowDeleting != null)) {
                    this.TB_TR139PAYSSWRowDeleting(this, new TB_TR139PAYSSWRowChangeEvent(((TB_TR139PAYSSWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_TR139PAYSSWRow(TB_TR139PAYSSWRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TR139PAYSSW ds = new DS_TR139PAYSSW();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_TR139PAYSSWDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_TR139PAYSSWRow : global::System.Data.DataRow {
            
            private TB_TR139PAYSSWDataTable tableTB_TR139PAYSSW;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TR139PAYSSWRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_TR139PAYSSW = ((TB_TR139PAYSSWDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BR {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.BRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BR\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.BRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRANPRCDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.BRANPRCDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BRANPRCDATE\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.BRANPRCDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODREPORT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.PRODREPORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODREPORT\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.PRODREPORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COST {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COST\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALNO {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.DEALNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALNO\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.DEALNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.PRODUCTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.PRODUCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.PRODTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODTYPE\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.PRODTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CMNE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.CMNEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMNE\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.CMNEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.DEALDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALDATE\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.DEALDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.VDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VDATE\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.VDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.MDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDATE\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.MDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IPAYDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.IPAYDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IPAYDATE\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.IPAYDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAYMENTTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.PAYMENTTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAYMENTTYPE\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.PAYMENTTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.CCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CCY\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.CCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PAYMENTAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR139PAYSSW.PAYMENTAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAYMENTAMT\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.PAYMENTAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NETDEALNO {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.NETDEALNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NETDEALNO\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.NETDEALNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NETCCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.NETCCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NETCCY\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.NETCCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NETAMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR139PAYSSW.NETAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NETAMOUNT\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.NETAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPLETED {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSSW.COMPLETEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPLETED\' in table \'TB_TR139PAYSSW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSSW.COMPLETEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRNull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.BRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRNull() {
                this[this.tableTB_TR139PAYSSW.BRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRANPRCDATENull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.BRANPRCDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRANPRCDATENull() {
                this[this.tableTB_TR139PAYSSW.BRANPRCDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODREPORTNull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.PRODREPORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODREPORTNull() {
                this[this.tableTB_TR139PAYSSW.PRODREPORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOSTNull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOSTNull() {
                this[this.tableTB_TR139PAYSSW.COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALNONull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.DEALNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALNONull() {
                this[this.tableTB_TR139PAYSSW.DEALNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCTNull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.PRODUCTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCTNull() {
                this[this.tableTB_TR139PAYSSW.PRODUCTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODTYPENull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.PRODTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODTYPENull() {
                this[this.tableTB_TR139PAYSSW.PRODTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMNENull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.CMNEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMNENull() {
                this[this.tableTB_TR139PAYSSW.CMNEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALDATENull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.DEALDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALDATENull() {
                this[this.tableTB_TR139PAYSSW.DEALDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVDATENull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.VDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVDATENull() {
                this[this.tableTB_TR139PAYSSW.VDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDATENull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.MDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDATENull() {
                this[this.tableTB_TR139PAYSSW.MDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIPAYDATENull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.IPAYDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIPAYDATENull() {
                this[this.tableTB_TR139PAYSSW.IPAYDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYMENTTYPENull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.PAYMENTTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYMENTTYPENull() {
                this[this.tableTB_TR139PAYSSW.PAYMENTTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCCYNull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.CCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCCYNull() {
                this[this.tableTB_TR139PAYSSW.CCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYMENTAMTNull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.PAYMENTAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYMENTAMTNull() {
                this[this.tableTB_TR139PAYSSW.PAYMENTAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNETDEALNONull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.NETDEALNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNETDEALNONull() {
                this[this.tableTB_TR139PAYSSW.NETDEALNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNETCCYNull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.NETCCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNETCCYNull() {
                this[this.tableTB_TR139PAYSSW.NETCCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNETAMOUNTNull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.NETAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNETAMOUNTNull() {
                this[this.tableTB_TR139PAYSSW.NETAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPLETEDNull() {
                return this.IsNull(this.tableTB_TR139PAYSSW.COMPLETEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPLETEDNull() {
                this[this.tableTB_TR139PAYSSW.COMPLETEDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_TR139PAYSSWRowChangeEvent : global::System.EventArgs {
            
            private TB_TR139PAYSSWRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR139PAYSSWRowChangeEvent(TB_TR139PAYSSWRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR139PAYSSWRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591