//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KKB.Treasury.TreasuryReport.DSD_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_TR139PAYSFI")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_TR139PAYSFI : global::System.Data.DataSet {
        
        private TB_TR139PAYSFIDataTable tableTB_TR139PAYSFI;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_TR139PAYSFI() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_TR139PAYSFI(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TB_TR139PAYSFI"] != null)) {
                    base.Tables.Add(new TB_TR139PAYSFIDataTable(ds.Tables["TB_TR139PAYSFI"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_TR139PAYSFIDataTable TB_TR139PAYSFI {
            get {
                return this.tableTB_TR139PAYSFI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_TR139PAYSFI cln = ((DS_TR139PAYSFI)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TB_TR139PAYSFI"] != null)) {
                    base.Tables.Add(new TB_TR139PAYSFIDataTable(ds.Tables["TB_TR139PAYSFI"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTB_TR139PAYSFI = ((TB_TR139PAYSFIDataTable)(base.Tables["TB_TR139PAYSFI"]));
            if ((initTable == true)) {
                if ((this.tableTB_TR139PAYSFI != null)) {
                    this.tableTB_TR139PAYSFI.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_TR139PAYSFI";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_TR139PAYSFI.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTB_TR139PAYSFI = new TB_TR139PAYSFIDataTable();
            base.Tables.Add(this.tableTB_TR139PAYSFI);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_TR139PAYSFI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_TR139PAYSFI ds = new DS_TR139PAYSFI();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TB_TR139PAYSFIRowChangeEventHandler(object sender, TB_TR139PAYSFIRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_TR139PAYSFIDataTable : global::System.Data.TypedTableBase<TB_TR139PAYSFIRow> {
            
            private global::System.Data.DataColumn columnBR;
            
            private global::System.Data.DataColumn columnBRANPRCDATE;
            
            private global::System.Data.DataColumn columnPRODREPORT;
            
            private global::System.Data.DataColumn columnCONDITION;
            
            private global::System.Data.DataColumn columnCOST;
            
            private global::System.Data.DataColumn columnDEALNO;
            
            private global::System.Data.DataColumn columnDEALDATE;
            
            private global::System.Data.DataColumn columnPORT;
            
            private global::System.Data.DataColumn columnSETTDATE;
            
            private global::System.Data.DataColumn columnPS;
            
            private global::System.Data.DataColumn columnRD;
            
            private global::System.Data.DataColumn columnSECID;
            
            private global::System.Data.DataColumn columnCMNE;
            
            private global::System.Data.DataColumn columnCUSTODIAN;
            
            private global::System.Data.DataColumn columnBROK;
            
            private global::System.Data.DataColumn columnSEGREGATEACCT;
            
            private global::System.Data.DataColumn columnQTY;
            
            private global::System.Data.DataColumn columnYIELD_8;
            
            private global::System.Data.DataColumn columnCCY;
            
            private global::System.Data.DataColumn columnFACEAMT;
            
            private global::System.Data.DataColumn columnSETTAMT;
            
            private global::System.Data.DataColumn columnTYPEOFPAYMENT;
            
            private global::System.Data.DataColumn columnPTI;
            
            private global::System.Data.DataColumn columnTRADER;
            
            private global::System.Data.DataColumn columnCOMPLETED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR139PAYSFIDataTable() {
                this.TableName = "TB_TR139PAYSFI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TR139PAYSFIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_TR139PAYSFIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRColumn {
                get {
                    return this.columnBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANPRCDATEColumn {
                get {
                    return this.columnBRANPRCDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODREPORTColumn {
                get {
                    return this.columnPRODREPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONDITIONColumn {
                get {
                    return this.columnCONDITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COSTColumn {
                get {
                    return this.columnCOST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALNOColumn {
                get {
                    return this.columnDEALNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEALDATEColumn {
                get {
                    return this.columnDEALDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PORTColumn {
                get {
                    return this.columnPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SETTDATEColumn {
                get {
                    return this.columnSETTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PSColumn {
                get {
                    return this.columnPS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RDColumn {
                get {
                    return this.columnRD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SECIDColumn {
                get {
                    return this.columnSECID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CMNEColumn {
                get {
                    return this.columnCMNE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTODIANColumn {
                get {
                    return this.columnCUSTODIAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BROKColumn {
                get {
                    return this.columnBROK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEGREGATEACCTColumn {
                get {
                    return this.columnSEGREGATEACCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTYColumn {
                get {
                    return this.columnQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YIELD_8Column {
                get {
                    return this.columnYIELD_8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CCYColumn {
                get {
                    return this.columnCCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FACEAMTColumn {
                get {
                    return this.columnFACEAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SETTAMTColumn {
                get {
                    return this.columnSETTAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPEOFPAYMENTColumn {
                get {
                    return this.columnTYPEOFPAYMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PTIColumn {
                get {
                    return this.columnPTI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRADERColumn {
                get {
                    return this.columnTRADER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPLETEDColumn {
                get {
                    return this.columnCOMPLETED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR139PAYSFIRow this[int index] {
                get {
                    return ((TB_TR139PAYSFIRow)(this.Rows[index]));
                }
            }
            
            public event TB_TR139PAYSFIRowChangeEventHandler TB_TR139PAYSFIRowChanging;
            
            public event TB_TR139PAYSFIRowChangeEventHandler TB_TR139PAYSFIRowChanged;
            
            public event TB_TR139PAYSFIRowChangeEventHandler TB_TR139PAYSFIRowDeleting;
            
            public event TB_TR139PAYSFIRowChangeEventHandler TB_TR139PAYSFIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_TR139PAYSFIRow(TB_TR139PAYSFIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR139PAYSFIRow AddTB_TR139PAYSFIRow(
                        string BR, 
                        string BRANPRCDATE, 
                        string PRODREPORT, 
                        string CONDITION, 
                        string COST, 
                        string DEALNO, 
                        string DEALDATE, 
                        string PORT, 
                        string SETTDATE, 
                        string PS, 
                        string RD, 
                        string SECID, 
                        string CMNE, 
                        string CUSTODIAN, 
                        string BROK, 
                        string SEGREGATEACCT, 
                        decimal QTY, 
                        decimal YIELD_8, 
                        string CCY, 
                        decimal FACEAMT, 
                        decimal SETTAMT, 
                        string TYPEOFPAYMENT, 
                        string PTI, 
                        string TRADER, 
                        string COMPLETED) {
                TB_TR139PAYSFIRow rowTB_TR139PAYSFIRow = ((TB_TR139PAYSFIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BR,
                        BRANPRCDATE,
                        PRODREPORT,
                        CONDITION,
                        COST,
                        DEALNO,
                        DEALDATE,
                        PORT,
                        SETTDATE,
                        PS,
                        RD,
                        SECID,
                        CMNE,
                        CUSTODIAN,
                        BROK,
                        SEGREGATEACCT,
                        QTY,
                        YIELD_8,
                        CCY,
                        FACEAMT,
                        SETTAMT,
                        TYPEOFPAYMENT,
                        PTI,
                        TRADER,
                        COMPLETED};
                rowTB_TR139PAYSFIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_TR139PAYSFIRow);
                return rowTB_TR139PAYSFIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_TR139PAYSFIDataTable cln = ((TB_TR139PAYSFIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_TR139PAYSFIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBR = base.Columns["BR"];
                this.columnBRANPRCDATE = base.Columns["BRANPRCDATE"];
                this.columnPRODREPORT = base.Columns["PRODREPORT"];
                this.columnCONDITION = base.Columns["CONDITION"];
                this.columnCOST = base.Columns["COST"];
                this.columnDEALNO = base.Columns["DEALNO"];
                this.columnDEALDATE = base.Columns["DEALDATE"];
                this.columnPORT = base.Columns["PORT"];
                this.columnSETTDATE = base.Columns["SETTDATE"];
                this.columnPS = base.Columns["PS"];
                this.columnRD = base.Columns["RD"];
                this.columnSECID = base.Columns["SECID"];
                this.columnCMNE = base.Columns["CMNE"];
                this.columnCUSTODIAN = base.Columns["CUSTODIAN"];
                this.columnBROK = base.Columns["BROK"];
                this.columnSEGREGATEACCT = base.Columns["SEGREGATEACCT"];
                this.columnQTY = base.Columns["QTY"];
                this.columnYIELD_8 = base.Columns["YIELD_8"];
                this.columnCCY = base.Columns["CCY"];
                this.columnFACEAMT = base.Columns["FACEAMT"];
                this.columnSETTAMT = base.Columns["SETTAMT"];
                this.columnTYPEOFPAYMENT = base.Columns["TYPEOFPAYMENT"];
                this.columnPTI = base.Columns["PTI"];
                this.columnTRADER = base.Columns["TRADER"];
                this.columnCOMPLETED = base.Columns["COMPLETED"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBR = new global::System.Data.DataColumn("BR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBR);
                this.columnBRANPRCDATE = new global::System.Data.DataColumn("BRANPRCDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANPRCDATE);
                this.columnPRODREPORT = new global::System.Data.DataColumn("PRODREPORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODREPORT);
                this.columnCONDITION = new global::System.Data.DataColumn("CONDITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONDITION);
                this.columnCOST = new global::System.Data.DataColumn("COST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST);
                this.columnDEALNO = new global::System.Data.DataColumn("DEALNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALNO);
                this.columnDEALDATE = new global::System.Data.DataColumn("DEALDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEALDATE);
                this.columnPORT = new global::System.Data.DataColumn("PORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORT);
                this.columnSETTDATE = new global::System.Data.DataColumn("SETTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTDATE);
                this.columnPS = new global::System.Data.DataColumn("PS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPS);
                this.columnRD = new global::System.Data.DataColumn("RD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRD);
                this.columnSECID = new global::System.Data.DataColumn("SECID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECID);
                this.columnCMNE = new global::System.Data.DataColumn("CMNE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMNE);
                this.columnCUSTODIAN = new global::System.Data.DataColumn("CUSTODIAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTODIAN);
                this.columnBROK = new global::System.Data.DataColumn("BROK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBROK);
                this.columnSEGREGATEACCT = new global::System.Data.DataColumn("SEGREGATEACCT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEGREGATEACCT);
                this.columnQTY = new global::System.Data.DataColumn("QTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTY);
                this.columnYIELD_8 = new global::System.Data.DataColumn("YIELD_8", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYIELD_8);
                this.columnCCY = new global::System.Data.DataColumn("CCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCY);
                this.columnFACEAMT = new global::System.Data.DataColumn("FACEAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFACEAMT);
                this.columnSETTAMT = new global::System.Data.DataColumn("SETTAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTAMT);
                this.columnTYPEOFPAYMENT = new global::System.Data.DataColumn("TYPEOFPAYMENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPEOFPAYMENT);
                this.columnPTI = new global::System.Data.DataColumn("PTI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPTI);
                this.columnTRADER = new global::System.Data.DataColumn("TRADER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRADER);
                this.columnCOMPLETED = new global::System.Data.DataColumn("COMPLETED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPLETED);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR139PAYSFIRow NewTB_TR139PAYSFIRow() {
                return ((TB_TR139PAYSFIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_TR139PAYSFIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_TR139PAYSFIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_TR139PAYSFIRowChanged != null)) {
                    this.TB_TR139PAYSFIRowChanged(this, new TB_TR139PAYSFIRowChangeEvent(((TB_TR139PAYSFIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_TR139PAYSFIRowChanging != null)) {
                    this.TB_TR139PAYSFIRowChanging(this, new TB_TR139PAYSFIRowChangeEvent(((TB_TR139PAYSFIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_TR139PAYSFIRowDeleted != null)) {
                    this.TB_TR139PAYSFIRowDeleted(this, new TB_TR139PAYSFIRowChangeEvent(((TB_TR139PAYSFIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_TR139PAYSFIRowDeleting != null)) {
                    this.TB_TR139PAYSFIRowDeleting(this, new TB_TR139PAYSFIRowChangeEvent(((TB_TR139PAYSFIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_TR139PAYSFIRow(TB_TR139PAYSFIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TR139PAYSFI ds = new DS_TR139PAYSFI();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_TR139PAYSFIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_TR139PAYSFIRow : global::System.Data.DataRow {
            
            private TB_TR139PAYSFIDataTable tableTB_TR139PAYSFI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_TR139PAYSFIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_TR139PAYSFI = ((TB_TR139PAYSFIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BR {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.BRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BR\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.BRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRANPRCDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.BRANPRCDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BRANPRCDATE\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.BRANPRCDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODREPORT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.PRODREPORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODREPORT\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.PRODREPORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONDITION {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.CONDITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONDITION\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.CONDITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COST {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COST\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALNO {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.DEALNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALNO\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.DEALNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEALDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.DEALDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEALDATE\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.DEALDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PORT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.PORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PORT\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.PORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTDATE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.SETTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SETTDATE\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.SETTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PS {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.PSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PS\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.PSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RD {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.RDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RD\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.RDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SECID {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.SECIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SECID\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.SECIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CMNE {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.CMNEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMNE\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.CMNEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTODIAN {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.CUSTODIANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTODIAN\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.CUSTODIANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BROK {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.BROKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BROK\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.BROKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEGREGATEACCT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.SEGREGATEACCTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEGREGATEACCT\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.SEGREGATEACCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QTY {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR139PAYSFI.QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QTY\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal YIELD_8 {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR139PAYSFI.YIELD_8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YIELD_8\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.YIELD_8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CCY {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.CCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CCY\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.CCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FACEAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR139PAYSFI.FACEAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FACEAMT\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.FACEAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SETTAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableTB_TR139PAYSFI.SETTAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SETTAMT\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.SETTAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPEOFPAYMENT {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.TYPEOFPAYMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPEOFPAYMENT\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.TYPEOFPAYMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PTI {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.PTIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PTI\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.PTIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRADER {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.TRADERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRADER\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.TRADERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPLETED {
                get {
                    try {
                        return ((string)(this[this.tableTB_TR139PAYSFI.COMPLETEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPLETED\' in table \'TB_TR139PAYSFI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTB_TR139PAYSFI.COMPLETEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.BRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRNull() {
                this[this.tableTB_TR139PAYSFI.BRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRANPRCDATENull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.BRANPRCDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRANPRCDATENull() {
                this[this.tableTB_TR139PAYSFI.BRANPRCDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODREPORTNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.PRODREPORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODREPORTNull() {
                this[this.tableTB_TR139PAYSFI.PRODREPORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONDITIONNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.CONDITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONDITIONNull() {
                this[this.tableTB_TR139PAYSFI.CONDITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOSTNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOSTNull() {
                this[this.tableTB_TR139PAYSFI.COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALNONull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.DEALNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALNONull() {
                this[this.tableTB_TR139PAYSFI.DEALNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEALDATENull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.DEALDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEALDATENull() {
                this[this.tableTB_TR139PAYSFI.DEALDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPORTNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.PORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPORTNull() {
                this[this.tableTB_TR139PAYSFI.PORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETTDATENull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.SETTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETTDATENull() {
                this[this.tableTB_TR139PAYSFI.SETTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPSNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.PSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPSNull() {
                this[this.tableTB_TR139PAYSFI.PSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRDNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.RDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRDNull() {
                this[this.tableTB_TR139PAYSFI.RDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSECIDNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.SECIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSECIDNull() {
                this[this.tableTB_TR139PAYSFI.SECIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMNENull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.CMNEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMNENull() {
                this[this.tableTB_TR139PAYSFI.CMNEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTODIANNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.CUSTODIANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTODIANNull() {
                this[this.tableTB_TR139PAYSFI.CUSTODIANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBROKNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.BROKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBROKNull() {
                this[this.tableTB_TR139PAYSFI.BROKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEGREGATEACCTNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.SEGREGATEACCTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEGREGATEACCTNull() {
                this[this.tableTB_TR139PAYSFI.SEGREGATEACCTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTYNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTYNull() {
                this[this.tableTB_TR139PAYSFI.QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYIELD_8Null() {
                return this.IsNull(this.tableTB_TR139PAYSFI.YIELD_8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYIELD_8Null() {
                this[this.tableTB_TR139PAYSFI.YIELD_8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCCYNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.CCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCCYNull() {
                this[this.tableTB_TR139PAYSFI.CCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFACEAMTNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.FACEAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFACEAMTNull() {
                this[this.tableTB_TR139PAYSFI.FACEAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETTAMTNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.SETTAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETTAMTNull() {
                this[this.tableTB_TR139PAYSFI.SETTAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPEOFPAYMENTNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.TYPEOFPAYMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPEOFPAYMENTNull() {
                this[this.tableTB_TR139PAYSFI.TYPEOFPAYMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPTINull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.PTIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPTINull() {
                this[this.tableTB_TR139PAYSFI.PTIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRADERNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.TRADERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRADERNull() {
                this[this.tableTB_TR139PAYSFI.TRADERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPLETEDNull() {
                return this.IsNull(this.tableTB_TR139PAYSFI.COMPLETEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPLETEDNull() {
                this[this.tableTB_TR139PAYSFI.COMPLETEDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_TR139PAYSFIRowChangeEvent : global::System.EventArgs {
            
            private TB_TR139PAYSFIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR139PAYSFIRowChangeEvent(TB_TR139PAYSFIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_TR139PAYSFIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591